
disp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000128  00800100  000033d8  0000346c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000033d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00001024  00800228  00800228  00003594  2**0
                  ALLOC
  3 .debug_aranges 00000200  00000000  00000000  00003594  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000042e  00000000  00000000  00003794  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002e04  00000000  00000000  00003bc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000174d  00000000  00000000  000069c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001ded  00000000  00000000  00008113  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000340  00000000  00000000  00009f00  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000552  00000000  00000000  0000a240  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000096e  00000000  00000000  0000a792  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  0000b100  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bf 01 	jmp	0x37e	; 0x37e <__ctors_end>
       4:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
       8:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
       c:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      10:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      14:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      18:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      1c:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      20:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      24:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      28:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      2c:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      30:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      34:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      38:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      3c:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      40:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      44:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      48:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      4c:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      50:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      54:	0c 94 40 07 	jmp	0xe80	; 0xe80 <__vector_21>
      58:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      5c:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      60:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      64:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      68:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      6c:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      70:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      74:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      78:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      7c:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      80:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      84:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>
      88:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__bad_interrupt>

0000008c <__c.1790>:
      8c:	6e 61 6e 00                                         nan.

00000090 <__c.1788>:
      90:	69 6e 66 00                                         inf.

00000094 <font5x7>:
      94:	00 00 00 00 00 00 00 2f 00 00 00 07 00 07 00 14     ......./........
      a4:	7f 14 7f 14 24 2a 7f 2a 12 32 34 08 16 26 36 49     ....$*.*.24..&6I
      b4:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      c4:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 00 50 30     ....>....>....P0
      d4:	00 10 10 10 10 10 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      e4:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      f4:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     104:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     114:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     124:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     134:	32 49 59 51 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IYQ>~...~.III6>
     144:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     154:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     164:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     174:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     184:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     194:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     1a4:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     1b4:	08 07 61 51 49 45 43 00 7f 41 41 00 55 2a 55 2a     ..aQIEC..AA.U*U*
     1c4:	55 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40     U.AA.......@@@@@
     1d4:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1e4:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1f4:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     204:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     214:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     224:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     234:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     244:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     254:	50 3c 44 64 54 4c 44 00 7f 3e 1c 08 08 1c 3e 7f     P<DdTLD..>....>.
     264:	00 08 7c 7e 7c 08 10 3e 7e 3e 10 3e 3e 3e 3e 3e     ..|~|..>~>.>>>>>
     274:	00 7f 3e 1c 08 0e 11 11 11 0e 7f 00 00 00 00 00     ..>.............
     284:	40 7a 10 f3 5a 00 a0 72 4e 18 09 00 10 a5 d4 e8     @z..Z..rN.......
     294:	00 00 e8 76 48 17 00 00 e4 0b 54 02 00 00 ca 9a     ...vH.....T.....
     2a4:	3b 00 00 00 e1 f5 05 00 00 80 96 98 00 00 00 40     ;..............@
     2b4:	42 0f 00 00 00 a0 86 01 00 00 00 10 27 00 00 00     B...........'...
     2c4:	00 e8 03 00 00 00 00 64 00 00 00 00 00 0a 00 00     .......d........
     2d4:	00 00 00 01 00 00 00 00 00 2c 76 d8 88 dc 67 4f     .........,v...gO
     2e4:	08 23 df c1 df ae 59 e1 b1 b7 96 e5 e3 e4 53 c6     .#....Y.......S.
     2f4:	3a e6 51 99 76 96 e8 e6 c2 84 26 eb 89 8c 9b 62     :.Q.v.....&....b
     304:	ed 40 7c 6f fc ef bc 9c 9f 40 f2 ba a5 6f a5 f4     .@|o.....@...o..
     314:	90 05 5a 2a f7 5c 93 6b 6c f9 67 6d c1 1b fc e0     ..Z*.\.kl.gm....
     324:	e4 0d 47 fe f5 20 e6 b5 00 d0 ed 90 2e 03 00 94     ..G.. ..........
     334:	35 77 05 00 80 84 1e 08 00 00 20 4e 0a 00 00 00     5w........ N....
     344:	c8 0c 33 33 33 33 0f 98 6e 12 83 11 41 ef 8d 21     ..3333..n...A..!
     354:	14 89 3b e6 55 16 cf fe e6 db 18 d1 84 4b 38 1b     ..;.U........K8.
     364:	f7 7c 1d 90 1d a4 bb e4 24 20 32 84 72 5e 22 81     .|......$ 2.r^".
     374:	00 c9 f1 24 ec a1 e5 3d 27 00                       ...$...='.

0000037e <__ctors_end>:
     37e:	11 24       	eor	r1, r1
     380:	1f be       	out	0x3f, r1	; 63
     382:	cf ef       	ldi	r28, 0xFF	; 255
     384:	d0 e1       	ldi	r29, 0x10	; 16
     386:	de bf       	out	0x3e, r29	; 62
     388:	cd bf       	out	0x3d, r28	; 61

0000038a <__do_copy_data>:
     38a:	12 e0       	ldi	r17, 0x02	; 2
     38c:	a0 e0       	ldi	r26, 0x00	; 0
     38e:	b1 e0       	ldi	r27, 0x01	; 1
     390:	e8 ed       	ldi	r30, 0xD8	; 216
     392:	f3 e3       	ldi	r31, 0x33	; 51
     394:	00 e0       	ldi	r16, 0x00	; 0
     396:	0b bf       	out	0x3b, r16	; 59
     398:	02 c0       	rjmp	.+4      	; 0x39e <__do_copy_data+0x14>
     39a:	07 90       	elpm	r0, Z+
     39c:	0d 92       	st	X+, r0
     39e:	a8 32       	cpi	r26, 0x28	; 40
     3a0:	b1 07       	cpc	r27, r17
     3a2:	d9 f7       	brne	.-10     	; 0x39a <__do_copy_data+0x10>

000003a4 <__do_clear_bss>:
     3a4:	12 e1       	ldi	r17, 0x12	; 18
     3a6:	a8 e2       	ldi	r26, 0x28	; 40
     3a8:	b2 e0       	ldi	r27, 0x02	; 2
     3aa:	01 c0       	rjmp	.+2      	; 0x3ae <.do_clear_bss_start>

000003ac <.do_clear_bss_loop>:
     3ac:	1d 92       	st	X+, r1

000003ae <.do_clear_bss_start>:
     3ae:	ac 34       	cpi	r26, 0x4C	; 76
     3b0:	b1 07       	cpc	r27, r17
     3b2:	e1 f7       	brne	.-8      	; 0x3ac <.do_clear_bss_loop>
     3b4:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <main>
     3b8:	0c 94 ea 19 	jmp	0x33d4	; 0x33d4 <_exit>

000003bc <__bad_interrupt>:
     3bc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003c0 <main>:
/********************************
	main 

	*******************************/
	int main(void)
{
     3c0:	df 93       	push	r29
     3c2:	cf 93       	push	r28
     3c4:	cd b7       	in	r28, 0x3d	; 61
     3c6:	de b7       	in	r29, 0x3e	; 62
     3c8:	6e 97       	sbiw	r28, 0x1e	; 30
     3ca:	0f b6       	in	r0, 0x3f	; 63
     3cc:	f8 94       	cli
     3ce:	de bf       	out	0x3e, r29	; 62
     3d0:	0f be       	out	0x3f, r0	; 63
     3d2:	cd bf       	out	0x3d, r28	; 61
	int i;


	//Kytkimet sis‰‰ntuloja
	DDRD &= ~((1<<SW1) | (1<<SW2) | (1<<SW3) | (1<<SW4) | (1<<SW5));
     3d4:	a1 e3       	ldi	r26, 0x31	; 49
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e1 e3       	ldi	r30, 0x31	; 49
     3da:	f0 e0       	ldi	r31, 0x00	; 0
     3dc:	80 81       	ld	r24, Z
     3de:	80 7e       	andi	r24, 0xE0	; 224
     3e0:	8c 93       	st	X, r24
	debug = 1;
     3e2:	81 e0       	ldi	r24, 0x01	; 1
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	90 93 3b 02 	sts	0x023B, r25
     3ea:	80 93 3a 02 	sts	0x023A, r24
	joystick = 1;
     3ee:	81 e0       	ldi	r24, 0x01	; 1
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	90 93 41 02 	sts	0x0241, r25
     3f6:	80 93 40 02 	sts	0x0240, r24


	ADCSRA |= 1<<ADPS2; 			//Esijakaja 64 -> Taajuus sopivaksi AD-muuntimelle
     3fa:	a6 e2       	ldi	r26, 0x26	; 38
     3fc:	b0 e0       	ldi	r27, 0x00	; 0
     3fe:	e6 e2       	ldi	r30, 0x26	; 38
     400:	f0 e0       	ldi	r31, 0x00	; 0
     402:	80 81       	ld	r24, Z
     404:	84 60       	ori	r24, 0x04	; 4
     406:	8c 93       	st	X, r24
	ADCSRA |= 1<<ADPS1;
     408:	a6 e2       	ldi	r26, 0x26	; 38
     40a:	b0 e0       	ldi	r27, 0x00	; 0
     40c:	e6 e2       	ldi	r30, 0x26	; 38
     40e:	f0 e0       	ldi	r31, 0x00	; 0
     410:	80 81       	ld	r24, Z
     412:	82 60       	ori	r24, 0x02	; 2
     414:	8c 93       	st	X, r24
	ADMUX |=1<<ADLAR;				// ADC result left adjusted
     416:	a7 e2       	ldi	r26, 0x27	; 39
     418:	b0 e0       	ldi	r27, 0x00	; 0
     41a:	e7 e2       	ldi	r30, 0x27	; 39
     41c:	f0 e0       	ldi	r31, 0x00	; 0
     41e:	80 81       	ld	r24, Z
     420:	80 62       	ori	r24, 0x20	; 32
     422:	8c 93       	st	X, r24
	ADMUX &=~(1<<REFS0);
     424:	a7 e2       	ldi	r26, 0x27	; 39
     426:	b0 e0       	ldi	r27, 0x00	; 0
     428:	e7 e2       	ldi	r30, 0x27	; 39
     42a:	f0 e0       	ldi	r31, 0x00	; 0
     42c:	80 81       	ld	r24, Z
     42e:	8f 7b       	andi	r24, 0xBF	; 191
     430:	8c 93       	st	X, r24
	ADMUX &= ~(1<<REFS1);			//Avcc(+5v) muuntimen referenssij‰nnitteeksi
     432:	a7 e2       	ldi	r26, 0x27	; 39
     434:	b0 e0       	ldi	r27, 0x00	; 0
     436:	e7 e2       	ldi	r30, 0x27	; 39
     438:	f0 e0       	ldi	r31, 0x00	; 0
     43a:	80 81       	ld	r24, Z
     43c:	8f 77       	andi	r24, 0x7F	; 127
     43e:	8c 93       	st	X, r24
	ADCSRA |= 1<<ADIE;				//ADC Interrupt Enable
     440:	a6 e2       	ldi	r26, 0x26	; 38
     442:	b0 e0       	ldi	r27, 0x00	; 0
     444:	e6 e2       	ldi	r30, 0x26	; 38
     446:	f0 e0       	ldi	r31, 0x00	; 0
     448:	80 81       	ld	r24, Z
     44a:	88 60       	ori	r24, 0x08	; 8
     44c:	8c 93       	st	X, r24
	ADCSRA |= 1<<ADEN;				//K‰ynnistet‰‰n AD-muunnin
     44e:	a6 e2       	ldi	r26, 0x26	; 38
     450:	b0 e0       	ldi	r27, 0x00	; 0
     452:	e6 e2       	ldi	r30, 0x26	; 38
     454:	f0 e0       	ldi	r31, 0x00	; 0
     456:	80 81       	ld	r24, Z
     458:	80 68       	ori	r24, 0x80	; 128
     45a:	8c 93       	st	X, r24

	sei();							//Sallitaan keskeytykset
     45c:	78 94       	sei

	lcd_init();						//N‰ytˆn alustus
     45e:	0e 94 c7 07 	call	0xf8e	; 0xf8e <lcd_init>

	lcd_clear();					//N‰ytˆn tyhjennys
     462:	0e 94 84 09 	call	0x1308	; 0x1308 <lcd_clear>

	x=1;							//Osoittimen aloituspiste
     466:	81 e0       	ldi	r24, 0x01	; 1
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	90 93 39 02 	sts	0x0239, r25
     46e:	80 93 38 02 	sts	0x0238, r24
	y=0;
     472:	10 92 43 02 	sts	0x0243, r1
     476:	10 92 42 02 	sts	0x0242, r1

	lcd_goto_xy(x,y);
     47a:	80 91 38 02 	lds	r24, 0x0238
     47e:	90 91 39 02 	lds	r25, 0x0239
     482:	28 2f       	mov	r18, r24
     484:	80 91 42 02 	lds	r24, 0x0242
     488:	90 91 43 02 	lds	r25, 0x0243
     48c:	98 2f       	mov	r25, r24
     48e:	82 2f       	mov	r24, r18
     490:	69 2f       	mov	r22, r25
     492:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
	lcd_chr(132);
     496:	84 e8       	ldi	r24, 0x84	; 132
     498:	0e 94 22 0a 	call	0x1444	; 0x1444 <lcd_chr>

	while(1)
	{
		drawOutlines();
     49c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <drawOutlines>

		if ((~Switch & (1<<SW5)) != 0)
     4a0:	e0 e3       	ldi	r30, 0x30	; 48
     4a2:	f0 e0       	ldi	r31, 0x00	; 0
     4a4:	80 81       	ld	r24, Z
     4a6:	88 2f       	mov	r24, r24
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	80 71       	andi	r24, 0x10	; 16
     4ac:	90 70       	andi	r25, 0x00	; 0
     4ae:	00 97       	sbiw	r24, 0x00	; 0
     4b0:	09 f0       	breq	.+2      	; 0x4b4 <main+0xf4>
     4b2:	80 c0       	rjmp	.+256    	; 0x5b4 <main+0x1f4>
		{
			debug = 1-debug;
     4b4:	20 91 3a 02 	lds	r18, 0x023A
     4b8:	30 91 3b 02 	lds	r19, 0x023B
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	82 1b       	sub	r24, r18
     4c2:	93 0b       	sbc	r25, r19
     4c4:	90 93 3b 02 	sts	0x023B, r25
     4c8:	80 93 3a 02 	sts	0x023A, r24
			clearDebug();
     4cc:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <clearDebug>
     4d0:	80 e0       	ldi	r24, 0x00	; 0
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	a0 ef       	ldi	r26, 0xF0	; 240
     4d6:	b1 e4       	ldi	r27, 0x41	; 65
     4d8:	89 8f       	std	Y+25, r24	; 0x19
     4da:	9a 8f       	std	Y+26, r25	; 0x1a
     4dc:	ab 8f       	std	Y+27, r26	; 0x1b
     4de:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     4e0:	69 8d       	ldd	r22, Y+25	; 0x19
     4e2:	7a 8d       	ldd	r23, Y+26	; 0x1a
     4e4:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4e6:	9c 8d       	ldd	r25, Y+28	; 0x1c
     4e8:	20 e0       	ldi	r18, 0x00	; 0
     4ea:	30 e0       	ldi	r19, 0x00	; 0
     4ec:	4a e7       	ldi	r20, 0x7A	; 122
     4ee:	53 e4       	ldi	r21, 0x43	; 67
     4f0:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
     4f4:	dc 01       	movw	r26, r24
     4f6:	cb 01       	movw	r24, r22
     4f8:	8d 8b       	std	Y+21, r24	; 0x15
     4fa:	9e 8b       	std	Y+22, r25	; 0x16
     4fc:	af 8b       	std	Y+23, r26	; 0x17
     4fe:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     500:	6d 89       	ldd	r22, Y+21	; 0x15
     502:	7e 89       	ldd	r23, Y+22	; 0x16
     504:	8f 89       	ldd	r24, Y+23	; 0x17
     506:	98 8d       	ldd	r25, Y+24	; 0x18
     508:	20 e0       	ldi	r18, 0x00	; 0
     50a:	30 e0       	ldi	r19, 0x00	; 0
     50c:	40 e8       	ldi	r20, 0x80	; 128
     50e:	5f e3       	ldi	r21, 0x3F	; 63
     510:	0e 94 68 11 	call	0x22d0	; 0x22d0 <__ltsf2>
     514:	88 23       	and	r24, r24
     516:	2c f4       	brge	.+10     	; 0x522 <main+0x162>
		__ticks = 1;
     518:	81 e0       	ldi	r24, 0x01	; 1
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	9c 8b       	std	Y+20, r25	; 0x14
     51e:	8b 8b       	std	Y+19, r24	; 0x13
     520:	3f c0       	rjmp	.+126    	; 0x5a0 <main+0x1e0>
	else if (__tmp > 65535)
     522:	6d 89       	ldd	r22, Y+21	; 0x15
     524:	7e 89       	ldd	r23, Y+22	; 0x16
     526:	8f 89       	ldd	r24, Y+23	; 0x17
     528:	98 8d       	ldd	r25, Y+24	; 0x18
     52a:	20 e0       	ldi	r18, 0x00	; 0
     52c:	3f ef       	ldi	r19, 0xFF	; 255
     52e:	4f e7       	ldi	r20, 0x7F	; 127
     530:	57 e4       	ldi	r21, 0x47	; 71
     532:	0e 94 08 11 	call	0x2210	; 0x2210 <__gtsf2>
     536:	18 16       	cp	r1, r24
     538:	4c f5       	brge	.+82     	; 0x58c <main+0x1cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     53a:	69 8d       	ldd	r22, Y+25	; 0x19
     53c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     53e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     540:	9c 8d       	ldd	r25, Y+28	; 0x1c
     542:	20 e0       	ldi	r18, 0x00	; 0
     544:	30 e0       	ldi	r19, 0x00	; 0
     546:	40 e2       	ldi	r20, 0x20	; 32
     548:	51 e4       	ldi	r21, 0x41	; 65
     54a:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
     54e:	dc 01       	movw	r26, r24
     550:	cb 01       	movw	r24, r22
     552:	bc 01       	movw	r22, r24
     554:	cd 01       	movw	r24, r26
     556:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixunssfsi>
     55a:	dc 01       	movw	r26, r24
     55c:	cb 01       	movw	r24, r22
     55e:	9c 8b       	std	Y+20, r25	; 0x14
     560:	8b 8b       	std	Y+19, r24	; 0x13
     562:	0f c0       	rjmp	.+30     	; 0x582 <main+0x1c2>
     564:	89 e1       	ldi	r24, 0x19	; 25
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	9a 8b       	std	Y+18, r25	; 0x12
     56a:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     56c:	89 89       	ldd	r24, Y+17	; 0x11
     56e:	9a 89       	ldd	r25, Y+18	; 0x12
     570:	01 97       	sbiw	r24, 0x01	; 1
     572:	f1 f7       	brne	.-4      	; 0x570 <main+0x1b0>
     574:	9a 8b       	std	Y+18, r25	; 0x12
     576:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     578:	8b 89       	ldd	r24, Y+19	; 0x13
     57a:	9c 89       	ldd	r25, Y+20	; 0x14
     57c:	01 97       	sbiw	r24, 0x01	; 1
     57e:	9c 8b       	std	Y+20, r25	; 0x14
     580:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     582:	8b 89       	ldd	r24, Y+19	; 0x13
     584:	9c 89       	ldd	r25, Y+20	; 0x14
     586:	00 97       	sbiw	r24, 0x00	; 0
     588:	69 f7       	brne	.-38     	; 0x564 <main+0x1a4>
     58a:	14 c0       	rjmp	.+40     	; 0x5b4 <main+0x1f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     58c:	6d 89       	ldd	r22, Y+21	; 0x15
     58e:	7e 89       	ldd	r23, Y+22	; 0x16
     590:	8f 89       	ldd	r24, Y+23	; 0x17
     592:	98 8d       	ldd	r25, Y+24	; 0x18
     594:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixunssfsi>
     598:	dc 01       	movw	r26, r24
     59a:	cb 01       	movw	r24, r22
     59c:	9c 8b       	std	Y+20, r25	; 0x14
     59e:	8b 8b       	std	Y+19, r24	; 0x13
     5a0:	8b 89       	ldd	r24, Y+19	; 0x13
     5a2:	9c 89       	ldd	r25, Y+20	; 0x14
     5a4:	98 8b       	std	Y+16, r25	; 0x10
     5a6:	8f 87       	std	Y+15, r24	; 0x0f
     5a8:	8f 85       	ldd	r24, Y+15	; 0x0f
     5aa:	98 89       	ldd	r25, Y+16	; 0x10
     5ac:	01 97       	sbiw	r24, 0x01	; 1
     5ae:	f1 f7       	brne	.-4      	; 0x5ac <main+0x1ec>
     5b0:	98 8b       	std	Y+16, r25	; 0x10
     5b2:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(30);
		}
		if (debug == 1)
     5b4:	80 91 3a 02 	lds	r24, 0x023A
     5b8:	90 91 3b 02 	lds	r25, 0x023B
     5bc:	81 30       	cpi	r24, 0x01	; 1
     5be:	91 05       	cpc	r25, r1
     5c0:	11 f4       	brne	.+4      	; 0x5c6 <main+0x206>
			showDebug();
     5c2:	0e 94 de 03 	call	0x7bc	; 0x7bc <showDebug>

		if ((~Switch & (1<<SW3)) != 0)
     5c6:	e0 e3       	ldi	r30, 0x30	; 48
     5c8:	f0 e0       	ldi	r31, 0x00	; 0
     5ca:	80 81       	ld	r24, Z
     5cc:	88 2f       	mov	r24, r24
     5ce:	90 e0       	ldi	r25, 0x00	; 0
     5d0:	84 70       	andi	r24, 0x04	; 4
     5d2:	90 70       	andi	r25, 0x00	; 0
     5d4:	00 97       	sbiw	r24, 0x00	; 0
     5d6:	09 f0       	breq	.+2      	; 0x5da <main+0x21a>
     5d8:	80 c0       	rjmp	.+256    	; 0x6da <main+0x31a>
		{
			joystick = 1-joystick;
     5da:	20 91 40 02 	lds	r18, 0x0240
     5de:	30 91 41 02 	lds	r19, 0x0241
     5e2:	81 e0       	ldi	r24, 0x01	; 1
     5e4:	90 e0       	ldi	r25, 0x00	; 0
     5e6:	82 1b       	sub	r24, r18
     5e8:	93 0b       	sbc	r25, r19
     5ea:	90 93 41 02 	sts	0x0241, r25
     5ee:	80 93 40 02 	sts	0x0240, r24
			clearDebug();
     5f2:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <clearDebug>
     5f6:	80 e0       	ldi	r24, 0x00	; 0
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	a0 ef       	ldi	r26, 0xF0	; 240
     5fc:	b1 e4       	ldi	r27, 0x41	; 65
     5fe:	8b 87       	std	Y+11, r24	; 0x0b
     600:	9c 87       	std	Y+12, r25	; 0x0c
     602:	ad 87       	std	Y+13, r26	; 0x0d
     604:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     606:	6b 85       	ldd	r22, Y+11	; 0x0b
     608:	7c 85       	ldd	r23, Y+12	; 0x0c
     60a:	8d 85       	ldd	r24, Y+13	; 0x0d
     60c:	9e 85       	ldd	r25, Y+14	; 0x0e
     60e:	20 e0       	ldi	r18, 0x00	; 0
     610:	30 e0       	ldi	r19, 0x00	; 0
     612:	4a e7       	ldi	r20, 0x7A	; 122
     614:	53 e4       	ldi	r21, 0x43	; 67
     616:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
     61a:	dc 01       	movw	r26, r24
     61c:	cb 01       	movw	r24, r22
     61e:	8f 83       	std	Y+7, r24	; 0x07
     620:	98 87       	std	Y+8, r25	; 0x08
     622:	a9 87       	std	Y+9, r26	; 0x09
     624:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     626:	6f 81       	ldd	r22, Y+7	; 0x07
     628:	78 85       	ldd	r23, Y+8	; 0x08
     62a:	89 85       	ldd	r24, Y+9	; 0x09
     62c:	9a 85       	ldd	r25, Y+10	; 0x0a
     62e:	20 e0       	ldi	r18, 0x00	; 0
     630:	30 e0       	ldi	r19, 0x00	; 0
     632:	40 e8       	ldi	r20, 0x80	; 128
     634:	5f e3       	ldi	r21, 0x3F	; 63
     636:	0e 94 68 11 	call	0x22d0	; 0x22d0 <__ltsf2>
     63a:	88 23       	and	r24, r24
     63c:	2c f4       	brge	.+10     	; 0x648 <main+0x288>
		__ticks = 1;
     63e:	81 e0       	ldi	r24, 0x01	; 1
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	9e 83       	std	Y+6, r25	; 0x06
     644:	8d 83       	std	Y+5, r24	; 0x05
     646:	3f c0       	rjmp	.+126    	; 0x6c6 <main+0x306>
	else if (__tmp > 65535)
     648:	6f 81       	ldd	r22, Y+7	; 0x07
     64a:	78 85       	ldd	r23, Y+8	; 0x08
     64c:	89 85       	ldd	r24, Y+9	; 0x09
     64e:	9a 85       	ldd	r25, Y+10	; 0x0a
     650:	20 e0       	ldi	r18, 0x00	; 0
     652:	3f ef       	ldi	r19, 0xFF	; 255
     654:	4f e7       	ldi	r20, 0x7F	; 127
     656:	57 e4       	ldi	r21, 0x47	; 71
     658:	0e 94 08 11 	call	0x2210	; 0x2210 <__gtsf2>
     65c:	18 16       	cp	r1, r24
     65e:	4c f5       	brge	.+82     	; 0x6b2 <main+0x2f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     660:	6b 85       	ldd	r22, Y+11	; 0x0b
     662:	7c 85       	ldd	r23, Y+12	; 0x0c
     664:	8d 85       	ldd	r24, Y+13	; 0x0d
     666:	9e 85       	ldd	r25, Y+14	; 0x0e
     668:	20 e0       	ldi	r18, 0x00	; 0
     66a:	30 e0       	ldi	r19, 0x00	; 0
     66c:	40 e2       	ldi	r20, 0x20	; 32
     66e:	51 e4       	ldi	r21, 0x41	; 65
     670:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
     674:	dc 01       	movw	r26, r24
     676:	cb 01       	movw	r24, r22
     678:	bc 01       	movw	r22, r24
     67a:	cd 01       	movw	r24, r26
     67c:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixunssfsi>
     680:	dc 01       	movw	r26, r24
     682:	cb 01       	movw	r24, r22
     684:	9e 83       	std	Y+6, r25	; 0x06
     686:	8d 83       	std	Y+5, r24	; 0x05
     688:	0f c0       	rjmp	.+30     	; 0x6a8 <main+0x2e8>
     68a:	89 e1       	ldi	r24, 0x19	; 25
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	9c 83       	std	Y+4, r25	; 0x04
     690:	8b 83       	std	Y+3, r24	; 0x03
     692:	8b 81       	ldd	r24, Y+3	; 0x03
     694:	9c 81       	ldd	r25, Y+4	; 0x04
     696:	01 97       	sbiw	r24, 0x01	; 1
     698:	f1 f7       	brne	.-4      	; 0x696 <main+0x2d6>
     69a:	9c 83       	std	Y+4, r25	; 0x04
     69c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     69e:	8d 81       	ldd	r24, Y+5	; 0x05
     6a0:	9e 81       	ldd	r25, Y+6	; 0x06
     6a2:	01 97       	sbiw	r24, 0x01	; 1
     6a4:	9e 83       	std	Y+6, r25	; 0x06
     6a6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6a8:	8d 81       	ldd	r24, Y+5	; 0x05
     6aa:	9e 81       	ldd	r25, Y+6	; 0x06
     6ac:	00 97       	sbiw	r24, 0x00	; 0
     6ae:	69 f7       	brne	.-38     	; 0x68a <main+0x2ca>
     6b0:	14 c0       	rjmp	.+40     	; 0x6da <main+0x31a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6b2:	6f 81       	ldd	r22, Y+7	; 0x07
     6b4:	78 85       	ldd	r23, Y+8	; 0x08
     6b6:	89 85       	ldd	r24, Y+9	; 0x09
     6b8:	9a 85       	ldd	r25, Y+10	; 0x0a
     6ba:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixunssfsi>
     6be:	dc 01       	movw	r26, r24
     6c0:	cb 01       	movw	r24, r22
     6c2:	9e 83       	std	Y+6, r25	; 0x06
     6c4:	8d 83       	std	Y+5, r24	; 0x05
     6c6:	8d 81       	ldd	r24, Y+5	; 0x05
     6c8:	9e 81       	ldd	r25, Y+6	; 0x06
     6ca:	9a 83       	std	Y+2, r25	; 0x02
     6cc:	89 83       	std	Y+1, r24	; 0x01
     6ce:	89 81       	ldd	r24, Y+1	; 0x01
     6d0:	9a 81       	ldd	r25, Y+2	; 0x02
     6d2:	01 97       	sbiw	r24, 0x01	; 1
     6d4:	f1 f7       	brne	.-4      	; 0x6d2 <main+0x312>
     6d6:	9a 83       	std	Y+2, r25	; 0x02
     6d8:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(30);
		}

		if (joystick)
     6da:	80 91 40 02 	lds	r24, 0x0240
     6de:	90 91 41 02 	lds	r25, 0x0241
     6e2:	00 97       	sbiw	r24, 0x00	; 0
     6e4:	09 f4       	brne	.+2      	; 0x6e8 <main+0x328>
     6e6:	da ce       	rjmp	.-588    	; 0x49c <main+0xdc>
		{
			readJoystick();
     6e8:	0e 94 79 04 	call	0x8f2	; 0x8f2 <readJoystick>
			moveCursor();
     6ec:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <moveCursor>
     6f0:	d5 ce       	rjmp	.-598    	; 0x49c <main+0xdc>

000006f2 <drawOutlines>:


}

void drawOutlines()
{
     6f2:	df 93       	push	r29
     6f4:	cf 93       	push	r28
     6f6:	00 d0       	rcall	.+0      	; 0x6f8 <drawOutlines+0x6>
     6f8:	00 d0       	rcall	.+0      	; 0x6fa <drawOutlines+0x8>
     6fa:	cd b7       	in	r28, 0x3d	; 61
     6fc:	de b7       	in	r29, 0x3e	; 62
	lcd_goto_xy(1,0);
     6fe:	81 e0       	ldi	r24, 0x01	; 1
     700:	60 e0       	ldi	r22, 0x00	; 0
     702:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
	lcd_chr(148);
     706:	84 e9       	ldi	r24, 0x94	; 148
     708:	0e 94 22 0a 	call	0x1444	; 0x1444 <lcd_chr>
	lcd_goto_xy(21,0);
     70c:	85 e1       	ldi	r24, 0x15	; 21
     70e:	60 e0       	ldi	r22, 0x00	; 0
     710:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
	lcd_chr(150);
     714:	86 e9       	ldi	r24, 0x96	; 150
     716:	0e 94 22 0a 	call	0x1444	; 0x1444 <lcd_chr>
	lcd_goto_xy(21,7);
     71a:	85 e1       	ldi	r24, 0x15	; 21
     71c:	67 e0       	ldi	r22, 0x07	; 7
     71e:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
	lcd_chr(152);
     722:	88 e9       	ldi	r24, 0x98	; 152
     724:	0e 94 22 0a 	call	0x1444	; 0x1444 <lcd_chr>
	lcd_goto_xy(1,7);
     728:	81 e0       	ldi	r24, 0x01	; 1
     72a:	67 e0       	ldi	r22, 0x07	; 7
     72c:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
	lcd_chr(154);
     730:	8a e9       	ldi	r24, 0x9A	; 154
     732:	0e 94 22 0a 	call	0x1444	; 0x1444 <lcd_chr>

	for (int i = 2; i <=20; i++)
     736:	82 e0       	ldi	r24, 0x02	; 2
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	9c 83       	std	Y+4, r25	; 0x04
     73c:	8b 83       	std	Y+3, r24	; 0x03
     73e:	13 c0       	rjmp	.+38     	; 0x766 <drawOutlines+0x74>
	{
		lcd_goto_xy(i,0);
     740:	8b 81       	ldd	r24, Y+3	; 0x03
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
		lcd_chr(149);
     748:	85 e9       	ldi	r24, 0x95	; 149
     74a:	0e 94 22 0a 	call	0x1444	; 0x1444 <lcd_chr>
		lcd_goto_xy(i,7);
     74e:	8b 81       	ldd	r24, Y+3	; 0x03
     750:	67 e0       	ldi	r22, 0x07	; 7
     752:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
		lcd_chr(153);
     756:	89 e9       	ldi	r24, 0x99	; 153
     758:	0e 94 22 0a 	call	0x1444	; 0x1444 <lcd_chr>
	lcd_goto_xy(21,7);
	lcd_chr(152);
	lcd_goto_xy(1,7);
	lcd_chr(154);

	for (int i = 2; i <=20; i++)
     75c:	8b 81       	ldd	r24, Y+3	; 0x03
     75e:	9c 81       	ldd	r25, Y+4	; 0x04
     760:	01 96       	adiw	r24, 0x01	; 1
     762:	9c 83       	std	Y+4, r25	; 0x04
     764:	8b 83       	std	Y+3, r24	; 0x03
     766:	8b 81       	ldd	r24, Y+3	; 0x03
     768:	9c 81       	ldd	r25, Y+4	; 0x04
     76a:	85 31       	cpi	r24, 0x15	; 21
     76c:	91 05       	cpc	r25, r1
     76e:	44 f3       	brlt	.-48     	; 0x740 <drawOutlines+0x4e>
		lcd_chr(149);
		lcd_goto_xy(i,7);
		lcd_chr(153);
	}

	for (int i = 1; i < 7; i++)
     770:	81 e0       	ldi	r24, 0x01	; 1
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	9a 83       	std	Y+2, r25	; 0x02
     776:	89 83       	std	Y+1, r24	; 0x01
     778:	15 c0       	rjmp	.+42     	; 0x7a4 <drawOutlines+0xb2>
	{
		lcd_goto_xy(21,i);
     77a:	99 81       	ldd	r25, Y+1	; 0x01
     77c:	85 e1       	ldi	r24, 0x15	; 21
     77e:	69 2f       	mov	r22, r25
     780:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
		lcd_chr(151);
     784:	87 e9       	ldi	r24, 0x97	; 151
     786:	0e 94 22 0a 	call	0x1444	; 0x1444 <lcd_chr>
		lcd_goto_xy(1,i);
     78a:	99 81       	ldd	r25, Y+1	; 0x01
     78c:	81 e0       	ldi	r24, 0x01	; 1
     78e:	69 2f       	mov	r22, r25
     790:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
		lcd_chr(155);
     794:	8b e9       	ldi	r24, 0x9B	; 155
     796:	0e 94 22 0a 	call	0x1444	; 0x1444 <lcd_chr>
		lcd_chr(149);
		lcd_goto_xy(i,7);
		lcd_chr(153);
	}

	for (int i = 1; i < 7; i++)
     79a:	89 81       	ldd	r24, Y+1	; 0x01
     79c:	9a 81       	ldd	r25, Y+2	; 0x02
     79e:	01 96       	adiw	r24, 0x01	; 1
     7a0:	9a 83       	std	Y+2, r25	; 0x02
     7a2:	89 83       	std	Y+1, r24	; 0x01
     7a4:	89 81       	ldd	r24, Y+1	; 0x01
     7a6:	9a 81       	ldd	r25, Y+2	; 0x02
     7a8:	87 30       	cpi	r24, 0x07	; 7
     7aa:	91 05       	cpc	r25, r1
     7ac:	34 f3       	brlt	.-52     	; 0x77a <drawOutlines+0x88>
		lcd_goto_xy(21,i);
		lcd_chr(151);
		lcd_goto_xy(1,i);
		lcd_chr(155);
	}
}
     7ae:	0f 90       	pop	r0
     7b0:	0f 90       	pop	r0
     7b2:	0f 90       	pop	r0
     7b4:	0f 90       	pop	r0
     7b6:	cf 91       	pop	r28
     7b8:	df 91       	pop	r29
     7ba:	08 95       	ret

000007bc <showDebug>:

void showDebug()
{
     7bc:	df 93       	push	r29
     7be:	cf 93       	push	r28
     7c0:	cd b7       	in	r28, 0x3d	; 61
     7c2:	de b7       	in	r29, 0x3e	; 62
     7c4:	2f 97       	sbiw	r28, 0x0f	; 15
     7c6:	0f b6       	in	r0, 0x3f	; 63
     7c8:	f8 94       	cli
     7ca:	de bf       	out	0x3e, r29	; 62
     7cc:	0f be       	out	0x3f, r0	; 63
     7ce:	cd bf       	out	0x3d, r28	; 61
	char buf[15];

	if (joystick)
     7d0:	80 91 40 02 	lds	r24, 0x0240
     7d4:	90 91 41 02 	lds	r25, 0x0241
     7d8:	00 97       	sbiw	r24, 0x00	; 0
     7da:	09 f4       	brne	.+2      	; 0x7de <showDebug+0x22>
     7dc:	62 c0       	rjmp	.+196    	; 0x8a2 <showDebug+0xe6>
	{
		sprintf(buf, "X=%.2f V", voltage);
     7de:	20 91 28 02 	lds	r18, 0x0228
     7e2:	30 91 29 02 	lds	r19, 0x0229
     7e6:	40 91 2a 02 	lds	r20, 0x022A
     7ea:	50 91 2b 02 	lds	r21, 0x022B
     7ee:	8d b7       	in	r24, 0x3d	; 61
     7f0:	9e b7       	in	r25, 0x3e	; 62
     7f2:	08 97       	sbiw	r24, 0x08	; 8
     7f4:	0f b6       	in	r0, 0x3f	; 63
     7f6:	f8 94       	cli
     7f8:	9e bf       	out	0x3e, r25	; 62
     7fa:	0f be       	out	0x3f, r0	; 63
     7fc:	8d bf       	out	0x3d, r24	; 61
     7fe:	ed b7       	in	r30, 0x3d	; 61
     800:	fe b7       	in	r31, 0x3e	; 62
     802:	31 96       	adiw	r30, 0x01	; 1
     804:	ce 01       	movw	r24, r28
     806:	01 96       	adiw	r24, 0x01	; 1
     808:	91 83       	std	Z+1, r25	; 0x01
     80a:	80 83       	st	Z, r24
     80c:	80 e0       	ldi	r24, 0x00	; 0
     80e:	91 e0       	ldi	r25, 0x01	; 1
     810:	93 83       	std	Z+3, r25	; 0x03
     812:	82 83       	std	Z+2, r24	; 0x02
     814:	24 83       	std	Z+4, r18	; 0x04
     816:	35 83       	std	Z+5, r19	; 0x05
     818:	46 83       	std	Z+6, r20	; 0x06
     81a:	57 83       	std	Z+7, r21	; 0x07
     81c:	0e 94 5b 19 	call	0x32b6	; 0x32b6 <sprintf>
     820:	8d b7       	in	r24, 0x3d	; 61
     822:	9e b7       	in	r25, 0x3e	; 62
     824:	08 96       	adiw	r24, 0x08	; 8
     826:	0f b6       	in	r0, 0x3f	; 63
     828:	f8 94       	cli
     82a:	9e bf       	out	0x3e, r25	; 62
     82c:	0f be       	out	0x3f, r0	; 63
     82e:	8d bf       	out	0x3d, r24	; 61

		lcd_goto_xy(7,1);
     830:	87 e0       	ldi	r24, 0x07	; 7
     832:	61 e0       	ldi	r22, 0x01	; 1
     834:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
		lcd_str(buf);
     838:	ce 01       	movw	r24, r28
     83a:	01 96       	adiw	r24, 0x01	; 1
     83c:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <lcd_str>

		sprintf(buf, "Y=%.2f V", voltage1);
     840:	20 91 30 02 	lds	r18, 0x0230
     844:	30 91 31 02 	lds	r19, 0x0231
     848:	40 91 32 02 	lds	r20, 0x0232
     84c:	50 91 33 02 	lds	r21, 0x0233
     850:	8d b7       	in	r24, 0x3d	; 61
     852:	9e b7       	in	r25, 0x3e	; 62
     854:	08 97       	sbiw	r24, 0x08	; 8
     856:	0f b6       	in	r0, 0x3f	; 63
     858:	f8 94       	cli
     85a:	9e bf       	out	0x3e, r25	; 62
     85c:	0f be       	out	0x3f, r0	; 63
     85e:	8d bf       	out	0x3d, r24	; 61
     860:	ed b7       	in	r30, 0x3d	; 61
     862:	fe b7       	in	r31, 0x3e	; 62
     864:	31 96       	adiw	r30, 0x01	; 1
     866:	ce 01       	movw	r24, r28
     868:	01 96       	adiw	r24, 0x01	; 1
     86a:	91 83       	std	Z+1, r25	; 0x01
     86c:	80 83       	st	Z, r24
     86e:	89 e0       	ldi	r24, 0x09	; 9
     870:	91 e0       	ldi	r25, 0x01	; 1
     872:	93 83       	std	Z+3, r25	; 0x03
     874:	82 83       	std	Z+2, r24	; 0x02
     876:	24 83       	std	Z+4, r18	; 0x04
     878:	35 83       	std	Z+5, r19	; 0x05
     87a:	46 83       	std	Z+6, r20	; 0x06
     87c:	57 83       	std	Z+7, r21	; 0x07
     87e:	0e 94 5b 19 	call	0x32b6	; 0x32b6 <sprintf>
     882:	8d b7       	in	r24, 0x3d	; 61
     884:	9e b7       	in	r25, 0x3e	; 62
     886:	08 96       	adiw	r24, 0x08	; 8
     888:	0f b6       	in	r0, 0x3f	; 63
     88a:	f8 94       	cli
     88c:	9e bf       	out	0x3e, r25	; 62
     88e:	0f be       	out	0x3f, r0	; 63
     890:	8d bf       	out	0x3d, r24	; 61

		lcd_goto_xy(7,2);
     892:	87 e0       	ldi	r24, 0x07	; 7
     894:	62 e0       	ldi	r22, 0x02	; 2
     896:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
		lcd_str(buf);
     89a:	ce 01       	movw	r24, r28
     89c:	01 96       	adiw	r24, 0x01	; 1
     89e:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <lcd_str>
	}
}
     8a2:	2f 96       	adiw	r28, 0x0f	; 15
     8a4:	0f b6       	in	r0, 0x3f	; 63
     8a6:	f8 94       	cli
     8a8:	de bf       	out	0x3e, r29	; 62
     8aa:	0f be       	out	0x3f, r0	; 63
     8ac:	cd bf       	out	0x3d, r28	; 61
     8ae:	cf 91       	pop	r28
     8b0:	df 91       	pop	r29
     8b2:	08 95       	ret

000008b4 <clearDebug>:

void clearDebug()
{
     8b4:	df 93       	push	r29
     8b6:	cf 93       	push	r28
     8b8:	cd b7       	in	r28, 0x3d	; 61
     8ba:	de b7       	in	r29, 0x3e	; 62
	lcd_goto_xy(7,1);
     8bc:	87 e0       	ldi	r24, 0x07	; 7
     8be:	61 e0       	ldi	r22, 0x01	; 1
     8c0:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
	lcd_str("          ");
     8c4:	82 e1       	ldi	r24, 0x12	; 18
     8c6:	91 e0       	ldi	r25, 0x01	; 1
     8c8:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <lcd_str>
	lcd_goto_xy(7,2);
     8cc:	87 e0       	ldi	r24, 0x07	; 7
     8ce:	62 e0       	ldi	r22, 0x02	; 2
     8d0:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
	lcd_str("          ");
     8d4:	82 e1       	ldi	r24, 0x12	; 18
     8d6:	91 e0       	ldi	r25, 0x01	; 1
     8d8:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <lcd_str>
	lcd_goto_xy(7,3);
     8dc:	87 e0       	ldi	r24, 0x07	; 7
     8de:	63 e0       	ldi	r22, 0x03	; 3
     8e0:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
	lcd_str("          ");
     8e4:	82 e1       	ldi	r24, 0x12	; 18
     8e6:	91 e0       	ldi	r25, 0x01	; 1
     8e8:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <lcd_str>
}
     8ec:	cf 91       	pop	r28
     8ee:	df 91       	pop	r29
     8f0:	08 95       	ret

000008f2 <readJoystick>:

void readJoystick()
{
     8f2:	df 93       	push	r29
     8f4:	cf 93       	push	r28
     8f6:	cd b7       	in	r28, 0x3d	; 61
     8f8:	de b7       	in	r29, 0x3e	; 62
     8fa:	6c 97       	sbiw	r28, 0x1c	; 28
     8fc:	0f b6       	in	r0, 0x3f	; 63
     8fe:	f8 94       	cli
     900:	de bf       	out	0x3e, r29	; 62
     902:	0f be       	out	0x3f, r0	; 63
     904:	cd bf       	out	0x3d, r28	; 61
	ADMUX &= ~(1<<MUX0);			//Valitaan AD-muuntimen MUXin ensimm‰inen tulo
     906:	a7 e2       	ldi	r26, 0x27	; 39
     908:	b0 e0       	ldi	r27, 0x00	; 0
     90a:	e7 e2       	ldi	r30, 0x27	; 39
     90c:	f0 e0       	ldi	r31, 0x00	; 0
     90e:	80 81       	ld	r24, Z
     910:	8e 7f       	andi	r24, 0xFE	; 254
     912:	8c 93       	st	X, r24
	ADMUX &= ~(1<<MUX1);
     914:	a7 e2       	ldi	r26, 0x27	; 39
     916:	b0 e0       	ldi	r27, 0x00	; 0
     918:	e7 e2       	ldi	r30, 0x27	; 39
     91a:	f0 e0       	ldi	r31, 0x00	; 0
     91c:	80 81       	ld	r24, Z
     91e:	8d 7f       	andi	r24, 0xFD	; 253
     920:	8c 93       	st	X, r24
	ADCSRA |= 1<<ADSC;
     922:	a6 e2       	ldi	r26, 0x26	; 38
     924:	b0 e0       	ldi	r27, 0x00	; 0
     926:	e6 e2       	ldi	r30, 0x26	; 38
     928:	f0 e0       	ldi	r31, 0x00	; 0
     92a:	80 81       	ld	r24, Z
     92c:	80 64       	ori	r24, 0x40	; 64
     92e:	8c 93       	st	X, r24
     930:	80 e0       	ldi	r24, 0x00	; 0
     932:	90 e0       	ldi	r25, 0x00	; 0
     934:	a0 e8       	ldi	r26, 0x80	; 128
     936:	bf e3       	ldi	r27, 0x3F	; 63
     938:	89 8f       	std	Y+25, r24	; 0x19
     93a:	9a 8f       	std	Y+26, r25	; 0x1a
     93c:	ab 8f       	std	Y+27, r26	; 0x1b
     93e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     940:	69 8d       	ldd	r22, Y+25	; 0x19
     942:	7a 8d       	ldd	r23, Y+26	; 0x1a
     944:	8b 8d       	ldd	r24, Y+27	; 0x1b
     946:	9c 8d       	ldd	r25, Y+28	; 0x1c
     948:	20 e0       	ldi	r18, 0x00	; 0
     94a:	30 e0       	ldi	r19, 0x00	; 0
     94c:	4a e7       	ldi	r20, 0x7A	; 122
     94e:	53 e4       	ldi	r21, 0x43	; 67
     950:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
     954:	dc 01       	movw	r26, r24
     956:	cb 01       	movw	r24, r22
     958:	8d 8b       	std	Y+21, r24	; 0x15
     95a:	9e 8b       	std	Y+22, r25	; 0x16
     95c:	af 8b       	std	Y+23, r26	; 0x17
     95e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     960:	6d 89       	ldd	r22, Y+21	; 0x15
     962:	7e 89       	ldd	r23, Y+22	; 0x16
     964:	8f 89       	ldd	r24, Y+23	; 0x17
     966:	98 8d       	ldd	r25, Y+24	; 0x18
     968:	20 e0       	ldi	r18, 0x00	; 0
     96a:	30 e0       	ldi	r19, 0x00	; 0
     96c:	40 e8       	ldi	r20, 0x80	; 128
     96e:	5f e3       	ldi	r21, 0x3F	; 63
     970:	0e 94 68 11 	call	0x22d0	; 0x22d0 <__ltsf2>
     974:	88 23       	and	r24, r24
     976:	2c f4       	brge	.+10     	; 0x982 <readJoystick+0x90>
		__ticks = 1;
     978:	81 e0       	ldi	r24, 0x01	; 1
     97a:	90 e0       	ldi	r25, 0x00	; 0
     97c:	9c 8b       	std	Y+20, r25	; 0x14
     97e:	8b 8b       	std	Y+19, r24	; 0x13
     980:	3f c0       	rjmp	.+126    	; 0xa00 <readJoystick+0x10e>
	else if (__tmp > 65535)
     982:	6d 89       	ldd	r22, Y+21	; 0x15
     984:	7e 89       	ldd	r23, Y+22	; 0x16
     986:	8f 89       	ldd	r24, Y+23	; 0x17
     988:	98 8d       	ldd	r25, Y+24	; 0x18
     98a:	20 e0       	ldi	r18, 0x00	; 0
     98c:	3f ef       	ldi	r19, 0xFF	; 255
     98e:	4f e7       	ldi	r20, 0x7F	; 127
     990:	57 e4       	ldi	r21, 0x47	; 71
     992:	0e 94 08 11 	call	0x2210	; 0x2210 <__gtsf2>
     996:	18 16       	cp	r1, r24
     998:	4c f5       	brge	.+82     	; 0x9ec <readJoystick+0xfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     99a:	69 8d       	ldd	r22, Y+25	; 0x19
     99c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     99e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     9a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     9a2:	20 e0       	ldi	r18, 0x00	; 0
     9a4:	30 e0       	ldi	r19, 0x00	; 0
     9a6:	40 e2       	ldi	r20, 0x20	; 32
     9a8:	51 e4       	ldi	r21, 0x41	; 65
     9aa:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
     9ae:	dc 01       	movw	r26, r24
     9b0:	cb 01       	movw	r24, r22
     9b2:	bc 01       	movw	r22, r24
     9b4:	cd 01       	movw	r24, r26
     9b6:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixunssfsi>
     9ba:	dc 01       	movw	r26, r24
     9bc:	cb 01       	movw	r24, r22
     9be:	9c 8b       	std	Y+20, r25	; 0x14
     9c0:	8b 8b       	std	Y+19, r24	; 0x13
     9c2:	0f c0       	rjmp	.+30     	; 0x9e2 <readJoystick+0xf0>
     9c4:	89 e1       	ldi	r24, 0x19	; 25
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	9a 8b       	std	Y+18, r25	; 0x12
     9ca:	89 8b       	std	Y+17, r24	; 0x11
     9cc:	89 89       	ldd	r24, Y+17	; 0x11
     9ce:	9a 89       	ldd	r25, Y+18	; 0x12
     9d0:	01 97       	sbiw	r24, 0x01	; 1
     9d2:	f1 f7       	brne	.-4      	; 0x9d0 <readJoystick+0xde>
     9d4:	9a 8b       	std	Y+18, r25	; 0x12
     9d6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9d8:	8b 89       	ldd	r24, Y+19	; 0x13
     9da:	9c 89       	ldd	r25, Y+20	; 0x14
     9dc:	01 97       	sbiw	r24, 0x01	; 1
     9de:	9c 8b       	std	Y+20, r25	; 0x14
     9e0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9e2:	8b 89       	ldd	r24, Y+19	; 0x13
     9e4:	9c 89       	ldd	r25, Y+20	; 0x14
     9e6:	00 97       	sbiw	r24, 0x00	; 0
     9e8:	69 f7       	brne	.-38     	; 0x9c4 <readJoystick+0xd2>
     9ea:	14 c0       	rjmp	.+40     	; 0xa14 <readJoystick+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9ec:	6d 89       	ldd	r22, Y+21	; 0x15
     9ee:	7e 89       	ldd	r23, Y+22	; 0x16
     9f0:	8f 89       	ldd	r24, Y+23	; 0x17
     9f2:	98 8d       	ldd	r25, Y+24	; 0x18
     9f4:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixunssfsi>
     9f8:	dc 01       	movw	r26, r24
     9fa:	cb 01       	movw	r24, r22
     9fc:	9c 8b       	std	Y+20, r25	; 0x14
     9fe:	8b 8b       	std	Y+19, r24	; 0x13
     a00:	8b 89       	ldd	r24, Y+19	; 0x13
     a02:	9c 89       	ldd	r25, Y+20	; 0x14
     a04:	98 8b       	std	Y+16, r25	; 0x10
     a06:	8f 87       	std	Y+15, r24	; 0x0f
     a08:	8f 85       	ldd	r24, Y+15	; 0x0f
     a0a:	98 89       	ldd	r25, Y+16	; 0x10
     a0c:	01 97       	sbiw	r24, 0x01	; 1
     a0e:	f1 f7       	brne	.-4      	; 0xa0c <readJoystick+0x11a>
     a10:	98 8b       	std	Y+16, r25	; 0x10
     a12:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	voltage= ((intermed *5)/1024);	//J‰nnitteen laskukaava	
     a14:	80 91 2c 02 	lds	r24, 0x022C
     a18:	90 91 2d 02 	lds	r25, 0x022D
     a1c:	a0 91 2e 02 	lds	r26, 0x022E
     a20:	b0 91 2f 02 	lds	r27, 0x022F
     a24:	bc 01       	movw	r22, r24
     a26:	cd 01       	movw	r24, r26
     a28:	20 e0       	ldi	r18, 0x00	; 0
     a2a:	30 e0       	ldi	r19, 0x00	; 0
     a2c:	40 ea       	ldi	r20, 0xA0	; 160
     a2e:	50 e4       	ldi	r21, 0x40	; 64
     a30:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
     a34:	dc 01       	movw	r26, r24
     a36:	cb 01       	movw	r24, r22
     a38:	bc 01       	movw	r22, r24
     a3a:	cd 01       	movw	r24, r26
     a3c:	20 e0       	ldi	r18, 0x00	; 0
     a3e:	30 e0       	ldi	r19, 0x00	; 0
     a40:	40 e8       	ldi	r20, 0x80	; 128
     a42:	54 e4       	ldi	r21, 0x44	; 68
     a44:	0e 94 5c 10 	call	0x20b8	; 0x20b8 <__divsf3>
     a48:	dc 01       	movw	r26, r24
     a4a:	cb 01       	movw	r24, r22
     a4c:	80 93 28 02 	sts	0x0228, r24
     a50:	90 93 29 02 	sts	0x0229, r25
     a54:	a0 93 2a 02 	sts	0x022A, r26
     a58:	b0 93 2b 02 	sts	0x022B, r27

	ADMUX |=1<<MUX0;
     a5c:	a7 e2       	ldi	r26, 0x27	; 39
     a5e:	b0 e0       	ldi	r27, 0x00	; 0
     a60:	e7 e2       	ldi	r30, 0x27	; 39
     a62:	f0 e0       	ldi	r31, 0x00	; 0
     a64:	80 81       	ld	r24, Z
     a66:	81 60       	ori	r24, 0x01	; 1
     a68:	8c 93       	st	X, r24
	ADMUX &= ~(1<<MUX1);				//Valitaan AD-muuntimen MUXin toinen tulo
     a6a:	a7 e2       	ldi	r26, 0x27	; 39
     a6c:	b0 e0       	ldi	r27, 0x00	; 0
     a6e:	e7 e2       	ldi	r30, 0x27	; 39
     a70:	f0 e0       	ldi	r31, 0x00	; 0
     a72:	80 81       	ld	r24, Z
     a74:	8d 7f       	andi	r24, 0xFD	; 253
     a76:	8c 93       	st	X, r24
	ADCSRA |= 1<<ADSC;
     a78:	a6 e2       	ldi	r26, 0x26	; 38
     a7a:	b0 e0       	ldi	r27, 0x00	; 0
     a7c:	e6 e2       	ldi	r30, 0x26	; 38
     a7e:	f0 e0       	ldi	r31, 0x00	; 0
     a80:	80 81       	ld	r24, Z
     a82:	80 64       	ori	r24, 0x40	; 64
     a84:	8c 93       	st	X, r24
     a86:	80 e0       	ldi	r24, 0x00	; 0
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a0 e8       	ldi	r26, 0x80	; 128
     a8c:	bf e3       	ldi	r27, 0x3F	; 63
     a8e:	8b 87       	std	Y+11, r24	; 0x0b
     a90:	9c 87       	std	Y+12, r25	; 0x0c
     a92:	ad 87       	std	Y+13, r26	; 0x0d
     a94:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     a96:	6b 85       	ldd	r22, Y+11	; 0x0b
     a98:	7c 85       	ldd	r23, Y+12	; 0x0c
     a9a:	8d 85       	ldd	r24, Y+13	; 0x0d
     a9c:	9e 85       	ldd	r25, Y+14	; 0x0e
     a9e:	20 e0       	ldi	r18, 0x00	; 0
     aa0:	30 e0       	ldi	r19, 0x00	; 0
     aa2:	4a e7       	ldi	r20, 0x7A	; 122
     aa4:	53 e4       	ldi	r21, 0x43	; 67
     aa6:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
     aaa:	dc 01       	movw	r26, r24
     aac:	cb 01       	movw	r24, r22
     aae:	8f 83       	std	Y+7, r24	; 0x07
     ab0:	98 87       	std	Y+8, r25	; 0x08
     ab2:	a9 87       	std	Y+9, r26	; 0x09
     ab4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     ab6:	6f 81       	ldd	r22, Y+7	; 0x07
     ab8:	78 85       	ldd	r23, Y+8	; 0x08
     aba:	89 85       	ldd	r24, Y+9	; 0x09
     abc:	9a 85       	ldd	r25, Y+10	; 0x0a
     abe:	20 e0       	ldi	r18, 0x00	; 0
     ac0:	30 e0       	ldi	r19, 0x00	; 0
     ac2:	40 e8       	ldi	r20, 0x80	; 128
     ac4:	5f e3       	ldi	r21, 0x3F	; 63
     ac6:	0e 94 68 11 	call	0x22d0	; 0x22d0 <__ltsf2>
     aca:	88 23       	and	r24, r24
     acc:	2c f4       	brge	.+10     	; 0xad8 <readJoystick+0x1e6>
		__ticks = 1;
     ace:	81 e0       	ldi	r24, 0x01	; 1
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	9e 83       	std	Y+6, r25	; 0x06
     ad4:	8d 83       	std	Y+5, r24	; 0x05
     ad6:	3f c0       	rjmp	.+126    	; 0xb56 <readJoystick+0x264>
	else if (__tmp > 65535)
     ad8:	6f 81       	ldd	r22, Y+7	; 0x07
     ada:	78 85       	ldd	r23, Y+8	; 0x08
     adc:	89 85       	ldd	r24, Y+9	; 0x09
     ade:	9a 85       	ldd	r25, Y+10	; 0x0a
     ae0:	20 e0       	ldi	r18, 0x00	; 0
     ae2:	3f ef       	ldi	r19, 0xFF	; 255
     ae4:	4f e7       	ldi	r20, 0x7F	; 127
     ae6:	57 e4       	ldi	r21, 0x47	; 71
     ae8:	0e 94 08 11 	call	0x2210	; 0x2210 <__gtsf2>
     aec:	18 16       	cp	r1, r24
     aee:	4c f5       	brge	.+82     	; 0xb42 <readJoystick+0x250>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     af0:	6b 85       	ldd	r22, Y+11	; 0x0b
     af2:	7c 85       	ldd	r23, Y+12	; 0x0c
     af4:	8d 85       	ldd	r24, Y+13	; 0x0d
     af6:	9e 85       	ldd	r25, Y+14	; 0x0e
     af8:	20 e0       	ldi	r18, 0x00	; 0
     afa:	30 e0       	ldi	r19, 0x00	; 0
     afc:	40 e2       	ldi	r20, 0x20	; 32
     afe:	51 e4       	ldi	r21, 0x41	; 65
     b00:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
     b04:	dc 01       	movw	r26, r24
     b06:	cb 01       	movw	r24, r22
     b08:	bc 01       	movw	r22, r24
     b0a:	cd 01       	movw	r24, r26
     b0c:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixunssfsi>
     b10:	dc 01       	movw	r26, r24
     b12:	cb 01       	movw	r24, r22
     b14:	9e 83       	std	Y+6, r25	; 0x06
     b16:	8d 83       	std	Y+5, r24	; 0x05
     b18:	0f c0       	rjmp	.+30     	; 0xb38 <readJoystick+0x246>
     b1a:	89 e1       	ldi	r24, 0x19	; 25
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	9c 83       	std	Y+4, r25	; 0x04
     b20:	8b 83       	std	Y+3, r24	; 0x03
     b22:	8b 81       	ldd	r24, Y+3	; 0x03
     b24:	9c 81       	ldd	r25, Y+4	; 0x04
     b26:	01 97       	sbiw	r24, 0x01	; 1
     b28:	f1 f7       	brne	.-4      	; 0xb26 <readJoystick+0x234>
     b2a:	9c 83       	std	Y+4, r25	; 0x04
     b2c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b2e:	8d 81       	ldd	r24, Y+5	; 0x05
     b30:	9e 81       	ldd	r25, Y+6	; 0x06
     b32:	01 97       	sbiw	r24, 0x01	; 1
     b34:	9e 83       	std	Y+6, r25	; 0x06
     b36:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b38:	8d 81       	ldd	r24, Y+5	; 0x05
     b3a:	9e 81       	ldd	r25, Y+6	; 0x06
     b3c:	00 97       	sbiw	r24, 0x00	; 0
     b3e:	69 f7       	brne	.-38     	; 0xb1a <readJoystick+0x228>
     b40:	14 c0       	rjmp	.+40     	; 0xb6a <readJoystick+0x278>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b42:	6f 81       	ldd	r22, Y+7	; 0x07
     b44:	78 85       	ldd	r23, Y+8	; 0x08
     b46:	89 85       	ldd	r24, Y+9	; 0x09
     b48:	9a 85       	ldd	r25, Y+10	; 0x0a
     b4a:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixunssfsi>
     b4e:	dc 01       	movw	r26, r24
     b50:	cb 01       	movw	r24, r22
     b52:	9e 83       	std	Y+6, r25	; 0x06
     b54:	8d 83       	std	Y+5, r24	; 0x05
     b56:	8d 81       	ldd	r24, Y+5	; 0x05
     b58:	9e 81       	ldd	r25, Y+6	; 0x06
     b5a:	9a 83       	std	Y+2, r25	; 0x02
     b5c:	89 83       	std	Y+1, r24	; 0x01
     b5e:	89 81       	ldd	r24, Y+1	; 0x01
     b60:	9a 81       	ldd	r25, Y+2	; 0x02
     b62:	01 97       	sbiw	r24, 0x01	; 1
     b64:	f1 f7       	brne	.-4      	; 0xb62 <readJoystick+0x270>
     b66:	9a 83       	std	Y+2, r25	; 0x02
     b68:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	voltage1= ((intermed *5)/1024);	//J‰nnitteen laskukaava
     b6a:	80 91 2c 02 	lds	r24, 0x022C
     b6e:	90 91 2d 02 	lds	r25, 0x022D
     b72:	a0 91 2e 02 	lds	r26, 0x022E
     b76:	b0 91 2f 02 	lds	r27, 0x022F
     b7a:	bc 01       	movw	r22, r24
     b7c:	cd 01       	movw	r24, r26
     b7e:	20 e0       	ldi	r18, 0x00	; 0
     b80:	30 e0       	ldi	r19, 0x00	; 0
     b82:	40 ea       	ldi	r20, 0xA0	; 160
     b84:	50 e4       	ldi	r21, 0x40	; 64
     b86:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
     b8a:	dc 01       	movw	r26, r24
     b8c:	cb 01       	movw	r24, r22
     b8e:	bc 01       	movw	r22, r24
     b90:	cd 01       	movw	r24, r26
     b92:	20 e0       	ldi	r18, 0x00	; 0
     b94:	30 e0       	ldi	r19, 0x00	; 0
     b96:	40 e8       	ldi	r20, 0x80	; 128
     b98:	54 e4       	ldi	r21, 0x44	; 68
     b9a:	0e 94 5c 10 	call	0x20b8	; 0x20b8 <__divsf3>
     b9e:	dc 01       	movw	r26, r24
     ba0:	cb 01       	movw	r24, r22
     ba2:	80 93 30 02 	sts	0x0230, r24
     ba6:	90 93 31 02 	sts	0x0231, r25
     baa:	a0 93 32 02 	sts	0x0232, r26
     bae:	b0 93 33 02 	sts	0x0233, r27
}
     bb2:	6c 96       	adiw	r28, 0x1c	; 28
     bb4:	0f b6       	in	r0, 0x3f	; 63
     bb6:	f8 94       	cli
     bb8:	de bf       	out	0x3e, r29	; 62
     bba:	0f be       	out	0x3f, r0	; 63
     bbc:	cd bf       	out	0x3d, r28	; 61
     bbe:	cf 91       	pop	r28
     bc0:	df 91       	pop	r29
     bc2:	08 95       	ret

00000bc4 <moveCursor>:

void moveCursor()
{
     bc4:	df 93       	push	r29
     bc6:	cf 93       	push	r28
     bc8:	cd b7       	in	r28, 0x3d	; 61
     bca:	de b7       	in	r29, 0x3e	; 62
     bcc:	28 97       	sbiw	r28, 0x08	; 8
     bce:	0f b6       	in	r0, 0x3f	; 63
     bd0:	f8 94       	cli
     bd2:	de bf       	out	0x3e, r29	; 62
     bd4:	0f be       	out	0x3f, r0	; 63
     bd6:	cd bf       	out	0x3d, r28	; 61
	if (joystick)
     bd8:	80 91 40 02 	lds	r24, 0x0240
     bdc:	90 91 41 02 	lds	r25, 0x0241
     be0:	00 97       	sbiw	r24, 0x00	; 0
     be2:	09 f4       	brne	.+2      	; 0xbe6 <moveCursor+0x22>
     be4:	44 c1       	rjmp	.+648    	; 0xe6e <moveCursor+0x2aa>
	{
		if((voltage<2.4) & (x>1))	
     be6:	80 91 28 02 	lds	r24, 0x0228
     bea:	90 91 29 02 	lds	r25, 0x0229
     bee:	a0 91 2a 02 	lds	r26, 0x022A
     bf2:	b0 91 2b 02 	lds	r27, 0x022B
     bf6:	18 86       	std	Y+8, r1	; 0x08
     bf8:	bc 01       	movw	r22, r24
     bfa:	cd 01       	movw	r24, r26
     bfc:	2a e9       	ldi	r18, 0x9A	; 154
     bfe:	39 e9       	ldi	r19, 0x99	; 153
     c00:	49 e1       	ldi	r20, 0x19	; 25
     c02:	50 e4       	ldi	r21, 0x40	; 64
     c04:	0e 94 68 11 	call	0x22d0	; 0x22d0 <__ltsf2>
     c08:	88 23       	and	r24, r24
     c0a:	14 f4       	brge	.+4      	; 0xc10 <moveCursor+0x4c>
     c0c:	81 e0       	ldi	r24, 0x01	; 1
     c0e:	88 87       	std	Y+8, r24	; 0x08
     c10:	80 91 38 02 	lds	r24, 0x0238
     c14:	90 91 39 02 	lds	r25, 0x0239
     c18:	1f 82       	std	Y+7, r1	; 0x07
     c1a:	82 30       	cpi	r24, 0x02	; 2
     c1c:	91 05       	cpc	r25, r1
     c1e:	14 f0       	brlt	.+4      	; 0xc24 <moveCursor+0x60>
     c20:	91 e0       	ldi	r25, 0x01	; 1
     c22:	9f 83       	std	Y+7, r25	; 0x07
     c24:	88 85       	ldd	r24, Y+8	; 0x08
     c26:	9f 81       	ldd	r25, Y+7	; 0x07
     c28:	89 23       	and	r24, r25
     c2a:	88 23       	and	r24, r24
     c2c:	69 f1       	breq	.+90     	; 0xc88 <moveCursor+0xc4>
		{

			x--;
     c2e:	80 91 38 02 	lds	r24, 0x0238
     c32:	90 91 39 02 	lds	r25, 0x0239
     c36:	01 97       	sbiw	r24, 0x01	; 1
     c38:	90 93 39 02 	sts	0x0239, r25
     c3c:	80 93 38 02 	sts	0x0238, r24
			lcd_goto_xy(x,y);				//Siirret‰‰n osoitinta x-akselilla vasemmalle
     c40:	80 91 38 02 	lds	r24, 0x0238
     c44:	90 91 39 02 	lds	r25, 0x0239
     c48:	28 2f       	mov	r18, r24
     c4a:	80 91 42 02 	lds	r24, 0x0242
     c4e:	90 91 43 02 	lds	r25, 0x0243
     c52:	98 2f       	mov	r25, r24
     c54:	82 2f       	mov	r24, r18
     c56:	69 2f       	mov	r22, r25
     c58:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
			lcd_chr(132);
     c5c:	84 e8       	ldi	r24, 0x84	; 132
     c5e:	0e 94 22 0a 	call	0x1444	; 0x1444 <lcd_chr>
			lcd_goto_xy(x+1,y);				//Tyhjennet‰‰n osoittimen edellinen paikka
     c62:	80 91 38 02 	lds	r24, 0x0238
     c66:	90 91 39 02 	lds	r25, 0x0239
     c6a:	28 2f       	mov	r18, r24
     c6c:	2f 5f       	subi	r18, 0xFF	; 255
     c6e:	80 91 42 02 	lds	r24, 0x0242
     c72:	90 91 43 02 	lds	r25, 0x0243
     c76:	98 2f       	mov	r25, r24
     c78:	82 2f       	mov	r24, r18
     c7a:	69 2f       	mov	r22, r25
     c7c:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
			lcd_str(" ");		
     c80:	8d e1       	ldi	r24, 0x1D	; 29
     c82:	91 e0       	ldi	r25, 0x01	; 1
     c84:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <lcd_str>
		}

		if((voltage>2.9) & (x<=20))
     c88:	80 91 28 02 	lds	r24, 0x0228
     c8c:	90 91 29 02 	lds	r25, 0x0229
     c90:	a0 91 2a 02 	lds	r26, 0x022A
     c94:	b0 91 2b 02 	lds	r27, 0x022B
     c98:	1e 82       	std	Y+6, r1	; 0x06
     c9a:	bc 01       	movw	r22, r24
     c9c:	cd 01       	movw	r24, r26
     c9e:	2a e9       	ldi	r18, 0x9A	; 154
     ca0:	39 e9       	ldi	r19, 0x99	; 153
     ca2:	49 e3       	ldi	r20, 0x39	; 57
     ca4:	50 e4       	ldi	r21, 0x40	; 64
     ca6:	0e 94 08 11 	call	0x2210	; 0x2210 <__gtsf2>
     caa:	18 16       	cp	r1, r24
     cac:	14 f4       	brge	.+4      	; 0xcb2 <moveCursor+0xee>
     cae:	81 e0       	ldi	r24, 0x01	; 1
     cb0:	8e 83       	std	Y+6, r24	; 0x06
     cb2:	80 91 38 02 	lds	r24, 0x0238
     cb6:	90 91 39 02 	lds	r25, 0x0239
     cba:	1d 82       	std	Y+5, r1	; 0x05
     cbc:	85 31       	cpi	r24, 0x15	; 21
     cbe:	91 05       	cpc	r25, r1
     cc0:	14 f4       	brge	.+4      	; 0xcc6 <moveCursor+0x102>
     cc2:	91 e0       	ldi	r25, 0x01	; 1
     cc4:	9d 83       	std	Y+5, r25	; 0x05
     cc6:	8e 81       	ldd	r24, Y+6	; 0x06
     cc8:	9d 81       	ldd	r25, Y+5	; 0x05
     cca:	89 23       	and	r24, r25
     ccc:	88 23       	and	r24, r24
     cce:	69 f1       	breq	.+90     	; 0xd2a <moveCursor+0x166>
		{
			x++;
     cd0:	80 91 38 02 	lds	r24, 0x0238
     cd4:	90 91 39 02 	lds	r25, 0x0239
     cd8:	01 96       	adiw	r24, 0x01	; 1
     cda:	90 93 39 02 	sts	0x0239, r25
     cde:	80 93 38 02 	sts	0x0238, r24
			lcd_goto_xy(x,y);				//Siirret‰‰n osoitinta x-akselilla oikealle
     ce2:	80 91 38 02 	lds	r24, 0x0238
     ce6:	90 91 39 02 	lds	r25, 0x0239
     cea:	28 2f       	mov	r18, r24
     cec:	80 91 42 02 	lds	r24, 0x0242
     cf0:	90 91 43 02 	lds	r25, 0x0243
     cf4:	98 2f       	mov	r25, r24
     cf6:	82 2f       	mov	r24, r18
     cf8:	69 2f       	mov	r22, r25
     cfa:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
			lcd_chr(132);
     cfe:	84 e8       	ldi	r24, 0x84	; 132
     d00:	0e 94 22 0a 	call	0x1444	; 0x1444 <lcd_chr>
			lcd_goto_xy(x-1,y);
     d04:	80 91 38 02 	lds	r24, 0x0238
     d08:	90 91 39 02 	lds	r25, 0x0239
     d0c:	28 2f       	mov	r18, r24
     d0e:	21 50       	subi	r18, 0x01	; 1
     d10:	80 91 42 02 	lds	r24, 0x0242
     d14:	90 91 43 02 	lds	r25, 0x0243
     d18:	98 2f       	mov	r25, r24
     d1a:	82 2f       	mov	r24, r18
     d1c:	69 2f       	mov	r22, r25
     d1e:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
			lcd_str(" ");
     d22:	8d e1       	ldi	r24, 0x1D	; 29
     d24:	91 e0       	ldi	r25, 0x01	; 1
     d26:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <lcd_str>
		}

		if((voltage1<2.4) & (y>0))
     d2a:	80 91 30 02 	lds	r24, 0x0230
     d2e:	90 91 31 02 	lds	r25, 0x0231
     d32:	a0 91 32 02 	lds	r26, 0x0232
     d36:	b0 91 33 02 	lds	r27, 0x0233
     d3a:	1c 82       	std	Y+4, r1	; 0x04
     d3c:	bc 01       	movw	r22, r24
     d3e:	cd 01       	movw	r24, r26
     d40:	2a e9       	ldi	r18, 0x9A	; 154
     d42:	39 e9       	ldi	r19, 0x99	; 153
     d44:	49 e1       	ldi	r20, 0x19	; 25
     d46:	50 e4       	ldi	r21, 0x40	; 64
     d48:	0e 94 68 11 	call	0x22d0	; 0x22d0 <__ltsf2>
     d4c:	88 23       	and	r24, r24
     d4e:	14 f4       	brge	.+4      	; 0xd54 <moveCursor+0x190>
     d50:	81 e0       	ldi	r24, 0x01	; 1
     d52:	8c 83       	std	Y+4, r24	; 0x04
     d54:	80 91 42 02 	lds	r24, 0x0242
     d58:	90 91 43 02 	lds	r25, 0x0243
     d5c:	1b 82       	std	Y+3, r1	; 0x03
     d5e:	18 16       	cp	r1, r24
     d60:	19 06       	cpc	r1, r25
     d62:	14 f4       	brge	.+4      	; 0xd68 <moveCursor+0x1a4>
     d64:	91 e0       	ldi	r25, 0x01	; 1
     d66:	9b 83       	std	Y+3, r25	; 0x03
     d68:	8c 81       	ldd	r24, Y+4	; 0x04
     d6a:	9b 81       	ldd	r25, Y+3	; 0x03
     d6c:	89 23       	and	r24, r25
     d6e:	88 23       	and	r24, r24
     d70:	69 f1       	breq	.+90     	; 0xdcc <moveCursor+0x208>
		{
			y--;
     d72:	80 91 42 02 	lds	r24, 0x0242
     d76:	90 91 43 02 	lds	r25, 0x0243
     d7a:	01 97       	sbiw	r24, 0x01	; 1
     d7c:	90 93 43 02 	sts	0x0243, r25
     d80:	80 93 42 02 	sts	0x0242, r24
			lcd_goto_xy(x,y);				//Siirret‰‰n osoitinta y-akselilla alasp‰in
     d84:	80 91 38 02 	lds	r24, 0x0238
     d88:	90 91 39 02 	lds	r25, 0x0239
     d8c:	28 2f       	mov	r18, r24
     d8e:	80 91 42 02 	lds	r24, 0x0242
     d92:	90 91 43 02 	lds	r25, 0x0243
     d96:	98 2f       	mov	r25, r24
     d98:	82 2f       	mov	r24, r18
     d9a:	69 2f       	mov	r22, r25
     d9c:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
			lcd_chr(132);
     da0:	84 e8       	ldi	r24, 0x84	; 132
     da2:	0e 94 22 0a 	call	0x1444	; 0x1444 <lcd_chr>
			lcd_goto_xy(x,y+1);
     da6:	80 91 38 02 	lds	r24, 0x0238
     daa:	90 91 39 02 	lds	r25, 0x0239
     dae:	28 2f       	mov	r18, r24
     db0:	80 91 42 02 	lds	r24, 0x0242
     db4:	90 91 43 02 	lds	r25, 0x0243
     db8:	98 2f       	mov	r25, r24
     dba:	9f 5f       	subi	r25, 0xFF	; 255
     dbc:	82 2f       	mov	r24, r18
     dbe:	69 2f       	mov	r22, r25
     dc0:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
			lcd_str(" ");
     dc4:	8d e1       	ldi	r24, 0x1D	; 29
     dc6:	91 e0       	ldi	r25, 0x01	; 1
     dc8:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <lcd_str>
		}
		if((voltage1>2.9) & (y<7))
     dcc:	80 91 30 02 	lds	r24, 0x0230
     dd0:	90 91 31 02 	lds	r25, 0x0231
     dd4:	a0 91 32 02 	lds	r26, 0x0232
     dd8:	b0 91 33 02 	lds	r27, 0x0233
     ddc:	1a 82       	std	Y+2, r1	; 0x02
     dde:	bc 01       	movw	r22, r24
     de0:	cd 01       	movw	r24, r26
     de2:	2a e9       	ldi	r18, 0x9A	; 154
     de4:	39 e9       	ldi	r19, 0x99	; 153
     de6:	49 e3       	ldi	r20, 0x39	; 57
     de8:	50 e4       	ldi	r21, 0x40	; 64
     dea:	0e 94 08 11 	call	0x2210	; 0x2210 <__gtsf2>
     dee:	18 16       	cp	r1, r24
     df0:	14 f4       	brge	.+4      	; 0xdf6 <moveCursor+0x232>
     df2:	81 e0       	ldi	r24, 0x01	; 1
     df4:	8a 83       	std	Y+2, r24	; 0x02
     df6:	80 91 42 02 	lds	r24, 0x0242
     dfa:	90 91 43 02 	lds	r25, 0x0243
     dfe:	19 82       	std	Y+1, r1	; 0x01
     e00:	87 30       	cpi	r24, 0x07	; 7
     e02:	91 05       	cpc	r25, r1
     e04:	14 f4       	brge	.+4      	; 0xe0a <moveCursor+0x246>
     e06:	91 e0       	ldi	r25, 0x01	; 1
     e08:	99 83       	std	Y+1, r25	; 0x01
     e0a:	8a 81       	ldd	r24, Y+2	; 0x02
     e0c:	99 81       	ldd	r25, Y+1	; 0x01
     e0e:	89 23       	and	r24, r25
     e10:	88 23       	and	r24, r24
     e12:	69 f1       	breq	.+90     	; 0xe6e <moveCursor+0x2aa>
		{
			y++;
     e14:	80 91 42 02 	lds	r24, 0x0242
     e18:	90 91 43 02 	lds	r25, 0x0243
     e1c:	01 96       	adiw	r24, 0x01	; 1
     e1e:	90 93 43 02 	sts	0x0243, r25
     e22:	80 93 42 02 	sts	0x0242, r24
			lcd_goto_xy(x,y);				//Siirret‰‰n osoitinta y-akselilla ylˆsp‰in
     e26:	80 91 38 02 	lds	r24, 0x0238
     e2a:	90 91 39 02 	lds	r25, 0x0239
     e2e:	28 2f       	mov	r18, r24
     e30:	80 91 42 02 	lds	r24, 0x0242
     e34:	90 91 43 02 	lds	r25, 0x0243
     e38:	98 2f       	mov	r25, r24
     e3a:	82 2f       	mov	r24, r18
     e3c:	69 2f       	mov	r22, r25
     e3e:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
			lcd_chr(132);
     e42:	84 e8       	ldi	r24, 0x84	; 132
     e44:	0e 94 22 0a 	call	0x1444	; 0x1444 <lcd_chr>
			lcd_goto_xy(x,y-1);
     e48:	80 91 38 02 	lds	r24, 0x0238
     e4c:	90 91 39 02 	lds	r25, 0x0239
     e50:	28 2f       	mov	r18, r24
     e52:	80 91 42 02 	lds	r24, 0x0242
     e56:	90 91 43 02 	lds	r25, 0x0243
     e5a:	98 2f       	mov	r25, r24
     e5c:	91 50       	subi	r25, 0x01	; 1
     e5e:	82 2f       	mov	r24, r18
     e60:	69 2f       	mov	r22, r25
     e62:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_goto_xy>
			lcd_str(" ");
     e66:	8d e1       	ldi	r24, 0x1D	; 29
     e68:	91 e0       	ldi	r25, 0x01	; 1
     e6a:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <lcd_str>
		}
	}
}
     e6e:	28 96       	adiw	r28, 0x08	; 8
     e70:	0f b6       	in	r0, 0x3f	; 63
     e72:	f8 94       	cli
     e74:	de bf       	out	0x3e, r29	; 62
     e76:	0f be       	out	0x3f, r0	; 63
     e78:	cd bf       	out	0x3d, r28	; 61
     e7a:	cf 91       	pop	r28
     e7c:	df 91       	pop	r29
     e7e:	08 95       	ret

00000e80 <__vector_21>:

ISR(ADC_vect)
{
     e80:	1f 92       	push	r1
     e82:	0f 92       	push	r0
     e84:	0f b6       	in	r0, 0x3f	; 63
     e86:	0f 92       	push	r0
     e88:	00 90 5b 00 	lds	r0, 0x005B
     e8c:	0f 92       	push	r0
     e8e:	11 24       	eor	r1, r1
     e90:	2f 93       	push	r18
     e92:	3f 93       	push	r19
     e94:	4f 93       	push	r20
     e96:	5f 93       	push	r21
     e98:	6f 93       	push	r22
     e9a:	7f 93       	push	r23
     e9c:	8f 93       	push	r24
     e9e:	9f 93       	push	r25
     ea0:	af 93       	push	r26
     ea2:	bf 93       	push	r27
     ea4:	ef 93       	push	r30
     ea6:	ff 93       	push	r31
     ea8:	df 93       	push	r29
     eaa:	cf 93       	push	r28
     eac:	00 d0       	rcall	.+0      	; 0xeae <__vector_21+0x2e>
     eae:	cd b7       	in	r28, 0x3d	; 61
     eb0:	de b7       	in	r29, 0x3e	; 62
	cli();						//Estet‰‰n keskeytykset
     eb2:	f8 94       	cli

	uint8_t theLowADC = (ADCL>>6);	// Luetaan AD-muuntimelta tuleva LSB ja bittien siirto
     eb4:	e4 e2       	ldi	r30, 0x24	; 36
     eb6:	f0 e0       	ldi	r31, 0x00	; 0
     eb8:	80 81       	ld	r24, Z
     eba:	82 95       	swap	r24
     ebc:	86 95       	lsr	r24
     ebe:	86 95       	lsr	r24
     ec0:	83 70       	andi	r24, 0x03	; 3
     ec2:	8a 83       	std	Y+2, r24	; 0x02
	uint8_t theHighADC = ADCH;		// Luetaan AD-muuntimelta tuleva MSB
     ec4:	e5 e2       	ldi	r30, 0x25	; 37
     ec6:	f0 e0       	ldi	r31, 0x00	; 0
     ec8:	80 81       	ld	r24, Z
     eca:	89 83       	std	Y+1, r24	; 0x01

	ADCresult = theLowADC | (theHighADC<<2);	//Yhdistet‰‰n AD-muuntimen LSB ja MSB ja bittien siirto
     ecc:	8a 81       	ldd	r24, Y+2	; 0x02
     ece:	28 2f       	mov	r18, r24
     ed0:	30 e0       	ldi	r19, 0x00	; 0
     ed2:	89 81       	ldd	r24, Y+1	; 0x01
     ed4:	88 2f       	mov	r24, r24
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	88 0f       	add	r24, r24
     eda:	99 1f       	adc	r25, r25
     edc:	88 0f       	add	r24, r24
     ede:	99 1f       	adc	r25, r25
     ee0:	82 2b       	or	r24, r18
     ee2:	93 2b       	or	r25, r19
     ee4:	aa 27       	eor	r26, r26
     ee6:	97 fd       	sbrc	r25, 7
     ee8:	a0 95       	com	r26
     eea:	ba 2f       	mov	r27, r26
     eec:	80 93 3c 02 	sts	0x023C, r24
     ef0:	90 93 3d 02 	sts	0x023D, r25
     ef4:	a0 93 3e 02 	sts	0x023E, r26
     ef8:	b0 93 3f 02 	sts	0x023F, r27
	ADCresult = ADCresult & 0x03FF;				//Tuloksen maskaus
     efc:	80 91 3c 02 	lds	r24, 0x023C
     f00:	90 91 3d 02 	lds	r25, 0x023D
     f04:	a0 91 3e 02 	lds	r26, 0x023E
     f08:	b0 91 3f 02 	lds	r27, 0x023F
     f0c:	93 70       	andi	r25, 0x03	; 3
     f0e:	a0 70       	andi	r26, 0x00	; 0
     f10:	b0 70       	andi	r27, 0x00	; 0
     f12:	80 93 3c 02 	sts	0x023C, r24
     f16:	90 93 3d 02 	sts	0x023D, r25
     f1a:	a0 93 3e 02 	sts	0x023E, r26
     f1e:	b0 93 3f 02 	sts	0x023F, r27
	intermed = ADCresult;						
     f22:	80 91 3c 02 	lds	r24, 0x023C
     f26:	90 91 3d 02 	lds	r25, 0x023D
     f2a:	a0 91 3e 02 	lds	r26, 0x023E
     f2e:	b0 91 3f 02 	lds	r27, 0x023F
     f32:	bc 01       	movw	r22, r24
     f34:	cd 01       	movw	r24, r26
     f36:	0e 94 ec 11 	call	0x23d8	; 0x23d8 <__floatunsisf>
     f3a:	dc 01       	movw	r26, r24
     f3c:	cb 01       	movw	r24, r22
     f3e:	80 93 2c 02 	sts	0x022C, r24
     f42:	90 93 2d 02 	sts	0x022D, r25
     f46:	a0 93 2e 02 	sts	0x022E, r26
     f4a:	b0 93 2f 02 	sts	0x022F, r27

	sei();										//Sallitaan keskeytykset
     f4e:	78 94       	sei
	ADCSRA |= 1<<ADSC;							//Aloitetaan uusi muunnos			
     f50:	a6 e2       	ldi	r26, 0x26	; 38
     f52:	b0 e0       	ldi	r27, 0x00	; 0
     f54:	e6 e2       	ldi	r30, 0x26	; 38
     f56:	f0 e0       	ldi	r31, 0x00	; 0
     f58:	80 81       	ld	r24, Z
     f5a:	80 64       	ori	r24, 0x40	; 64
     f5c:	8c 93       	st	X, r24
}
     f5e:	0f 90       	pop	r0
     f60:	0f 90       	pop	r0
     f62:	cf 91       	pop	r28
     f64:	df 91       	pop	r29
     f66:	ff 91       	pop	r31
     f68:	ef 91       	pop	r30
     f6a:	bf 91       	pop	r27
     f6c:	af 91       	pop	r26
     f6e:	9f 91       	pop	r25
     f70:	8f 91       	pop	r24
     f72:	7f 91       	pop	r23
     f74:	6f 91       	pop	r22
     f76:	5f 91       	pop	r21
     f78:	4f 91       	pop	r20
     f7a:	3f 91       	pop	r19
     f7c:	2f 91       	pop	r18
     f7e:	0f 90       	pop	r0
     f80:	00 92 5b 00 	sts	0x005B, r0
     f84:	0f 90       	pop	r0
     f86:	0f be       	out	0x3f, r0	; 63
     f88:	0f 90       	pop	r0
     f8a:	1f 90       	pop	r1
     f8c:	18 95       	reti

00000f8e <lcd_init>:


Performs IO & LCD controller initialization 
*************************************************************/
void lcd_init(void)
{
     f8e:	df 93       	push	r29
     f90:	cf 93       	push	r28
     f92:	cd b7       	in	r28, 0x3d	; 61
     f94:	de b7       	in	r29, 0x3e	; 62
     f96:	aa 97       	sbiw	r28, 0x2a	; 42
     f98:	0f b6       	in	r0, 0x3f	; 63
     f9a:	f8 94       	cli
     f9c:	de bf       	out	0x3e, r29	; 62
     f9e:	0f be       	out	0x3f, r0	; 63
     fa0:	cd bf       	out	0x3d, r28	; 61

	// Pull-up on reset pin
	LCD_PORT |= LCD_RST_PIN;	// Reset = 1
     fa2:	a5 e3       	ldi	r26, 0x35	; 53
     fa4:	b0 e0       	ldi	r27, 0x00	; 0
     fa6:	e5 e3       	ldi	r30, 0x35	; 53
     fa8:	f0 e0       	ldi	r31, 0x00	; 0
     faa:	80 81       	ld	r24, Z
     fac:	81 60       	ori	r24, 0x01	; 1
     fae:	8c 93       	st	X, r24

	// Set output bits on lcd port
	LCD_DDR |= LCD_RST_PIN | LCD_CE_PIN | LCD_DC_PIN | LCD_DATA_PIN | LCD_CLK_PIN;
     fb0:	a4 e3       	ldi	r26, 0x34	; 52
     fb2:	b0 e0       	ldi	r27, 0x00	; 0
     fb4:	e4 e3       	ldi	r30, 0x34	; 52
     fb6:	f0 e0       	ldi	r31, 0x00	; 0
     fb8:	80 81       	ld	r24, Z
     fba:	8f 61       	ori	r24, 0x1F	; 31
     fbc:	8c 93       	st	X, r24
     fbe:	80 e0       	ldi	r24, 0x00	; 0
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	a0 e7       	ldi	r26, 0x70	; 112
     fc4:	b1 e4       	ldi	r27, 0x41	; 65
     fc6:	8f a3       	std	Y+39, r24	; 0x27
     fc8:	98 a7       	std	Y+40, r25	; 0x28
     fca:	a9 a7       	std	Y+41, r26	; 0x29
     fcc:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     fce:	6f a1       	ldd	r22, Y+39	; 0x27
     fd0:	78 a5       	ldd	r23, Y+40	; 0x28
     fd2:	89 a5       	ldd	r24, Y+41	; 0x29
     fd4:	9a a5       	ldd	r25, Y+42	; 0x2a
     fd6:	20 e0       	ldi	r18, 0x00	; 0
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	4a e7       	ldi	r20, 0x7A	; 122
     fdc:	53 e4       	ldi	r21, 0x43	; 67
     fde:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
     fe2:	dc 01       	movw	r26, r24
     fe4:	cb 01       	movw	r24, r22
     fe6:	8b a3       	std	Y+35, r24	; 0x23
     fe8:	9c a3       	std	Y+36, r25	; 0x24
     fea:	ad a3       	std	Y+37, r26	; 0x25
     fec:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     fee:	6b a1       	ldd	r22, Y+35	; 0x23
     ff0:	7c a1       	ldd	r23, Y+36	; 0x24
     ff2:	8d a1       	ldd	r24, Y+37	; 0x25
     ff4:	9e a1       	ldd	r25, Y+38	; 0x26
     ff6:	20 e0       	ldi	r18, 0x00	; 0
     ff8:	30 e0       	ldi	r19, 0x00	; 0
     ffa:	40 e8       	ldi	r20, 0x80	; 128
     ffc:	5f e3       	ldi	r21, 0x3F	; 63
     ffe:	0e 94 68 11 	call	0x22d0	; 0x22d0 <__ltsf2>
    1002:	88 23       	and	r24, r24
    1004:	2c f4       	brge	.+10     	; 0x1010 <lcd_init+0x82>
		__ticks = 1;
    1006:	81 e0       	ldi	r24, 0x01	; 1
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	9a a3       	std	Y+34, r25	; 0x22
    100c:	89 a3       	std	Y+33, r24	; 0x21
    100e:	3f c0       	rjmp	.+126    	; 0x108e <lcd_init+0x100>
	else if (__tmp > 65535)
    1010:	6b a1       	ldd	r22, Y+35	; 0x23
    1012:	7c a1       	ldd	r23, Y+36	; 0x24
    1014:	8d a1       	ldd	r24, Y+37	; 0x25
    1016:	9e a1       	ldd	r25, Y+38	; 0x26
    1018:	20 e0       	ldi	r18, 0x00	; 0
    101a:	3f ef       	ldi	r19, 0xFF	; 255
    101c:	4f e7       	ldi	r20, 0x7F	; 127
    101e:	57 e4       	ldi	r21, 0x47	; 71
    1020:	0e 94 08 11 	call	0x2210	; 0x2210 <__gtsf2>
    1024:	18 16       	cp	r1, r24
    1026:	4c f5       	brge	.+82     	; 0x107a <lcd_init+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1028:	6f a1       	ldd	r22, Y+39	; 0x27
    102a:	78 a5       	ldd	r23, Y+40	; 0x28
    102c:	89 a5       	ldd	r24, Y+41	; 0x29
    102e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1030:	20 e0       	ldi	r18, 0x00	; 0
    1032:	30 e0       	ldi	r19, 0x00	; 0
    1034:	40 e2       	ldi	r20, 0x20	; 32
    1036:	51 e4       	ldi	r21, 0x41	; 65
    1038:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
    103c:	dc 01       	movw	r26, r24
    103e:	cb 01       	movw	r24, r22
    1040:	bc 01       	movw	r22, r24
    1042:	cd 01       	movw	r24, r26
    1044:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixunssfsi>
    1048:	dc 01       	movw	r26, r24
    104a:	cb 01       	movw	r24, r22
    104c:	9a a3       	std	Y+34, r25	; 0x22
    104e:	89 a3       	std	Y+33, r24	; 0x21
    1050:	0f c0       	rjmp	.+30     	; 0x1070 <lcd_init+0xe2>
    1052:	89 e1       	ldi	r24, 0x19	; 25
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	98 a3       	std	Y+32, r25	; 0x20
    1058:	8f 8f       	std	Y+31, r24	; 0x1f
    105a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    105c:	98 a1       	ldd	r25, Y+32	; 0x20
    105e:	01 97       	sbiw	r24, 0x01	; 1
    1060:	f1 f7       	brne	.-4      	; 0x105e <lcd_init+0xd0>
    1062:	98 a3       	std	Y+32, r25	; 0x20
    1064:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1066:	89 a1       	ldd	r24, Y+33	; 0x21
    1068:	9a a1       	ldd	r25, Y+34	; 0x22
    106a:	01 97       	sbiw	r24, 0x01	; 1
    106c:	9a a3       	std	Y+34, r25	; 0x22
    106e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1070:	89 a1       	ldd	r24, Y+33	; 0x21
    1072:	9a a1       	ldd	r25, Y+34	; 0x22
    1074:	00 97       	sbiw	r24, 0x00	; 0
    1076:	69 f7       	brne	.-38     	; 0x1052 <lcd_init+0xc4>
    1078:	14 c0       	rjmp	.+40     	; 0x10a2 <lcd_init+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    107a:	6b a1       	ldd	r22, Y+35	; 0x23
    107c:	7c a1       	ldd	r23, Y+36	; 0x24
    107e:	8d a1       	ldd	r24, Y+37	; 0x25
    1080:	9e a1       	ldd	r25, Y+38	; 0x26
    1082:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixunssfsi>
    1086:	dc 01       	movw	r26, r24
    1088:	cb 01       	movw	r24, r22
    108a:	9a a3       	std	Y+34, r25	; 0x22
    108c:	89 a3       	std	Y+33, r24	; 0x21
    108e:	89 a1       	ldd	r24, Y+33	; 0x21
    1090:	9a a1       	ldd	r25, Y+34	; 0x22
    1092:	9e 8f       	std	Y+30, r25	; 0x1e
    1094:	8d 8f       	std	Y+29, r24	; 0x1d
    1096:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1098:	9e 8d       	ldd	r25, Y+30	; 0x1e
    109a:	01 97       	sbiw	r24, 0x01	; 1
    109c:	f1 f7       	brne	.-4      	; 0x109a <lcd_init+0x10c>
    109e:	9e 8f       	std	Y+30, r25	; 0x1e
    10a0:	8d 8f       	std	Y+29, r24	; 0x1d

	// Wait after VCC high for reset (max 30ms)
	_delay_ms(15);

	// Toggle display reset pin
	LCD_PORT &= ~LCD_RST_PIN; // Reset = 0
    10a2:	a5 e3       	ldi	r26, 0x35	; 53
    10a4:	b0 e0       	ldi	r27, 0x00	; 0
    10a6:	e5 e3       	ldi	r30, 0x35	; 53
    10a8:	f0 e0       	ldi	r31, 0x00	; 0
    10aa:	80 81       	ld	r24, Z
    10ac:	8e 7f       	andi	r24, 0xFE	; 254
    10ae:	8c 93       	st	X, r24
    10b0:	80 e0       	ldi	r24, 0x00	; 0
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	a0 e7       	ldi	r26, 0x70	; 112
    10b6:	b1 e4       	ldi	r27, 0x41	; 65
    10b8:	89 8f       	std	Y+25, r24	; 0x19
    10ba:	9a 8f       	std	Y+26, r25	; 0x1a
    10bc:	ab 8f       	std	Y+27, r26	; 0x1b
    10be:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10c0:	69 8d       	ldd	r22, Y+25	; 0x19
    10c2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    10c4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    10c6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    10c8:	20 e0       	ldi	r18, 0x00	; 0
    10ca:	30 e0       	ldi	r19, 0x00	; 0
    10cc:	4a e7       	ldi	r20, 0x7A	; 122
    10ce:	53 e4       	ldi	r21, 0x43	; 67
    10d0:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
    10d4:	dc 01       	movw	r26, r24
    10d6:	cb 01       	movw	r24, r22
    10d8:	8d 8b       	std	Y+21, r24	; 0x15
    10da:	9e 8b       	std	Y+22, r25	; 0x16
    10dc:	af 8b       	std	Y+23, r26	; 0x17
    10de:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    10e0:	6d 89       	ldd	r22, Y+21	; 0x15
    10e2:	7e 89       	ldd	r23, Y+22	; 0x16
    10e4:	8f 89       	ldd	r24, Y+23	; 0x17
    10e6:	98 8d       	ldd	r25, Y+24	; 0x18
    10e8:	20 e0       	ldi	r18, 0x00	; 0
    10ea:	30 e0       	ldi	r19, 0x00	; 0
    10ec:	40 e8       	ldi	r20, 0x80	; 128
    10ee:	5f e3       	ldi	r21, 0x3F	; 63
    10f0:	0e 94 68 11 	call	0x22d0	; 0x22d0 <__ltsf2>
    10f4:	88 23       	and	r24, r24
    10f6:	2c f4       	brge	.+10     	; 0x1102 <__stack+0x3>
		__ticks = 1;
    10f8:	81 e0       	ldi	r24, 0x01	; 1
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	9c 8b       	std	Y+20, r25	; 0x14
    10fe:	8b 8b       	std	Y+19, r24	; 0x13
    1100:	3f c0       	rjmp	.+126    	; 0x1180 <__stack+0x81>
	else if (__tmp > 65535)
    1102:	6d 89       	ldd	r22, Y+21	; 0x15
    1104:	7e 89       	ldd	r23, Y+22	; 0x16
    1106:	8f 89       	ldd	r24, Y+23	; 0x17
    1108:	98 8d       	ldd	r25, Y+24	; 0x18
    110a:	20 e0       	ldi	r18, 0x00	; 0
    110c:	3f ef       	ldi	r19, 0xFF	; 255
    110e:	4f e7       	ldi	r20, 0x7F	; 127
    1110:	57 e4       	ldi	r21, 0x47	; 71
    1112:	0e 94 08 11 	call	0x2210	; 0x2210 <__gtsf2>
    1116:	18 16       	cp	r1, r24
    1118:	4c f5       	brge	.+82     	; 0x116c <__stack+0x6d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    111a:	69 8d       	ldd	r22, Y+25	; 0x19
    111c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    111e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1120:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1122:	20 e0       	ldi	r18, 0x00	; 0
    1124:	30 e0       	ldi	r19, 0x00	; 0
    1126:	40 e2       	ldi	r20, 0x20	; 32
    1128:	51 e4       	ldi	r21, 0x41	; 65
    112a:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
    112e:	dc 01       	movw	r26, r24
    1130:	cb 01       	movw	r24, r22
    1132:	bc 01       	movw	r22, r24
    1134:	cd 01       	movw	r24, r26
    1136:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixunssfsi>
    113a:	dc 01       	movw	r26, r24
    113c:	cb 01       	movw	r24, r22
    113e:	9c 8b       	std	Y+20, r25	; 0x14
    1140:	8b 8b       	std	Y+19, r24	; 0x13
    1142:	0f c0       	rjmp	.+30     	; 0x1162 <__stack+0x63>
    1144:	89 e1       	ldi	r24, 0x19	; 25
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	9a 8b       	std	Y+18, r25	; 0x12
    114a:	89 8b       	std	Y+17, r24	; 0x11
    114c:	89 89       	ldd	r24, Y+17	; 0x11
    114e:	9a 89       	ldd	r25, Y+18	; 0x12
    1150:	01 97       	sbiw	r24, 0x01	; 1
    1152:	f1 f7       	brne	.-4      	; 0x1150 <__stack+0x51>
    1154:	9a 8b       	std	Y+18, r25	; 0x12
    1156:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1158:	8b 89       	ldd	r24, Y+19	; 0x13
    115a:	9c 89       	ldd	r25, Y+20	; 0x14
    115c:	01 97       	sbiw	r24, 0x01	; 1
    115e:	9c 8b       	std	Y+20, r25	; 0x14
    1160:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1162:	8b 89       	ldd	r24, Y+19	; 0x13
    1164:	9c 89       	ldd	r25, Y+20	; 0x14
    1166:	00 97       	sbiw	r24, 0x00	; 0
    1168:	69 f7       	brne	.-38     	; 0x1144 <__stack+0x45>
    116a:	14 c0       	rjmp	.+40     	; 0x1194 <__stack+0x95>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    116c:	6d 89       	ldd	r22, Y+21	; 0x15
    116e:	7e 89       	ldd	r23, Y+22	; 0x16
    1170:	8f 89       	ldd	r24, Y+23	; 0x17
    1172:	98 8d       	ldd	r25, Y+24	; 0x18
    1174:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixunssfsi>
    1178:	dc 01       	movw	r26, r24
    117a:	cb 01       	movw	r24, r22
    117c:	9c 8b       	std	Y+20, r25	; 0x14
    117e:	8b 8b       	std	Y+19, r24	; 0x13
    1180:	8b 89       	ldd	r24, Y+19	; 0x13
    1182:	9c 89       	ldd	r25, Y+20	; 0x14
    1184:	98 8b       	std	Y+16, r25	; 0x10
    1186:	8f 87       	std	Y+15, r24	; 0x0f
    1188:	8f 85       	ldd	r24, Y+15	; 0x0f
    118a:	98 89       	ldd	r25, Y+16	; 0x10
    118c:	01 97       	sbiw	r24, 0x01	; 1
    118e:	f1 f7       	brne	.-4      	; 0x118c <__stack+0x8d>
    1190:	98 8b       	std	Y+16, r25	; 0x10
    1192:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(15);
	LCD_PORT |= LCD_RST_PIN;	// Reset = 1
    1194:	a5 e3       	ldi	r26, 0x35	; 53
    1196:	b0 e0       	ldi	r27, 0x00	; 0
    1198:	e5 e3       	ldi	r30, 0x35	; 53
    119a:	f0 e0       	ldi	r31, 0x00	; 0
    119c:	80 81       	ld	r24, Z
    119e:	81 60       	ori	r24, 0x01	; 1
    11a0:	8c 93       	st	X, r24
    11a2:	80 e0       	ldi	r24, 0x00	; 0
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	a0 e7       	ldi	r26, 0x70	; 112
    11a8:	b1 e4       	ldi	r27, 0x41	; 65
    11aa:	8b 87       	std	Y+11, r24	; 0x0b
    11ac:	9c 87       	std	Y+12, r25	; 0x0c
    11ae:	ad 87       	std	Y+13, r26	; 0x0d
    11b0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11b2:	6b 85       	ldd	r22, Y+11	; 0x0b
    11b4:	7c 85       	ldd	r23, Y+12	; 0x0c
    11b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    11b8:	9e 85       	ldd	r25, Y+14	; 0x0e
    11ba:	20 e0       	ldi	r18, 0x00	; 0
    11bc:	30 e0       	ldi	r19, 0x00	; 0
    11be:	4a e7       	ldi	r20, 0x7A	; 122
    11c0:	53 e4       	ldi	r21, 0x43	; 67
    11c2:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
    11c6:	dc 01       	movw	r26, r24
    11c8:	cb 01       	movw	r24, r22
    11ca:	8f 83       	std	Y+7, r24	; 0x07
    11cc:	98 87       	std	Y+8, r25	; 0x08
    11ce:	a9 87       	std	Y+9, r26	; 0x09
    11d0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    11d2:	6f 81       	ldd	r22, Y+7	; 0x07
    11d4:	78 85       	ldd	r23, Y+8	; 0x08
    11d6:	89 85       	ldd	r24, Y+9	; 0x09
    11d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    11da:	20 e0       	ldi	r18, 0x00	; 0
    11dc:	30 e0       	ldi	r19, 0x00	; 0
    11de:	40 e8       	ldi	r20, 0x80	; 128
    11e0:	5f e3       	ldi	r21, 0x3F	; 63
    11e2:	0e 94 68 11 	call	0x22d0	; 0x22d0 <__ltsf2>
    11e6:	88 23       	and	r24, r24
    11e8:	2c f4       	brge	.+10     	; 0x11f4 <__stack+0xf5>
		__ticks = 1;
    11ea:	81 e0       	ldi	r24, 0x01	; 1
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	9e 83       	std	Y+6, r25	; 0x06
    11f0:	8d 83       	std	Y+5, r24	; 0x05
    11f2:	3f c0       	rjmp	.+126    	; 0x1272 <__stack+0x173>
	else if (__tmp > 65535)
    11f4:	6f 81       	ldd	r22, Y+7	; 0x07
    11f6:	78 85       	ldd	r23, Y+8	; 0x08
    11f8:	89 85       	ldd	r24, Y+9	; 0x09
    11fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    11fc:	20 e0       	ldi	r18, 0x00	; 0
    11fe:	3f ef       	ldi	r19, 0xFF	; 255
    1200:	4f e7       	ldi	r20, 0x7F	; 127
    1202:	57 e4       	ldi	r21, 0x47	; 71
    1204:	0e 94 08 11 	call	0x2210	; 0x2210 <__gtsf2>
    1208:	18 16       	cp	r1, r24
    120a:	4c f5       	brge	.+82     	; 0x125e <__stack+0x15f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    120c:	6b 85       	ldd	r22, Y+11	; 0x0b
    120e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1210:	8d 85       	ldd	r24, Y+13	; 0x0d
    1212:	9e 85       	ldd	r25, Y+14	; 0x0e
    1214:	20 e0       	ldi	r18, 0x00	; 0
    1216:	30 e0       	ldi	r19, 0x00	; 0
    1218:	40 e2       	ldi	r20, 0x20	; 32
    121a:	51 e4       	ldi	r21, 0x41	; 65
    121c:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__mulsf3>
    1220:	dc 01       	movw	r26, r24
    1222:	cb 01       	movw	r24, r22
    1224:	bc 01       	movw	r22, r24
    1226:	cd 01       	movw	r24, r26
    1228:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixunssfsi>
    122c:	dc 01       	movw	r26, r24
    122e:	cb 01       	movw	r24, r22
    1230:	9e 83       	std	Y+6, r25	; 0x06
    1232:	8d 83       	std	Y+5, r24	; 0x05
    1234:	0f c0       	rjmp	.+30     	; 0x1254 <__stack+0x155>
    1236:	89 e1       	ldi	r24, 0x19	; 25
    1238:	90 e0       	ldi	r25, 0x00	; 0
    123a:	9c 83       	std	Y+4, r25	; 0x04
    123c:	8b 83       	std	Y+3, r24	; 0x03
    123e:	8b 81       	ldd	r24, Y+3	; 0x03
    1240:	9c 81       	ldd	r25, Y+4	; 0x04
    1242:	01 97       	sbiw	r24, 0x01	; 1
    1244:	f1 f7       	brne	.-4      	; 0x1242 <__stack+0x143>
    1246:	9c 83       	std	Y+4, r25	; 0x04
    1248:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    124a:	8d 81       	ldd	r24, Y+5	; 0x05
    124c:	9e 81       	ldd	r25, Y+6	; 0x06
    124e:	01 97       	sbiw	r24, 0x01	; 1
    1250:	9e 83       	std	Y+6, r25	; 0x06
    1252:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1254:	8d 81       	ldd	r24, Y+5	; 0x05
    1256:	9e 81       	ldd	r25, Y+6	; 0x06
    1258:	00 97       	sbiw	r24, 0x00	; 0
    125a:	69 f7       	brne	.-38     	; 0x1236 <__stack+0x137>
    125c:	14 c0       	rjmp	.+40     	; 0x1286 <__stack+0x187>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    125e:	6f 81       	ldd	r22, Y+7	; 0x07
    1260:	78 85       	ldd	r23, Y+8	; 0x08
    1262:	89 85       	ldd	r24, Y+9	; 0x09
    1264:	9a 85       	ldd	r25, Y+10	; 0x0a
    1266:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixunssfsi>
    126a:	dc 01       	movw	r26, r24
    126c:	cb 01       	movw	r24, r22
    126e:	9e 83       	std	Y+6, r25	; 0x06
    1270:	8d 83       	std	Y+5, r24	; 0x05
    1272:	8d 81       	ldd	r24, Y+5	; 0x05
    1274:	9e 81       	ldd	r25, Y+6	; 0x06
    1276:	9a 83       	std	Y+2, r25	; 0x02
    1278:	89 83       	std	Y+1, r24	; 0x01
    127a:	89 81       	ldd	r24, Y+1	; 0x01
    127c:	9a 81       	ldd	r25, Y+2	; 0x02
    127e:	01 97       	sbiw	r24, 0x01	; 1
    1280:	f1 f7       	brne	.-4      	; 0x127e <__stack+0x17f>
    1282:	9a 83       	std	Y+2, r25	; 0x02
    1284:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(15);

	// Disable LCD controller
	LCD_PORT |= LCD_CE_PIN;
    1286:	a5 e3       	ldi	r26, 0x35	; 53
    1288:	b0 e0       	ldi	r27, 0x00	; 0
    128a:	e5 e3       	ldi	r30, 0x35	; 53
    128c:	f0 e0       	ldi	r31, 0x00	; 0
    128e:	80 81       	ld	r24, Z
    1290:	82 60       	ori	r24, 0x02	; 2
    1292:	8c 93       	st	X, r24

	lcd_send(0xEB, LCD_CMD);  	// LCD bias 
    1294:	8b ee       	ldi	r24, 0xEB	; 235
    1296:	60 e0       	ldi	r22, 0x00	; 0
    1298:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
	lcd_send(0x23, LCD_CMD);  	// Set Lines >> 23 = 64
    129c:	83 e2       	ldi	r24, 0x23	; 35
    129e:	60 e0       	ldi	r22, 0x00	; 0
    12a0:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
	lcd_send(0x81, LCD_CMD);	// Set Potentiometer
    12a4:	81 e8       	ldi	r24, 0x81	; 129
    12a6:	60 e0       	ldi	r22, 0x00	; 0
    12a8:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
	lcd_send(0x64, LCD_CMD);	// 16 >> 64 (Tummuus)
    12ac:	84 e6       	ldi	r24, 0x64	; 100
    12ae:	60 e0       	ldi	r22, 0x00	; 0
    12b0:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
	lcd_send(0xAF, LCD_CMD);  	// Set Display ON
    12b4:	8f ea       	ldi	r24, 0xAF	; 175
    12b6:	60 e0       	ldi	r22, 0x00	; 0
    12b8:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
	lcd_send(0xCC, LCD_CMD);  	// Set LCD to RAM mapping
    12bc:	8c ec       	ldi	r24, 0xCC	; 204
    12be:	60 e0       	ldi	r22, 0x00	; 0
    12c0:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>


	//cd_send(0xA5, LCD_CMD);  // All pixel ON TESTIƒ

	// Clear lcd
	lcd_clear();
    12c4:	0e 94 84 09 	call	0x1308	; 0x1308 <lcd_clear>

	// For using printf
	//fdevopen(lcd_chr, 0);
}
    12c8:	aa 96       	adiw	r28, 0x2a	; 42
    12ca:	0f b6       	in	r0, 0x3f	; 63
    12cc:	f8 94       	cli
    12ce:	de bf       	out	0x3e, r29	; 62
    12d0:	0f be       	out	0x3f, r0	; 63
    12d2:	cd bf       	out	0x3d, r28	; 61
    12d4:	cf 91       	pop	r28
    12d6:	df 91       	pop	r29
    12d8:	08 95       	ret

000012da <lcd_contrast>:

/*********************************************************************
Kontrastin s‰‰tˆ
**********************************************************************/
void lcd_contrast(unsigned char contrast)
{
    12da:	df 93       	push	r29
    12dc:	cf 93       	push	r28
    12de:	0f 92       	push	r0
    12e0:	cd b7       	in	r28, 0x3d	; 61
    12e2:	de b7       	in	r29, 0x3e	; 62
    12e4:	89 83       	std	Y+1, r24	; 0x01
	lcd_send(0x21, LCD_CMD);				// LCD Extended Commands
    12e6:	81 e2       	ldi	r24, 0x21	; 33
    12e8:	60 e0       	ldi	r22, 0x00	; 0
    12ea:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
	lcd_send(0x80 | contrast, LCD_CMD);		// Set LCD Vop(Contrast)
    12ee:	89 81       	ldd	r24, Y+1	; 0x01
    12f0:	80 68       	ori	r24, 0x80	; 128
    12f2:	60 e0       	ldi	r22, 0x00	; 0
    12f4:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
	lcd_send(0x20, LCD_CMD);				// LCD std cmds, hori addr mode
    12f8:	80 e2       	ldi	r24, 0x20	; 32
    12fa:	60 e0       	ldi	r22, 0x00	; 0
    12fc:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
}
    1300:	0f 90       	pop	r0
    1302:	cf 91       	pop	r28
    1304:	df 91       	pop	r29
    1306:	08 95       	ret

00001308 <lcd_clear>:

/*****************************************
N‰ytˆn tyhjennys
******************************************/
void lcd_clear(void)
{
    1308:	df 93       	push	r29
    130a:	cf 93       	push	r28
    130c:	00 d0       	rcall	.+0      	; 0x130e <lcd_clear+0x6>
    130e:	00 d0       	rcall	.+0      	; 0x1310 <lcd_clear+0x8>
    1310:	cd b7       	in	r28, 0x3d	; 61
    1312:	de b7       	in	r29, 0x3e	; 62
	int j,i;

	for(j=0;j<8;j++){
    1314:	1c 82       	std	Y+4, r1	; 0x04
    1316:	1b 82       	std	Y+3, r1	; 0x03
    1318:	36 c0       	rjmp	.+108    	; 0x1386 <lcd_clear+0x7e>
		lcd_send(0xB0|j, LCD_CMD);	// page j
    131a:	8b 81       	ldd	r24, Y+3	; 0x03
    131c:	80 6b       	ori	r24, 0xB0	; 176
    131e:	60 e0       	ldi	r22, 0x00	; 0
    1320:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
		lcd_send(0x10, LCD_CMD);
    1324:	80 e1       	ldi	r24, 0x10	; 16
    1326:	60 e0       	ldi	r22, 0x00	; 0
    1328:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
		lcd_send(0x00, LCD_CMD);	// column 0
    132c:	80 e0       	ldi	r24, 0x00	; 0
    132e:	60 e0       	ldi	r22, 0x00	; 0
    1330:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>


		for(i=0;i<128;i++){
    1334:	1a 82       	std	Y+2, r1	; 0x02
    1336:	19 82       	std	Y+1, r1	; 0x01
    1338:	1c c0       	rjmp	.+56     	; 0x1372 <lcd_clear+0x6a>
			lcd_send(0x00, LCD_DATA);
    133a:	80 e0       	ldi	r24, 0x00	; 0
    133c:	61 e0       	ldi	r22, 0x01	; 1
    133e:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
			lcdCacheData[i][j]=0;		
    1342:	89 81       	ldd	r24, Y+1	; 0x01
    1344:	9a 81       	ldd	r25, Y+2	; 0x02
    1346:	2b 81       	ldd	r18, Y+3	; 0x03
    1348:	3c 81       	ldd	r19, Y+4	; 0x04
    134a:	88 0f       	add	r24, r24
    134c:	99 1f       	adc	r25, r25
    134e:	88 0f       	add	r24, r24
    1350:	99 1f       	adc	r25, r25
    1352:	88 0f       	add	r24, r24
    1354:	99 1f       	adc	r25, r25
    1356:	82 0f       	add	r24, r18
    1358:	93 1f       	adc	r25, r19
    135a:	88 0f       	add	r24, r24
    135c:	99 1f       	adc	r25, r25
    135e:	fc 01       	movw	r30, r24
    1360:	e6 5b       	subi	r30, 0xB6	; 182
    1362:	fd 4f       	sbci	r31, 0xFD	; 253
    1364:	11 82       	std	Z+1, r1	; 0x01
    1366:	10 82       	st	Z, r1
		lcd_send(0xB0|j, LCD_CMD);	// page j
		lcd_send(0x10, LCD_CMD);
		lcd_send(0x00, LCD_CMD);	// column 0


		for(i=0;i<128;i++){
    1368:	89 81       	ldd	r24, Y+1	; 0x01
    136a:	9a 81       	ldd	r25, Y+2	; 0x02
    136c:	01 96       	adiw	r24, 0x01	; 1
    136e:	9a 83       	std	Y+2, r25	; 0x02
    1370:	89 83       	std	Y+1, r24	; 0x01
    1372:	89 81       	ldd	r24, Y+1	; 0x01
    1374:	9a 81       	ldd	r25, Y+2	; 0x02
    1376:	80 38       	cpi	r24, 0x80	; 128
    1378:	91 05       	cpc	r25, r1
    137a:	fc f2       	brlt	.-66     	; 0x133a <lcd_clear+0x32>
******************************************/
void lcd_clear(void)
{
	int j,i;

	for(j=0;j<8;j++){
    137c:	8b 81       	ldd	r24, Y+3	; 0x03
    137e:	9c 81       	ldd	r25, Y+4	; 0x04
    1380:	01 96       	adiw	r24, 0x01	; 1
    1382:	9c 83       	std	Y+4, r25	; 0x04
    1384:	8b 83       	std	Y+3, r24	; 0x03
    1386:	8b 81       	ldd	r24, Y+3	; 0x03
    1388:	9c 81       	ldd	r25, Y+4	; 0x04
    138a:	88 30       	cpi	r24, 0x08	; 8
    138c:	91 05       	cpc	r25, r1
    138e:	2c f2       	brlt	.-118    	; 0x131a <lcd_clear+0x12>
			lcd_send(0x00, LCD_DATA);
			lcdCacheData[i][j]=0;		
		}			
	}    

	lcd_send(0xB0, LCD_CMD);	// page 0
    1390:	80 eb       	ldi	r24, 0xB0	; 176
    1392:	60 e0       	ldi	r22, 0x00	; 0
    1394:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
	lcd_send(0x10, LCD_CMD);
    1398:	80 e1       	ldi	r24, 0x10	; 16
    139a:	60 e0       	ldi	r22, 0x00	; 0
    139c:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
	lcd_send(0x00, LCD_CMD);	// column 0
    13a0:	80 e0       	ldi	r24, 0x00	; 0
    13a2:	60 e0       	ldi	r22, 0x00	; 0
    13a4:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>

	lcdCacheIdx = 0;
    13a8:	10 92 4b 0a 	sts	0x0A4B, r1
    13ac:	10 92 4a 0a 	sts	0x0A4A, r1
	lcdCacheIdy = 0;
    13b0:	10 92 49 02 	sts	0x0249, r1
    13b4:	10 92 48 02 	sts	0x0248, r1
}
    13b8:	0f 90       	pop	r0
    13ba:	0f 90       	pop	r0
    13bc:	0f 90       	pop	r0
    13be:	0f 90       	pop	r0
    13c0:	cf 91       	pop	r28
    13c2:	df 91       	pop	r29
    13c4:	08 95       	ret

000013c6 <lcd_goto_xy>:

/**********************************************
Sets cursor location to exact xy pixel location on the lcd 
***********************************************/
void lcd_goto_xy(unsigned char x, unsigned char y)
{
    13c6:	df 93       	push	r29
    13c8:	cf 93       	push	r28
    13ca:	00 d0       	rcall	.+0      	; 0x13cc <lcd_goto_xy+0x6>
    13cc:	cd b7       	in	r28, 0x3d	; 61
    13ce:	de b7       	in	r29, 0x3e	; 62
    13d0:	89 83       	std	Y+1, r24	; 0x01
    13d2:	6a 83       	std	Y+2, r22	; 0x02
	lcdCacheIdx = x*6;
    13d4:	89 81       	ldd	r24, Y+1	; 0x01
    13d6:	28 2f       	mov	r18, r24
    13d8:	30 e0       	ldi	r19, 0x00	; 0
    13da:	c9 01       	movw	r24, r18
    13dc:	88 0f       	add	r24, r24
    13de:	99 1f       	adc	r25, r25
    13e0:	82 0f       	add	r24, r18
    13e2:	93 1f       	adc	r25, r19
    13e4:	88 0f       	add	r24, r24
    13e6:	99 1f       	adc	r25, r25
    13e8:	90 93 4b 0a 	sts	0x0A4B, r25
    13ec:	80 93 4a 0a 	sts	0x0A4A, r24
	lcdCacheIdy = y;
    13f0:	8a 81       	ldd	r24, Y+2	; 0x02
    13f2:	88 2f       	mov	r24, r24
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	90 93 49 02 	sts	0x0249, r25
    13fa:	80 93 48 02 	sts	0x0248, r24
	lcd_base_addr();
    13fe:	0e 94 01 0b 	call	0x1602	; 0x1602 <lcd_base_addr>
}
    1402:	0f 90       	pop	r0
    1404:	0f 90       	pop	r0
    1406:	cf 91       	pop	r28
    1408:	df 91       	pop	r29
    140a:	08 95       	ret

0000140c <lcd_goto_xy_exact>:

/**********************************************
Sets cursor location to exact xy pixel location on the lcd 
***********************************************/
void lcd_goto_xy_exact(unsigned char x, unsigned char y)
{
    140c:	df 93       	push	r29
    140e:	cf 93       	push	r28
    1410:	00 d0       	rcall	.+0      	; 0x1412 <lcd_goto_xy_exact+0x6>
    1412:	cd b7       	in	r28, 0x3d	; 61
    1414:	de b7       	in	r29, 0x3e	; 62
    1416:	89 83       	std	Y+1, r24	; 0x01
    1418:	6a 83       	std	Y+2, r22	; 0x02
	lcdCacheIdx = x;
    141a:	89 81       	ldd	r24, Y+1	; 0x01
    141c:	88 2f       	mov	r24, r24
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	90 93 4b 0a 	sts	0x0A4B, r25
    1424:	80 93 4a 0a 	sts	0x0A4A, r24
	lcdCacheIdy = y;
    1428:	8a 81       	ldd	r24, Y+2	; 0x02
    142a:	88 2f       	mov	r24, r24
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	90 93 49 02 	sts	0x0249, r25
    1432:	80 93 48 02 	sts	0x0248, r24
	lcd_base_addr();
    1436:	0e 94 01 0b 	call	0x1602	; 0x1602 <lcd_base_addr>
}
    143a:	0f 90       	pop	r0
    143c:	0f 90       	pop	r0
    143e:	cf 91       	pop	r28
    1440:	df 91       	pop	r29
    1442:	08 95       	ret

00001444 <lcd_chr>:

/**********************************************
Displays a character at current cursor location 
**********************************************/
void lcd_chr(char chr)
{
    1444:	df 93       	push	r29
    1446:	cf 93       	push	r28
    1448:	00 d0       	rcall	.+0      	; 0x144a <lcd_chr+0x6>
    144a:	00 d0       	rcall	.+0      	; 0x144c <lcd_chr+0x8>
    144c:	0f 92       	push	r0
    144e:	cd b7       	in	r28, 0x3d	; 61
    1450:	de b7       	in	r29, 0x3e	; 62
    1452:	8d 83       	std	Y+5, r24	; 0x05
	lcd_base_addr();
    1454:	0e 94 01 0b 	call	0x1602	; 0x1602 <lcd_base_addr>

	// 5 pixel wide characters and add space
	for(unsigned char i=0;i<5;i++) {
    1458:	1c 82       	std	Y+4, r1	; 0x04
    145a:	21 c0       	rjmp	.+66     	; 0x149e <lcd_chr+0x5a>
		lcd_send(pgm_read_byte(&font5x7[chr-32][i]) << 1, LCD_DATA);
    145c:	8d 81       	ldd	r24, Y+5	; 0x05
    145e:	28 2f       	mov	r18, r24
    1460:	30 e0       	ldi	r19, 0x00	; 0
    1462:	c9 01       	movw	r24, r18
    1464:	88 0f       	add	r24, r24
    1466:	99 1f       	adc	r25, r25
    1468:	88 0f       	add	r24, r24
    146a:	99 1f       	adc	r25, r25
    146c:	28 0f       	add	r18, r24
    146e:	39 1f       	adc	r19, r25
    1470:	8c 81       	ldd	r24, Y+4	; 0x04
    1472:	88 2f       	mov	r24, r24
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	82 0f       	add	r24, r18
    1478:	93 1f       	adc	r25, r19
    147a:	80 5a       	subi	r24, 0xA0	; 160
    147c:	90 40       	sbci	r25, 0x00	; 0
    147e:	8c 56       	subi	r24, 0x6C	; 108
    1480:	9f 4f       	sbci	r25, 0xFF	; 255
    1482:	9b 83       	std	Y+3, r25	; 0x03
    1484:	8a 83       	std	Y+2, r24	; 0x02
    1486:	ea 81       	ldd	r30, Y+2	; 0x02
    1488:	fb 81       	ldd	r31, Y+3	; 0x03
    148a:	84 91       	lpm	r24, Z+
    148c:	89 83       	std	Y+1, r24	; 0x01
    148e:	89 81       	ldd	r24, Y+1	; 0x01
    1490:	88 0f       	add	r24, r24
    1492:	61 e0       	ldi	r22, 0x01	; 1
    1494:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
void lcd_chr(char chr)
{
	lcd_base_addr();

	// 5 pixel wide characters and add space
	for(unsigned char i=0;i<5;i++) {
    1498:	8c 81       	ldd	r24, Y+4	; 0x04
    149a:	8f 5f       	subi	r24, 0xFF	; 255
    149c:	8c 83       	std	Y+4, r24	; 0x04
    149e:	8c 81       	ldd	r24, Y+4	; 0x04
    14a0:	85 30       	cpi	r24, 0x05	; 5
    14a2:	e0 f2       	brcs	.-72     	; 0x145c <lcd_chr+0x18>
		lcd_send(pgm_read_byte(&font5x7[chr-32][i]) << 1, LCD_DATA);
	}
	lcd_send(0, LCD_DATA);
    14a4:	80 e0       	ldi	r24, 0x00	; 0
    14a6:	61 e0       	ldi	r22, 0x01	; 1
    14a8:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>

	lcdCacheIdx += 6;
    14ac:	80 91 4a 0a 	lds	r24, 0x0A4A
    14b0:	90 91 4b 0a 	lds	r25, 0x0A4B
    14b4:	06 96       	adiw	r24, 0x06	; 6
    14b6:	90 93 4b 0a 	sts	0x0A4B, r25
    14ba:	80 93 4a 0a 	sts	0x0A4A, r24
}
    14be:	0f 90       	pop	r0
    14c0:	0f 90       	pop	r0
    14c2:	0f 90       	pop	r0
    14c4:	0f 90       	pop	r0
    14c6:	0f 90       	pop	r0
    14c8:	cf 91       	pop	r28
    14ca:	df 91       	pop	r29
    14cc:	08 95       	ret

000014ce <lcd_pixel>:

void lcd_pixel(char x, char y, char on)
{
    14ce:	df 93       	push	r29
    14d0:	cf 93       	push	r28
    14d2:	cd b7       	in	r28, 0x3d	; 61
    14d4:	de b7       	in	r29, 0x3e	; 62
    14d6:	27 97       	sbiw	r28, 0x07	; 7
    14d8:	0f b6       	in	r0, 0x3f	; 63
    14da:	f8 94       	cli
    14dc:	de bf       	out	0x3e, r29	; 62
    14de:	0f be       	out	0x3f, r0	; 63
    14e0:	cd bf       	out	0x3d, r28	; 61
    14e2:	8c 83       	std	Y+4, r24	; 0x04
    14e4:	6d 83       	std	Y+5, r22	; 0x05
    14e6:	4e 83       	std	Y+6, r20	; 0x06
	const char page = y / 8;
    14e8:	8d 81       	ldd	r24, Y+5	; 0x05
    14ea:	86 95       	lsr	r24
    14ec:	86 95       	lsr	r24
    14ee:	86 95       	lsr	r24
    14f0:	8b 83       	std	Y+3, r24	; 0x03
	const char cache = (char)lcdCacheData[(int)x][(int)page];
    14f2:	8c 81       	ldd	r24, Y+4	; 0x04
    14f4:	48 2f       	mov	r20, r24
    14f6:	50 e0       	ldi	r21, 0x00	; 0
    14f8:	8b 81       	ldd	r24, Y+3	; 0x03
    14fa:	28 2f       	mov	r18, r24
    14fc:	30 e0       	ldi	r19, 0x00	; 0
    14fe:	ca 01       	movw	r24, r20
    1500:	88 0f       	add	r24, r24
    1502:	99 1f       	adc	r25, r25
    1504:	88 0f       	add	r24, r24
    1506:	99 1f       	adc	r25, r25
    1508:	88 0f       	add	r24, r24
    150a:	99 1f       	adc	r25, r25
    150c:	82 0f       	add	r24, r18
    150e:	93 1f       	adc	r25, r19
    1510:	88 0f       	add	r24, r24
    1512:	99 1f       	adc	r25, r25
    1514:	fc 01       	movw	r30, r24
    1516:	e6 5b       	subi	r30, 0xB6	; 182
    1518:	fd 4f       	sbci	r31, 0xFD	; 253
    151a:	80 81       	ld	r24, Z
    151c:	91 81       	ldd	r25, Z+1	; 0x01
    151e:	8a 83       	std	Y+2, r24	; 0x02

	char output = on ? (1 << (y % 8)) | cache : ~(1 << (y % 8)) & cache;
    1520:	8e 81       	ldd	r24, Y+6	; 0x06
    1522:	88 23       	and	r24, r24
    1524:	99 f0       	breq	.+38     	; 0x154c <lcd_pixel+0x7e>
    1526:	8d 81       	ldd	r24, Y+5	; 0x05
    1528:	88 2f       	mov	r24, r24
    152a:	90 e0       	ldi	r25, 0x00	; 0
    152c:	9c 01       	movw	r18, r24
    152e:	27 70       	andi	r18, 0x07	; 7
    1530:	30 70       	andi	r19, 0x00	; 0
    1532:	81 e0       	ldi	r24, 0x01	; 1
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	02 2e       	mov	r0, r18
    1538:	02 c0       	rjmp	.+4      	; 0x153e <lcd_pixel+0x70>
    153a:	88 0f       	add	r24, r24
    153c:	99 1f       	adc	r25, r25
    153e:	0a 94       	dec	r0
    1540:	e2 f7       	brpl	.-8      	; 0x153a <lcd_pixel+0x6c>
    1542:	98 2f       	mov	r25, r24
    1544:	8a 81       	ldd	r24, Y+2	; 0x02
    1546:	89 2b       	or	r24, r25
    1548:	8f 83       	std	Y+7, r24	; 0x07
    154a:	12 c0       	rjmp	.+36     	; 0x1570 <lcd_pixel+0xa2>
    154c:	8d 81       	ldd	r24, Y+5	; 0x05
    154e:	88 2f       	mov	r24, r24
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	9c 01       	movw	r18, r24
    1554:	27 70       	andi	r18, 0x07	; 7
    1556:	30 70       	andi	r19, 0x00	; 0
    1558:	81 e0       	ldi	r24, 0x01	; 1
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	02 c0       	rjmp	.+4      	; 0x1562 <lcd_pixel+0x94>
    155e:	88 0f       	add	r24, r24
    1560:	99 1f       	adc	r25, r25
    1562:	2a 95       	dec	r18
    1564:	e2 f7       	brpl	.-8      	; 0x155e <lcd_pixel+0x90>
    1566:	98 2f       	mov	r25, r24
    1568:	90 95       	com	r25
    156a:	8a 81       	ldd	r24, Y+2	; 0x02
    156c:	89 23       	and	r24, r25
    156e:	8f 83       	std	Y+7, r24	; 0x07
    1570:	8f 81       	ldd	r24, Y+7	; 0x07
    1572:	89 83       	std	Y+1, r24	; 0x01

	//if (on)	output =  (1 << (y % 8)) | cache;
	//else	output = ~(1 << (y % 8)) & cache;

	lcd_goto_xy_exact(x, page);
    1574:	8c 81       	ldd	r24, Y+4	; 0x04
    1576:	6b 81       	ldd	r22, Y+3	; 0x03
    1578:	0e 94 06 0a 	call	0x140c	; 0x140c <lcd_goto_xy_exact>
	lcd_send(output, LCD_DATA);
    157c:	89 81       	ldd	r24, Y+1	; 0x01
    157e:	61 e0       	ldi	r22, 0x01	; 1
    1580:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
	lcdCacheData[(int)x][(int)page] = (int)output;
    1584:	8c 81       	ldd	r24, Y+4	; 0x04
    1586:	48 2f       	mov	r20, r24
    1588:	50 e0       	ldi	r21, 0x00	; 0
    158a:	8b 81       	ldd	r24, Y+3	; 0x03
    158c:	28 2f       	mov	r18, r24
    158e:	30 e0       	ldi	r19, 0x00	; 0
    1590:	89 81       	ldd	r24, Y+1	; 0x01
    1592:	68 2f       	mov	r22, r24
    1594:	70 e0       	ldi	r23, 0x00	; 0
    1596:	ca 01       	movw	r24, r20
    1598:	88 0f       	add	r24, r24
    159a:	99 1f       	adc	r25, r25
    159c:	88 0f       	add	r24, r24
    159e:	99 1f       	adc	r25, r25
    15a0:	88 0f       	add	r24, r24
    15a2:	99 1f       	adc	r25, r25
    15a4:	82 0f       	add	r24, r18
    15a6:	93 1f       	adc	r25, r19
    15a8:	88 0f       	add	r24, r24
    15aa:	99 1f       	adc	r25, r25
    15ac:	fc 01       	movw	r30, r24
    15ae:	e6 5b       	subi	r30, 0xB6	; 182
    15b0:	fd 4f       	sbci	r31, 0xFD	; 253
    15b2:	71 83       	std	Z+1, r23	; 0x01
    15b4:	60 83       	st	Z, r22
}
    15b6:	27 96       	adiw	r28, 0x07	; 7
    15b8:	0f b6       	in	r0, 0x3f	; 63
    15ba:	f8 94       	cli
    15bc:	de bf       	out	0x3e, r29	; 62
    15be:	0f be       	out	0x3f, r0	; 63
    15c0:	cd bf       	out	0x3d, r28	; 61
    15c2:	cf 91       	pop	r28
    15c4:	df 91       	pop	r29
    15c6:	08 95       	ret

000015c8 <lcd_str>:
/***********************************************

Displays string at current cursor location and increment cursor location 
***********************************************/
void lcd_str(char* str)
{
    15c8:	df 93       	push	r29
    15ca:	cf 93       	push	r28
    15cc:	00 d0       	rcall	.+0      	; 0x15ce <lcd_str+0x6>
    15ce:	cd b7       	in	r28, 0x3d	; 61
    15d0:	de b7       	in	r29, 0x3e	; 62
    15d2:	9a 83       	std	Y+2, r25	; 0x02
    15d4:	89 83       	std	Y+1, r24	; 0x01
    15d6:	0b c0       	rjmp	.+22     	; 0x15ee <lcd_str+0x26>
	while(*str) lcd_chr(*str++);
    15d8:	e9 81       	ldd	r30, Y+1	; 0x01
    15da:	fa 81       	ldd	r31, Y+2	; 0x02
    15dc:	20 81       	ld	r18, Z
    15de:	89 81       	ldd	r24, Y+1	; 0x01
    15e0:	9a 81       	ldd	r25, Y+2	; 0x02
    15e2:	01 96       	adiw	r24, 0x01	; 1
    15e4:	9a 83       	std	Y+2, r25	; 0x02
    15e6:	89 83       	std	Y+1, r24	; 0x01
    15e8:	82 2f       	mov	r24, r18
    15ea:	0e 94 22 0a 	call	0x1444	; 0x1444 <lcd_chr>
    15ee:	e9 81       	ldd	r30, Y+1	; 0x01
    15f0:	fa 81       	ldd	r31, Y+2	; 0x02
    15f2:	80 81       	ld	r24, Z
    15f4:	88 23       	and	r24, r24
    15f6:	81 f7       	brne	.-32     	; 0x15d8 <lcd_str+0x10>
}
    15f8:	0f 90       	pop	r0
    15fa:	0f 90       	pop	r0
    15fc:	cf 91       	pop	r28
    15fe:	df 91       	pop	r29
    1600:	08 95       	ret

00001602 <lcd_base_addr>:

// Set the base address of the lcd
void lcd_base_addr(void)
{
    1602:	df 93       	push	r29
    1604:	cf 93       	push	r28
    1606:	cd b7       	in	r28, 0x3d	; 61
    1608:	de b7       	in	r29, 0x3e	; 62
	lcd_send(0xB0 | lcdCacheIdy, LCD_CMD);	// page
    160a:	80 91 48 02 	lds	r24, 0x0248
    160e:	90 91 49 02 	lds	r25, 0x0249
    1612:	80 6b       	ori	r24, 0xB0	; 176
    1614:	60 e0       	ldi	r22, 0x00	; 0
    1616:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
	lcd_send(0x00 | (lcdCacheIdx & 0x0F), LCD_CMD);
    161a:	80 91 4a 0a 	lds	r24, 0x0A4A
    161e:	90 91 4b 0a 	lds	r25, 0x0A4B
    1622:	8f 70       	andi	r24, 0x0F	; 15
    1624:	60 e0       	ldi	r22, 0x00	; 0
    1626:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>
	lcd_send(0x10 | ((lcdCacheIdx & 0xF0)>>4), LCD_CMD);	// column
    162a:	80 91 4a 0a 	lds	r24, 0x0A4A
    162e:	90 91 4b 0a 	lds	r25, 0x0A4B
    1632:	80 7f       	andi	r24, 0xF0	; 240
    1634:	90 70       	andi	r25, 0x00	; 0
    1636:	95 95       	asr	r25
    1638:	87 95       	ror	r24
    163a:	95 95       	asr	r25
    163c:	87 95       	ror	r24
    163e:	95 95       	asr	r25
    1640:	87 95       	ror	r24
    1642:	95 95       	asr	r25
    1644:	87 95       	ror	r24
    1646:	80 61       	ori	r24, 0x10	; 16
    1648:	60 e0       	ldi	r22, 0x00	; 0
    164a:	0e 94 2a 0b 	call	0x1654	; 0x1654 <lcd_send>

}
    164e:	cf 91       	pop	r28
    1650:	df 91       	pop	r29
    1652:	08 95       	ret

00001654 <lcd_send>:
/************************************************ 
Sends data to display controller 
cd data / controll
*************************************************/
void lcd_send(unsigned char data, LcdCmdData cd)
{
    1654:	df 93       	push	r29
    1656:	cf 93       	push	r28
    1658:	00 d0       	rcall	.+0      	; 0x165a <lcd_send+0x6>
    165a:	00 d0       	rcall	.+0      	; 0x165c <lcd_send+0x8>
    165c:	cd b7       	in	r28, 0x3d	; 61
    165e:	de b7       	in	r29, 0x3e	; 62
    1660:	8b 83       	std	Y+3, r24	; 0x03
    1662:	6c 83       	std	Y+4, r22	; 0x04
	// Data/DC are outputs for the lcd (all low)
	LCD_DDR |= LCD_DATA_PIN | LCD_DC_PIN;
    1664:	a4 e3       	ldi	r26, 0x34	; 52
    1666:	b0 e0       	ldi	r27, 0x00	; 0
    1668:	e4 e3       	ldi	r30, 0x34	; 52
    166a:	f0 e0       	ldi	r31, 0x00	; 0
    166c:	80 81       	ld	r24, Z
    166e:	8c 60       	ori	r24, 0x0C	; 12
    1670:	8c 93       	st	X, r24

	// Enable display controller (active low)
	LCD_PORT &= ~LCD_CE_PIN;
    1672:	a5 e3       	ldi	r26, 0x35	; 53
    1674:	b0 e0       	ldi	r27, 0x00	; 0
    1676:	e5 e3       	ldi	r30, 0x35	; 53
    1678:	f0 e0       	ldi	r31, 0x00	; 0
    167a:	80 81       	ld	r24, Z
    167c:	8d 7f       	andi	r24, 0xFD	; 253
    167e:	8c 93       	st	X, r24

	// Either command or data
	if(cd == LCD_DATA) {
    1680:	8c 81       	ldd	r24, Y+4	; 0x04
    1682:	81 30       	cpi	r24, 0x01	; 1
    1684:	41 f4       	brne	.+16     	; 0x1696 <lcd_send+0x42>
		LCD_PORT |= LCD_DC_PIN;
    1686:	a5 e3       	ldi	r26, 0x35	; 53
    1688:	b0 e0       	ldi	r27, 0x00	; 0
    168a:	e5 e3       	ldi	r30, 0x35	; 53
    168c:	f0 e0       	ldi	r31, 0x00	; 0
    168e:	80 81       	ld	r24, Z
    1690:	84 60       	ori	r24, 0x04	; 4
    1692:	8c 93       	st	X, r24
    1694:	07 c0       	rjmp	.+14     	; 0x16a4 <lcd_send+0x50>
	} else {
		LCD_PORT &= ~LCD_DC_PIN;
    1696:	a5 e3       	ldi	r26, 0x35	; 53
    1698:	b0 e0       	ldi	r27, 0x00	; 0
    169a:	e5 e3       	ldi	r30, 0x35	; 53
    169c:	f0 e0       	ldi	r31, 0x00	; 0
    169e:	80 81       	ld	r24, Z
    16a0:	8b 7f       	andi	r24, 0xFB	; 251
    16a2:	8c 93       	st	X, r24
	}

	char j;
	for(unsigned char i=0;i<8;i++) {
    16a4:	19 82       	std	Y+1, r1	; 0x01
    16a6:	3d c0       	rjmp	.+122    	; 0x1722 <lcd_send+0xce>

		// Set the DATA pin value
		if((data >> (7 - i)) & 0x01) {
    16a8:	8b 81       	ldd	r24, Y+3	; 0x03
    16aa:	48 2f       	mov	r20, r24
    16ac:	50 e0       	ldi	r21, 0x00	; 0
    16ae:	89 81       	ldd	r24, Y+1	; 0x01
    16b0:	28 2f       	mov	r18, r24
    16b2:	30 e0       	ldi	r19, 0x00	; 0
    16b4:	87 e0       	ldi	r24, 0x07	; 7
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	82 1b       	sub	r24, r18
    16ba:	93 0b       	sbc	r25, r19
    16bc:	9a 01       	movw	r18, r20
    16be:	02 c0       	rjmp	.+4      	; 0x16c4 <lcd_send+0x70>
    16c0:	35 95       	asr	r19
    16c2:	27 95       	ror	r18
    16c4:	8a 95       	dec	r24
    16c6:	e2 f7       	brpl	.-8      	; 0x16c0 <lcd_send+0x6c>
    16c8:	c9 01       	movw	r24, r18
    16ca:	81 70       	andi	r24, 0x01	; 1
    16cc:	90 70       	andi	r25, 0x00	; 0
    16ce:	88 23       	and	r24, r24
    16d0:	41 f0       	breq	.+16     	; 0x16e2 <lcd_send+0x8e>
			LCD_PORT |= LCD_DATA_PIN;
    16d2:	a5 e3       	ldi	r26, 0x35	; 53
    16d4:	b0 e0       	ldi	r27, 0x00	; 0
    16d6:	e5 e3       	ldi	r30, 0x35	; 53
    16d8:	f0 e0       	ldi	r31, 0x00	; 0
    16da:	80 81       	ld	r24, Z
    16dc:	88 60       	ori	r24, 0x08	; 8
    16de:	8c 93       	st	X, r24
    16e0:	07 c0       	rjmp	.+14     	; 0x16f0 <lcd_send+0x9c>
		} else {
			LCD_PORT &= ~LCD_DATA_PIN;
    16e2:	a5 e3       	ldi	r26, 0x35	; 53
    16e4:	b0 e0       	ldi	r27, 0x00	; 0
    16e6:	e5 e3       	ldi	r30, 0x35	; 53
    16e8:	f0 e0       	ldi	r31, 0x00	; 0
    16ea:	80 81       	ld	r24, Z
    16ec:	87 7f       	andi	r24, 0xF7	; 247
    16ee:	8c 93       	st	X, r24
		}

		// Toggle the clock
		LCD_PORT |= LCD_CLK_PIN;
    16f0:	a5 e3       	ldi	r26, 0x35	; 53
    16f2:	b0 e0       	ldi	r27, 0x00	; 0
    16f4:	e5 e3       	ldi	r30, 0x35	; 53
    16f6:	f0 e0       	ldi	r31, 0x00	; 0
    16f8:	80 81       	ld	r24, Z
    16fa:	80 61       	ori	r24, 0x10	; 16
    16fc:	8c 93       	st	X, r24
		for(j=0;j<4;j++); // lis‰tty pient‰ viivett‰
    16fe:	1a 82       	std	Y+2, r1	; 0x02
    1700:	03 c0       	rjmp	.+6      	; 0x1708 <lcd_send+0xb4>
    1702:	8a 81       	ldd	r24, Y+2	; 0x02
    1704:	8f 5f       	subi	r24, 0xFF	; 255
    1706:	8a 83       	std	Y+2, r24	; 0x02
    1708:	8a 81       	ldd	r24, Y+2	; 0x02
    170a:	84 30       	cpi	r24, 0x04	; 4
    170c:	d0 f3       	brcs	.-12     	; 0x1702 <lcd_send+0xae>
		LCD_PORT &= ~LCD_CLK_PIN;
    170e:	a5 e3       	ldi	r26, 0x35	; 53
    1710:	b0 e0       	ldi	r27, 0x00	; 0
    1712:	e5 e3       	ldi	r30, 0x35	; 53
    1714:	f0 e0       	ldi	r31, 0x00	; 0
    1716:	80 81       	ld	r24, Z
    1718:	8f 7e       	andi	r24, 0xEF	; 239
    171a:	8c 93       	st	X, r24
	} else {
		LCD_PORT &= ~LCD_DC_PIN;
	}

	char j;
	for(unsigned char i=0;i<8;i++) {
    171c:	89 81       	ldd	r24, Y+1	; 0x01
    171e:	8f 5f       	subi	r24, 0xFF	; 255
    1720:	89 83       	std	Y+1, r24	; 0x01
    1722:	89 81       	ldd	r24, Y+1	; 0x01
    1724:	88 30       	cpi	r24, 0x08	; 8
    1726:	08 f4       	brcc	.+2      	; 0x172a <lcd_send+0xd6>
    1728:	bf cf       	rjmp	.-130    	; 0x16a8 <lcd_send+0x54>
		LCD_PORT &= ~LCD_CLK_PIN;
	}

	// Disable display controller
	//LCD_PORT &= ~LCD_DC_PIN;
	LCD_PORT |= LCD_CE_PIN;
    172a:	a5 e3       	ldi	r26, 0x35	; 53
    172c:	b0 e0       	ldi	r27, 0x00	; 0
    172e:	e5 e3       	ldi	r30, 0x35	; 53
    1730:	f0 e0       	ldi	r31, 0x00	; 0
    1732:	80 81       	ld	r24, Z
    1734:	82 60       	ori	r24, 0x02	; 2
    1736:	8c 93       	st	X, r24

	// Data/DC can be used as button inputs when not sending to LCD (/w pullups)
	LCD_DDR &= ~(LCD_DATA_PIN | LCD_DC_PIN);
    1738:	a4 e3       	ldi	r26, 0x34	; 52
    173a:	b0 e0       	ldi	r27, 0x00	; 0
    173c:	e4 e3       	ldi	r30, 0x34	; 52
    173e:	f0 e0       	ldi	r31, 0x00	; 0
    1740:	80 81       	ld	r24, Z
    1742:	83 7f       	andi	r24, 0xF3	; 243
    1744:	8c 93       	st	X, r24
	LCD_PORT |= LCD_DATA_PIN | LCD_DC_PIN;
    1746:	a5 e3       	ldi	r26, 0x35	; 53
    1748:	b0 e0       	ldi	r27, 0x00	; 0
    174a:	e5 e3       	ldi	r30, 0x35	; 53
    174c:	f0 e0       	ldi	r31, 0x00	; 0
    174e:	80 81       	ld	r24, Z
    1750:	8c 60       	ori	r24, 0x0C	; 12
    1752:	8c 93       	st	X, r24
}
    1754:	0f 90       	pop	r0
    1756:	0f 90       	pop	r0
    1758:	0f 90       	pop	r0
    175a:	0f 90       	pop	r0
    175c:	cf 91       	pop	r28
    175e:	df 91       	pop	r29
    1760:	08 95       	ret

00001762 <Graphics_init>:
#include "graphics.h"
#include "lcd.h"

void Graphics_init()
{
    1762:	df 93       	push	r29
    1764:	cf 93       	push	r28
    1766:	00 d0       	rcall	.+0      	; 0x1768 <Graphics_init+0x6>
    1768:	cd b7       	in	r28, 0x3d	; 61
    176a:	de b7       	in	r29, 0x3e	; 62
	lcd_init();						//N‰ytˆn alustus
    176c:	0e 94 c7 07 	call	0xf8e	; 0xf8e <lcd_init>

	lcd_clear();
    1770:	0e 94 84 09 	call	0x1308	; 0x1308 <lcd_clear>

	for (char y = 0; y < HEIGHT/GROUPSIZE; ++y)
    1774:	1a 82       	std	Y+2, r1	; 0x02
    1776:	3b c0       	rjmp	.+118    	; 0x17ee <Graphics_init+0x8c>
	{
		for (char x = 0; x < WIDTH; ++x)
    1778:	19 82       	std	Y+1, r1	; 0x01
    177a:	33 c0       	rjmp	.+102    	; 0x17e2 <Graphics_init+0x80>
		{
			m_display[y][x][0] = 0;
    177c:	8a 81       	ldd	r24, Y+2	; 0x02
    177e:	48 2f       	mov	r20, r24
    1780:	50 e0       	ldi	r21, 0x00	; 0
    1782:	89 81       	ldd	r24, Y+1	; 0x01
    1784:	28 2f       	mov	r18, r24
    1786:	30 e0       	ldi	r19, 0x00	; 0
    1788:	ca 01       	movw	r24, r20
    178a:	00 24       	eor	r0, r0
    178c:	96 95       	lsr	r25
    178e:	87 95       	ror	r24
    1790:	07 94       	ror	r0
    1792:	96 95       	lsr	r25
    1794:	87 95       	ror	r24
    1796:	07 94       	ror	r0
    1798:	98 2f       	mov	r25, r24
    179a:	80 2d       	mov	r24, r0
    179c:	82 0f       	add	r24, r18
    179e:	93 1f       	adc	r25, r19
    17a0:	88 0f       	add	r24, r24
    17a2:	99 1f       	adc	r25, r25
    17a4:	fc 01       	movw	r30, r24
    17a6:	e4 5b       	subi	r30, 0xB4	; 180
    17a8:	f5 4f       	sbci	r31, 0xF5	; 245
    17aa:	10 82       	st	Z, r1
			m_display[y][x][1] = 0;
    17ac:	8a 81       	ldd	r24, Y+2	; 0x02
    17ae:	48 2f       	mov	r20, r24
    17b0:	50 e0       	ldi	r21, 0x00	; 0
    17b2:	89 81       	ldd	r24, Y+1	; 0x01
    17b4:	28 2f       	mov	r18, r24
    17b6:	30 e0       	ldi	r19, 0x00	; 0
    17b8:	ca 01       	movw	r24, r20
    17ba:	00 24       	eor	r0, r0
    17bc:	96 95       	lsr	r25
    17be:	87 95       	ror	r24
    17c0:	07 94       	ror	r0
    17c2:	96 95       	lsr	r25
    17c4:	87 95       	ror	r24
    17c6:	07 94       	ror	r0
    17c8:	98 2f       	mov	r25, r24
    17ca:	80 2d       	mov	r24, r0
    17cc:	82 0f       	add	r24, r18
    17ce:	93 1f       	adc	r25, r19
    17d0:	88 0f       	add	r24, r24
    17d2:	99 1f       	adc	r25, r25
    17d4:	fc 01       	movw	r30, r24
    17d6:	e3 5b       	subi	r30, 0xB3	; 179
    17d8:	f5 4f       	sbci	r31, 0xF5	; 245
    17da:	10 82       	st	Z, r1

	lcd_clear();

	for (char y = 0; y < HEIGHT/GROUPSIZE; ++y)
	{
		for (char x = 0; x < WIDTH; ++x)
    17dc:	89 81       	ldd	r24, Y+1	; 0x01
    17de:	8f 5f       	subi	r24, 0xFF	; 255
    17e0:	89 83       	std	Y+1, r24	; 0x01
    17e2:	89 81       	ldd	r24, Y+1	; 0x01
    17e4:	80 34       	cpi	r24, 0x40	; 64
    17e6:	50 f2       	brcs	.-108    	; 0x177c <Graphics_init+0x1a>
{
	lcd_init();						//N‰ytˆn alustus

	lcd_clear();

	for (char y = 0; y < HEIGHT/GROUPSIZE; ++y)
    17e8:	8a 81       	ldd	r24, Y+2	; 0x02
    17ea:	8f 5f       	subi	r24, 0xFF	; 255
    17ec:	8a 83       	std	Y+2, r24	; 0x02
    17ee:	8a 81       	ldd	r24, Y+2	; 0x02
    17f0:	80 31       	cpi	r24, 0x10	; 16
    17f2:	10 f2       	brcs	.-124    	; 0x1778 <Graphics_init+0x16>
		{
			m_display[y][x][0] = 0;
			m_display[y][x][1] = 0;
		}
	}
}
    17f4:	0f 90       	pop	r0
    17f6:	0f 90       	pop	r0
    17f8:	cf 91       	pop	r28
    17fa:	df 91       	pop	r29
    17fc:	08 95       	ret

000017fe <Graphics_draw>:

void Graphics_draw()
{
    17fe:	df 93       	push	r29
    1800:	cf 93       	push	r28
    1802:	cd b7       	in	r28, 0x3d	; 61
    1804:	de b7       	in	r29, 0x3e	; 62
    1806:	29 97       	sbiw	r28, 0x09	; 9
    1808:	0f b6       	in	r0, 0x3f	; 63
    180a:	f8 94       	cli
    180c:	de bf       	out	0x3e, r29	; 62
    180e:	0f be       	out	0x3f, r0	; 63
    1810:	cd bf       	out	0x3d, r28	; 61
	for (char x = 0; x < WIDTH/GROUPSIZE; ++x)
    1812:	19 86       	std	Y+9, r1	; 0x09
    1814:	d2 c0       	rjmp	.+420    	; 0x19ba <Graphics_draw+0x1bc>
	{
		for (char y = 0; y < HEIGHT; ++y)
    1816:	18 86       	std	Y+8, r1	; 0x08
    1818:	c9 c0       	rjmp	.+402    	; 0x19ac <Graphics_draw+0x1ae>
		{
			const unsigned int p0 = m_display[y][x][0];
    181a:	88 85       	ldd	r24, Y+8	; 0x08
    181c:	48 2f       	mov	r20, r24
    181e:	50 e0       	ldi	r21, 0x00	; 0
    1820:	89 85       	ldd	r24, Y+9	; 0x09
    1822:	28 2f       	mov	r18, r24
    1824:	30 e0       	ldi	r19, 0x00	; 0
    1826:	ca 01       	movw	r24, r20
    1828:	00 24       	eor	r0, r0
    182a:	96 95       	lsr	r25
    182c:	87 95       	ror	r24
    182e:	07 94       	ror	r0
    1830:	96 95       	lsr	r25
    1832:	87 95       	ror	r24
    1834:	07 94       	ror	r0
    1836:	98 2f       	mov	r25, r24
    1838:	80 2d       	mov	r24, r0
    183a:	82 0f       	add	r24, r18
    183c:	93 1f       	adc	r25, r19
    183e:	88 0f       	add	r24, r24
    1840:	99 1f       	adc	r25, r25
    1842:	fc 01       	movw	r30, r24
    1844:	e4 5b       	subi	r30, 0xB4	; 180
    1846:	f5 4f       	sbci	r31, 0xF5	; 245
    1848:	80 81       	ld	r24, Z
    184a:	88 2f       	mov	r24, r24
    184c:	90 e0       	ldi	r25, 0x00	; 0
    184e:	9f 83       	std	Y+7, r25	; 0x07
    1850:	8e 83       	std	Y+6, r24	; 0x06
			const unsigned int p1 = m_display[y][x][1];
    1852:	88 85       	ldd	r24, Y+8	; 0x08
    1854:	48 2f       	mov	r20, r24
    1856:	50 e0       	ldi	r21, 0x00	; 0
    1858:	89 85       	ldd	r24, Y+9	; 0x09
    185a:	28 2f       	mov	r18, r24
    185c:	30 e0       	ldi	r19, 0x00	; 0
    185e:	ca 01       	movw	r24, r20
    1860:	00 24       	eor	r0, r0
    1862:	96 95       	lsr	r25
    1864:	87 95       	ror	r24
    1866:	07 94       	ror	r0
    1868:	96 95       	lsr	r25
    186a:	87 95       	ror	r24
    186c:	07 94       	ror	r0
    186e:	98 2f       	mov	r25, r24
    1870:	80 2d       	mov	r24, r0
    1872:	82 0f       	add	r24, r18
    1874:	93 1f       	adc	r25, r19
    1876:	88 0f       	add	r24, r24
    1878:	99 1f       	adc	r25, r25
    187a:	fc 01       	movw	r30, r24
    187c:	e3 5b       	subi	r30, 0xB3	; 179
    187e:	f5 4f       	sbci	r31, 0xF5	; 245
    1880:	80 81       	ld	r24, Z
    1882:	88 2f       	mov	r24, r24
    1884:	90 e0       	ldi	r25, 0x00	; 0
    1886:	9d 83       	std	Y+5, r25	; 0x05
    1888:	8c 83       	std	Y+4, r24	; 0x04
			const unsigned int p2 = p0^p1;
    188a:	2e 81       	ldd	r18, Y+6	; 0x06
    188c:	3f 81       	ldd	r19, Y+7	; 0x07
    188e:	8c 81       	ldd	r24, Y+4	; 0x04
    1890:	9d 81       	ldd	r25, Y+5	; 0x05
    1892:	82 27       	eor	r24, r18
    1894:	93 27       	eor	r25, r19
    1896:	9b 83       	std	Y+3, r25	; 0x03
    1898:	8a 83       	std	Y+2, r24	; 0x02
			if (p2)
    189a:	8a 81       	ldd	r24, Y+2	; 0x02
    189c:	9b 81       	ldd	r25, Y+3	; 0x03
    189e:	00 97       	sbiw	r24, 0x00	; 0
    18a0:	09 f4       	brne	.+2      	; 0x18a4 <Graphics_draw+0xa6>
    18a2:	81 c0       	rjmp	.+258    	; 0x19a6 <Graphics_draw+0x1a8>
			{


				for (char p = 0; p < GROUPSIZE; ++p)
    18a4:	19 82       	std	Y+1, r1	; 0x01
    18a6:	4b c0       	rjmp	.+150    	; 0x193e <Graphics_draw+0x140>
				{
					if ((1<<p) & p2)
    18a8:	89 81       	ldd	r24, Y+1	; 0x01
    18aa:	28 2f       	mov	r18, r24
    18ac:	30 e0       	ldi	r19, 0x00	; 0
    18ae:	81 e0       	ldi	r24, 0x01	; 1
    18b0:	90 e0       	ldi	r25, 0x00	; 0
    18b2:	02 c0       	rjmp	.+4      	; 0x18b8 <Graphics_draw+0xba>
    18b4:	88 0f       	add	r24, r24
    18b6:	99 1f       	adc	r25, r25
    18b8:	2a 95       	dec	r18
    18ba:	e2 f7       	brpl	.-8      	; 0x18b4 <Graphics_draw+0xb6>
    18bc:	9c 01       	movw	r18, r24
    18be:	8a 81       	ldd	r24, Y+2	; 0x02
    18c0:	9b 81       	ldd	r25, Y+3	; 0x03
    18c2:	82 23       	and	r24, r18
    18c4:	93 23       	and	r25, r19
    18c6:	00 97       	sbiw	r24, 0x00	; 0
    18c8:	b9 f1       	breq	.+110    	; 0x1938 <Graphics_draw+0x13a>
					{
						lcd_pixel(
    18ca:	89 85       	ldd	r24, Y+9	; 0x09
    18cc:	88 2f       	mov	r24, r24
    18ce:	90 e0       	ldi	r25, 0x00	; 0
    18d0:	88 0f       	add	r24, r24
    18d2:	99 1f       	adc	r25, r25
    18d4:	88 0f       	add	r24, r24
    18d6:	99 1f       	adc	r25, r25
    18d8:	88 0f       	add	r24, r24
    18da:	99 1f       	adc	r25, r25
    18dc:	98 2f       	mov	r25, r24
    18de:	89 81       	ldd	r24, Y+1	; 0x01
    18e0:	69 2f       	mov	r22, r25
    18e2:	68 0f       	add	r22, r24
    18e4:	88 85       	ldd	r24, Y+8	; 0x08
    18e6:	48 2f       	mov	r20, r24
    18e8:	50 e0       	ldi	r21, 0x00	; 0
    18ea:	89 85       	ldd	r24, Y+9	; 0x09
    18ec:	28 2f       	mov	r18, r24
    18ee:	30 e0       	ldi	r19, 0x00	; 0
    18f0:	ca 01       	movw	r24, r20
    18f2:	00 24       	eor	r0, r0
    18f4:	96 95       	lsr	r25
    18f6:	87 95       	ror	r24
    18f8:	07 94       	ror	r0
    18fa:	96 95       	lsr	r25
    18fc:	87 95       	ror	r24
    18fe:	07 94       	ror	r0
    1900:	98 2f       	mov	r25, r24
    1902:	80 2d       	mov	r24, r0
    1904:	82 0f       	add	r24, r18
    1906:	93 1f       	adc	r25, r19
    1908:	88 0f       	add	r24, r24
    190a:	99 1f       	adc	r25, r25
    190c:	fc 01       	movw	r30, r24
    190e:	e3 5b       	subi	r30, 0xB3	; 179
    1910:	f5 4f       	sbci	r31, 0xF5	; 245
    1912:	80 81       	ld	r24, Z
    1914:	48 2f       	mov	r20, r24
    1916:	89 81       	ldd	r24, Y+1	; 0x01
    1918:	28 2f       	mov	r18, r24
    191a:	30 e0       	ldi	r19, 0x00	; 0
    191c:	81 e0       	ldi	r24, 0x01	; 1
    191e:	90 e0       	ldi	r25, 0x00	; 0
    1920:	02 c0       	rjmp	.+4      	; 0x1926 <Graphics_draw+0x128>
    1922:	88 0f       	add	r24, r24
    1924:	99 1f       	adc	r25, r25
    1926:	2a 95       	dec	r18
    1928:	e2 f7       	brpl	.-8      	; 0x1922 <Graphics_draw+0x124>
    192a:	84 23       	and	r24, r20
    192c:	98 2f       	mov	r25, r24
    192e:	86 2f       	mov	r24, r22
    1930:	68 85       	ldd	r22, Y+8	; 0x08
    1932:	49 2f       	mov	r20, r25
    1934:	0e 94 67 0a 	call	0x14ce	; 0x14ce <lcd_pixel>
			const unsigned int p2 = p0^p1;
			if (p2)
			{


				for (char p = 0; p < GROUPSIZE; ++p)
    1938:	89 81       	ldd	r24, Y+1	; 0x01
    193a:	8f 5f       	subi	r24, 0xFF	; 255
    193c:	89 83       	std	Y+1, r24	; 0x01
    193e:	89 81       	ldd	r24, Y+1	; 0x01
    1940:	88 30       	cpi	r24, 0x08	; 8
    1942:	08 f4       	brcc	.+2      	; 0x1946 <Graphics_draw+0x148>
    1944:	b1 cf       	rjmp	.-158    	; 0x18a8 <Graphics_draw+0xaa>
							y,
							m_display[y][x][1] & (1<<p));
					}
				}

				m_display[y][x][0] = m_display[y][x][1];
    1946:	88 85       	ldd	r24, Y+8	; 0x08
    1948:	68 2f       	mov	r22, r24
    194a:	70 e0       	ldi	r23, 0x00	; 0
    194c:	89 85       	ldd	r24, Y+9	; 0x09
    194e:	a8 2f       	mov	r26, r24
    1950:	b0 e0       	ldi	r27, 0x00	; 0
    1952:	88 85       	ldd	r24, Y+8	; 0x08
    1954:	48 2f       	mov	r20, r24
    1956:	50 e0       	ldi	r21, 0x00	; 0
    1958:	89 85       	ldd	r24, Y+9	; 0x09
    195a:	28 2f       	mov	r18, r24
    195c:	30 e0       	ldi	r19, 0x00	; 0
    195e:	ca 01       	movw	r24, r20
    1960:	00 24       	eor	r0, r0
    1962:	96 95       	lsr	r25
    1964:	87 95       	ror	r24
    1966:	07 94       	ror	r0
    1968:	96 95       	lsr	r25
    196a:	87 95       	ror	r24
    196c:	07 94       	ror	r0
    196e:	98 2f       	mov	r25, r24
    1970:	80 2d       	mov	r24, r0
    1972:	82 0f       	add	r24, r18
    1974:	93 1f       	adc	r25, r19
    1976:	88 0f       	add	r24, r24
    1978:	99 1f       	adc	r25, r25
    197a:	fc 01       	movw	r30, r24
    197c:	e3 5b       	subi	r30, 0xB3	; 179
    197e:	f5 4f       	sbci	r31, 0xF5	; 245
    1980:	20 81       	ld	r18, Z
    1982:	cb 01       	movw	r24, r22
    1984:	00 24       	eor	r0, r0
    1986:	96 95       	lsr	r25
    1988:	87 95       	ror	r24
    198a:	07 94       	ror	r0
    198c:	96 95       	lsr	r25
    198e:	87 95       	ror	r24
    1990:	07 94       	ror	r0
    1992:	98 2f       	mov	r25, r24
    1994:	80 2d       	mov	r24, r0
    1996:	8a 0f       	add	r24, r26
    1998:	9b 1f       	adc	r25, r27
    199a:	88 0f       	add	r24, r24
    199c:	99 1f       	adc	r25, r25
    199e:	fc 01       	movw	r30, r24
    19a0:	e4 5b       	subi	r30, 0xB4	; 180
    19a2:	f5 4f       	sbci	r31, 0xF5	; 245
    19a4:	20 83       	st	Z, r18

void Graphics_draw()
{
	for (char x = 0; x < WIDTH/GROUPSIZE; ++x)
	{
		for (char y = 0; y < HEIGHT; ++y)
    19a6:	88 85       	ldd	r24, Y+8	; 0x08
    19a8:	8f 5f       	subi	r24, 0xFF	; 255
    19aa:	88 87       	std	Y+8, r24	; 0x08
    19ac:	88 85       	ldd	r24, Y+8	; 0x08
    19ae:	88 23       	and	r24, r24
    19b0:	0c f0       	brlt	.+2      	; 0x19b4 <Graphics_draw+0x1b6>
    19b2:	33 cf       	rjmp	.-410    	; 0x181a <Graphics_draw+0x1c>
	}
}

void Graphics_draw()
{
	for (char x = 0; x < WIDTH/GROUPSIZE; ++x)
    19b4:	89 85       	ldd	r24, Y+9	; 0x09
    19b6:	8f 5f       	subi	r24, 0xFF	; 255
    19b8:	89 87       	std	Y+9, r24	; 0x09
    19ba:	89 85       	ldd	r24, Y+9	; 0x09
    19bc:	88 30       	cpi	r24, 0x08	; 8
    19be:	08 f4       	brcc	.+2      	; 0x19c2 <Graphics_draw+0x1c4>
    19c0:	2a cf       	rjmp	.-428    	; 0x1816 <Graphics_draw+0x18>

				m_display[y][x][0] = m_display[y][x][1];
			}
		}
	}
}
    19c2:	29 96       	adiw	r28, 0x09	; 9
    19c4:	0f b6       	in	r0, 0x3f	; 63
    19c6:	f8 94       	cli
    19c8:	de bf       	out	0x3e, r29	; 62
    19ca:	0f be       	out	0x3f, r0	; 63
    19cc:	cd bf       	out	0x3d, r28	; 61
    19ce:	cf 91       	pop	r28
    19d0:	df 91       	pop	r29
    19d2:	08 95       	ret

000019d4 <Graphics_pixel>:

void Graphics_pixel(char x, char y, char on)
{
    19d4:	df 93       	push	r29
    19d6:	cf 93       	push	r28
    19d8:	00 d0       	rcall	.+0      	; 0x19da <Graphics_pixel+0x6>
    19da:	0f 92       	push	r0
    19dc:	cd b7       	in	r28, 0x3d	; 61
    19de:	de b7       	in	r29, 0x3e	; 62
    19e0:	89 83       	std	Y+1, r24	; 0x01
    19e2:	6a 83       	std	Y+2, r22	; 0x02
    19e4:	4b 83       	std	Y+3, r20	; 0x03
	if (on)
    19e6:	8b 81       	ldd	r24, Y+3	; 0x03
    19e8:	88 23       	and	r24, r24
    19ea:	09 f4       	brne	.+2      	; 0x19ee <Graphics_pixel+0x1a>
    19ec:	44 c0       	rjmp	.+136    	; 0x1a76 <Graphics_pixel+0xa2>
		m_display[y / GROUPSIZE][x][1] |=   1 << y % GROUPSIZE; 
    19ee:	8a 81       	ldd	r24, Y+2	; 0x02
    19f0:	98 2f       	mov	r25, r24
    19f2:	96 95       	lsr	r25
    19f4:	96 95       	lsr	r25
    19f6:	96 95       	lsr	r25
    19f8:	69 2f       	mov	r22, r25
    19fa:	70 e0       	ldi	r23, 0x00	; 0
    19fc:	89 81       	ldd	r24, Y+1	; 0x01
    19fe:	a8 2f       	mov	r26, r24
    1a00:	b0 e0       	ldi	r27, 0x00	; 0
    1a02:	49 2f       	mov	r20, r25
    1a04:	50 e0       	ldi	r21, 0x00	; 0
    1a06:	89 81       	ldd	r24, Y+1	; 0x01
    1a08:	28 2f       	mov	r18, r24
    1a0a:	30 e0       	ldi	r19, 0x00	; 0
    1a0c:	ca 01       	movw	r24, r20
    1a0e:	00 24       	eor	r0, r0
    1a10:	96 95       	lsr	r25
    1a12:	87 95       	ror	r24
    1a14:	07 94       	ror	r0
    1a16:	96 95       	lsr	r25
    1a18:	87 95       	ror	r24
    1a1a:	07 94       	ror	r0
    1a1c:	98 2f       	mov	r25, r24
    1a1e:	80 2d       	mov	r24, r0
    1a20:	82 0f       	add	r24, r18
    1a22:	93 1f       	adc	r25, r19
    1a24:	88 0f       	add	r24, r24
    1a26:	99 1f       	adc	r25, r25
    1a28:	fc 01       	movw	r30, r24
    1a2a:	e3 5b       	subi	r30, 0xB3	; 179
    1a2c:	f5 4f       	sbci	r31, 0xF5	; 245
    1a2e:	80 81       	ld	r24, Z
    1a30:	48 2f       	mov	r20, r24
    1a32:	8a 81       	ldd	r24, Y+2	; 0x02
    1a34:	88 2f       	mov	r24, r24
    1a36:	90 e0       	ldi	r25, 0x00	; 0
    1a38:	9c 01       	movw	r18, r24
    1a3a:	27 70       	andi	r18, 0x07	; 7
    1a3c:	30 70       	andi	r19, 0x00	; 0
    1a3e:	81 e0       	ldi	r24, 0x01	; 1
    1a40:	90 e0       	ldi	r25, 0x00	; 0
    1a42:	02 c0       	rjmp	.+4      	; 0x1a48 <Graphics_pixel+0x74>
    1a44:	88 0f       	add	r24, r24
    1a46:	99 1f       	adc	r25, r25
    1a48:	2a 95       	dec	r18
    1a4a:	e2 f7       	brpl	.-8      	; 0x1a44 <Graphics_pixel+0x70>
    1a4c:	84 2b       	or	r24, r20
    1a4e:	28 2f       	mov	r18, r24
    1a50:	cb 01       	movw	r24, r22
    1a52:	00 24       	eor	r0, r0
    1a54:	96 95       	lsr	r25
    1a56:	87 95       	ror	r24
    1a58:	07 94       	ror	r0
    1a5a:	96 95       	lsr	r25
    1a5c:	87 95       	ror	r24
    1a5e:	07 94       	ror	r0
    1a60:	98 2f       	mov	r25, r24
    1a62:	80 2d       	mov	r24, r0
    1a64:	8a 0f       	add	r24, r26
    1a66:	9b 1f       	adc	r25, r27
    1a68:	88 0f       	add	r24, r24
    1a6a:	99 1f       	adc	r25, r25
    1a6c:	fc 01       	movw	r30, r24
    1a6e:	e3 5b       	subi	r30, 0xB3	; 179
    1a70:	f5 4f       	sbci	r31, 0xF5	; 245
    1a72:	20 83       	st	Z, r18
    1a74:	44 c0       	rjmp	.+136    	; 0x1afe <Graphics_pixel+0x12a>
	else
		m_display[y / GROUPSIZE][x][1] &= ~(1 << y % GROUPSIZE);
    1a76:	8a 81       	ldd	r24, Y+2	; 0x02
    1a78:	98 2f       	mov	r25, r24
    1a7a:	96 95       	lsr	r25
    1a7c:	96 95       	lsr	r25
    1a7e:	96 95       	lsr	r25
    1a80:	a9 2f       	mov	r26, r25
    1a82:	b0 e0       	ldi	r27, 0x00	; 0
    1a84:	89 81       	ldd	r24, Y+1	; 0x01
    1a86:	68 2f       	mov	r22, r24
    1a88:	70 e0       	ldi	r23, 0x00	; 0
    1a8a:	49 2f       	mov	r20, r25
    1a8c:	50 e0       	ldi	r21, 0x00	; 0
    1a8e:	89 81       	ldd	r24, Y+1	; 0x01
    1a90:	28 2f       	mov	r18, r24
    1a92:	30 e0       	ldi	r19, 0x00	; 0
    1a94:	ca 01       	movw	r24, r20
    1a96:	00 24       	eor	r0, r0
    1a98:	96 95       	lsr	r25
    1a9a:	87 95       	ror	r24
    1a9c:	07 94       	ror	r0
    1a9e:	96 95       	lsr	r25
    1aa0:	87 95       	ror	r24
    1aa2:	07 94       	ror	r0
    1aa4:	98 2f       	mov	r25, r24
    1aa6:	80 2d       	mov	r24, r0
    1aa8:	82 0f       	add	r24, r18
    1aaa:	93 1f       	adc	r25, r19
    1aac:	88 0f       	add	r24, r24
    1aae:	99 1f       	adc	r25, r25
    1ab0:	fc 01       	movw	r30, r24
    1ab2:	e3 5b       	subi	r30, 0xB3	; 179
    1ab4:	f5 4f       	sbci	r31, 0xF5	; 245
    1ab6:	80 81       	ld	r24, Z
    1ab8:	48 2f       	mov	r20, r24
    1aba:	8a 81       	ldd	r24, Y+2	; 0x02
    1abc:	88 2f       	mov	r24, r24
    1abe:	90 e0       	ldi	r25, 0x00	; 0
    1ac0:	9c 01       	movw	r18, r24
    1ac2:	27 70       	andi	r18, 0x07	; 7
    1ac4:	30 70       	andi	r19, 0x00	; 0
    1ac6:	81 e0       	ldi	r24, 0x01	; 1
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
    1aca:	02 c0       	rjmp	.+4      	; 0x1ad0 <Graphics_pixel+0xfc>
    1acc:	88 0f       	add	r24, r24
    1ace:	99 1f       	adc	r25, r25
    1ad0:	2a 95       	dec	r18
    1ad2:	e2 f7       	brpl	.-8      	; 0x1acc <Graphics_pixel+0xf8>
    1ad4:	80 95       	com	r24
    1ad6:	84 23       	and	r24, r20
    1ad8:	28 2f       	mov	r18, r24
    1ada:	cd 01       	movw	r24, r26
    1adc:	00 24       	eor	r0, r0
    1ade:	96 95       	lsr	r25
    1ae0:	87 95       	ror	r24
    1ae2:	07 94       	ror	r0
    1ae4:	96 95       	lsr	r25
    1ae6:	87 95       	ror	r24
    1ae8:	07 94       	ror	r0
    1aea:	98 2f       	mov	r25, r24
    1aec:	80 2d       	mov	r24, r0
    1aee:	86 0f       	add	r24, r22
    1af0:	97 1f       	adc	r25, r23
    1af2:	88 0f       	add	r24, r24
    1af4:	99 1f       	adc	r25, r25
    1af6:	fc 01       	movw	r30, r24
    1af8:	e3 5b       	subi	r30, 0xB3	; 179
    1afa:	f5 4f       	sbci	r31, 0xF5	; 245
    1afc:	20 83       	st	Z, r18
}
    1afe:	0f 90       	pop	r0
    1b00:	0f 90       	pop	r0
    1b02:	0f 90       	pop	r0
    1b04:	cf 91       	pop	r28
    1b06:	df 91       	pop	r29
    1b08:	08 95       	ret

00001b0a <Graphics_drawGroup>:

void Graphics_drawGroup()
    1b0a:	df 93       	push	r29
    1b0c:	cf 93       	push	r28
    1b0e:	cd b7       	in	r28, 0x3d	; 61
    1b10:	de b7       	in	r29, 0x3e	; 62
    1b12:	cf 91       	pop	r28
    1b14:	df 91       	pop	r29
    1b16:	08 95       	ret

00001b18 <__fixunssfsi>:
    1b18:	ef 92       	push	r14
    1b1a:	ff 92       	push	r15
    1b1c:	0f 93       	push	r16
    1b1e:	1f 93       	push	r17
    1b20:	7b 01       	movw	r14, r22
    1b22:	8c 01       	movw	r16, r24
    1b24:	20 e0       	ldi	r18, 0x00	; 0
    1b26:	30 e0       	ldi	r19, 0x00	; 0
    1b28:	40 e0       	ldi	r20, 0x00	; 0
    1b2a:	5f e4       	ldi	r21, 0x4F	; 79
    1b2c:	0e 94 38 11 	call	0x2270	; 0x2270 <__gesf2>
    1b30:	88 23       	and	r24, r24
    1b32:	8c f0       	brlt	.+34     	; 0x1b56 <__fixunssfsi+0x3e>
    1b34:	c8 01       	movw	r24, r16
    1b36:	b7 01       	movw	r22, r14
    1b38:	20 e0       	ldi	r18, 0x00	; 0
    1b3a:	30 e0       	ldi	r19, 0x00	; 0
    1b3c:	40 e0       	ldi	r20, 0x00	; 0
    1b3e:	5f e4       	ldi	r21, 0x4F	; 79
    1b40:	0e 94 04 0f 	call	0x1e08	; 0x1e08 <__subsf3>
    1b44:	0e 94 98 11 	call	0x2330	; 0x2330 <__fixsfsi>
    1b48:	9b 01       	movw	r18, r22
    1b4a:	ac 01       	movw	r20, r24
    1b4c:	20 50       	subi	r18, 0x00	; 0
    1b4e:	30 40       	sbci	r19, 0x00	; 0
    1b50:	40 40       	sbci	r20, 0x00	; 0
    1b52:	50 48       	sbci	r21, 0x80	; 128
    1b54:	06 c0       	rjmp	.+12     	; 0x1b62 <__fixunssfsi+0x4a>
    1b56:	c8 01       	movw	r24, r16
    1b58:	b7 01       	movw	r22, r14
    1b5a:	0e 94 98 11 	call	0x2330	; 0x2330 <__fixsfsi>
    1b5e:	9b 01       	movw	r18, r22
    1b60:	ac 01       	movw	r20, r24
    1b62:	b9 01       	movw	r22, r18
    1b64:	ca 01       	movw	r24, r20
    1b66:	1f 91       	pop	r17
    1b68:	0f 91       	pop	r16
    1b6a:	ff 90       	pop	r15
    1b6c:	ef 90       	pop	r14
    1b6e:	08 95       	ret

00001b70 <_fpadd_parts>:
    1b70:	a0 e0       	ldi	r26, 0x00	; 0
    1b72:	b0 e0       	ldi	r27, 0x00	; 0
    1b74:	ee eb       	ldi	r30, 0xBE	; 190
    1b76:	fd e0       	ldi	r31, 0x0D	; 13
    1b78:	0c 94 0a 18 	jmp	0x3014	; 0x3014 <__prologue_saves__>
    1b7c:	dc 01       	movw	r26, r24
    1b7e:	2b 01       	movw	r4, r22
    1b80:	fa 01       	movw	r30, r20
    1b82:	9c 91       	ld	r25, X
    1b84:	92 30       	cpi	r25, 0x02	; 2
    1b86:	08 f4       	brcc	.+2      	; 0x1b8a <_fpadd_parts+0x1a>
    1b88:	39 c1       	rjmp	.+626    	; 0x1dfc <_fpadd_parts+0x28c>
    1b8a:	eb 01       	movw	r28, r22
    1b8c:	88 81       	ld	r24, Y
    1b8e:	82 30       	cpi	r24, 0x02	; 2
    1b90:	08 f4       	brcc	.+2      	; 0x1b94 <_fpadd_parts+0x24>
    1b92:	33 c1       	rjmp	.+614    	; 0x1dfa <_fpadd_parts+0x28a>
    1b94:	94 30       	cpi	r25, 0x04	; 4
    1b96:	69 f4       	brne	.+26     	; 0x1bb2 <_fpadd_parts+0x42>
    1b98:	84 30       	cpi	r24, 0x04	; 4
    1b9a:	09 f0       	breq	.+2      	; 0x1b9e <_fpadd_parts+0x2e>
    1b9c:	2f c1       	rjmp	.+606    	; 0x1dfc <_fpadd_parts+0x28c>
    1b9e:	11 96       	adiw	r26, 0x01	; 1
    1ba0:	9c 91       	ld	r25, X
    1ba2:	11 97       	sbiw	r26, 0x01	; 1
    1ba4:	89 81       	ldd	r24, Y+1	; 0x01
    1ba6:	98 17       	cp	r25, r24
    1ba8:	09 f4       	brne	.+2      	; 0x1bac <_fpadd_parts+0x3c>
    1baa:	28 c1       	rjmp	.+592    	; 0x1dfc <_fpadd_parts+0x28c>
    1bac:	af e1       	ldi	r26, 0x1F	; 31
    1bae:	b1 e0       	ldi	r27, 0x01	; 1
    1bb0:	25 c1       	rjmp	.+586    	; 0x1dfc <_fpadd_parts+0x28c>
    1bb2:	84 30       	cpi	r24, 0x04	; 4
    1bb4:	09 f4       	brne	.+2      	; 0x1bb8 <_fpadd_parts+0x48>
    1bb6:	21 c1       	rjmp	.+578    	; 0x1dfa <_fpadd_parts+0x28a>
    1bb8:	82 30       	cpi	r24, 0x02	; 2
    1bba:	a9 f4       	brne	.+42     	; 0x1be6 <_fpadd_parts+0x76>
    1bbc:	92 30       	cpi	r25, 0x02	; 2
    1bbe:	09 f0       	breq	.+2      	; 0x1bc2 <_fpadd_parts+0x52>
    1bc0:	1d c1       	rjmp	.+570    	; 0x1dfc <_fpadd_parts+0x28c>
    1bc2:	9a 01       	movw	r18, r20
    1bc4:	ad 01       	movw	r20, r26
    1bc6:	88 e0       	ldi	r24, 0x08	; 8
    1bc8:	ea 01       	movw	r28, r20
    1bca:	09 90       	ld	r0, Y+
    1bcc:	ae 01       	movw	r20, r28
    1bce:	e9 01       	movw	r28, r18
    1bd0:	09 92       	st	Y+, r0
    1bd2:	9e 01       	movw	r18, r28
    1bd4:	81 50       	subi	r24, 0x01	; 1
    1bd6:	c1 f7       	brne	.-16     	; 0x1bc8 <_fpadd_parts+0x58>
    1bd8:	e2 01       	movw	r28, r4
    1bda:	89 81       	ldd	r24, Y+1	; 0x01
    1bdc:	11 96       	adiw	r26, 0x01	; 1
    1bde:	9c 91       	ld	r25, X
    1be0:	89 23       	and	r24, r25
    1be2:	81 83       	std	Z+1, r24	; 0x01
    1be4:	08 c1       	rjmp	.+528    	; 0x1df6 <_fpadd_parts+0x286>
    1be6:	92 30       	cpi	r25, 0x02	; 2
    1be8:	09 f4       	brne	.+2      	; 0x1bec <_fpadd_parts+0x7c>
    1bea:	07 c1       	rjmp	.+526    	; 0x1dfa <_fpadd_parts+0x28a>
    1bec:	12 96       	adiw	r26, 0x02	; 2
    1bee:	2d 90       	ld	r2, X+
    1bf0:	3c 90       	ld	r3, X
    1bf2:	13 97       	sbiw	r26, 0x03	; 3
    1bf4:	eb 01       	movw	r28, r22
    1bf6:	8a 81       	ldd	r24, Y+2	; 0x02
    1bf8:	9b 81       	ldd	r25, Y+3	; 0x03
    1bfa:	14 96       	adiw	r26, 0x04	; 4
    1bfc:	ad 90       	ld	r10, X+
    1bfe:	bd 90       	ld	r11, X+
    1c00:	cd 90       	ld	r12, X+
    1c02:	dc 90       	ld	r13, X
    1c04:	17 97       	sbiw	r26, 0x07	; 7
    1c06:	ec 80       	ldd	r14, Y+4	; 0x04
    1c08:	fd 80       	ldd	r15, Y+5	; 0x05
    1c0a:	0e 81       	ldd	r16, Y+6	; 0x06
    1c0c:	1f 81       	ldd	r17, Y+7	; 0x07
    1c0e:	91 01       	movw	r18, r2
    1c10:	28 1b       	sub	r18, r24
    1c12:	39 0b       	sbc	r19, r25
    1c14:	b9 01       	movw	r22, r18
    1c16:	37 ff       	sbrs	r19, 7
    1c18:	04 c0       	rjmp	.+8      	; 0x1c22 <_fpadd_parts+0xb2>
    1c1a:	66 27       	eor	r22, r22
    1c1c:	77 27       	eor	r23, r23
    1c1e:	62 1b       	sub	r22, r18
    1c20:	73 0b       	sbc	r23, r19
    1c22:	60 32       	cpi	r22, 0x20	; 32
    1c24:	71 05       	cpc	r23, r1
    1c26:	0c f0       	brlt	.+2      	; 0x1c2a <_fpadd_parts+0xba>
    1c28:	61 c0       	rjmp	.+194    	; 0x1cec <_fpadd_parts+0x17c>
    1c2a:	12 16       	cp	r1, r18
    1c2c:	13 06       	cpc	r1, r19
    1c2e:	6c f5       	brge	.+90     	; 0x1c8a <_fpadd_parts+0x11a>
    1c30:	37 01       	movw	r6, r14
    1c32:	48 01       	movw	r8, r16
    1c34:	06 2e       	mov	r0, r22
    1c36:	04 c0       	rjmp	.+8      	; 0x1c40 <_fpadd_parts+0xd0>
    1c38:	96 94       	lsr	r9
    1c3a:	87 94       	ror	r8
    1c3c:	77 94       	ror	r7
    1c3e:	67 94       	ror	r6
    1c40:	0a 94       	dec	r0
    1c42:	d2 f7       	brpl	.-12     	; 0x1c38 <_fpadd_parts+0xc8>
    1c44:	21 e0       	ldi	r18, 0x01	; 1
    1c46:	30 e0       	ldi	r19, 0x00	; 0
    1c48:	40 e0       	ldi	r20, 0x00	; 0
    1c4a:	50 e0       	ldi	r21, 0x00	; 0
    1c4c:	04 c0       	rjmp	.+8      	; 0x1c56 <_fpadd_parts+0xe6>
    1c4e:	22 0f       	add	r18, r18
    1c50:	33 1f       	adc	r19, r19
    1c52:	44 1f       	adc	r20, r20
    1c54:	55 1f       	adc	r21, r21
    1c56:	6a 95       	dec	r22
    1c58:	d2 f7       	brpl	.-12     	; 0x1c4e <_fpadd_parts+0xde>
    1c5a:	21 50       	subi	r18, 0x01	; 1
    1c5c:	30 40       	sbci	r19, 0x00	; 0
    1c5e:	40 40       	sbci	r20, 0x00	; 0
    1c60:	50 40       	sbci	r21, 0x00	; 0
    1c62:	2e 21       	and	r18, r14
    1c64:	3f 21       	and	r19, r15
    1c66:	40 23       	and	r20, r16
    1c68:	51 23       	and	r21, r17
    1c6a:	21 15       	cp	r18, r1
    1c6c:	31 05       	cpc	r19, r1
    1c6e:	41 05       	cpc	r20, r1
    1c70:	51 05       	cpc	r21, r1
    1c72:	21 f0       	breq	.+8      	; 0x1c7c <_fpadd_parts+0x10c>
    1c74:	21 e0       	ldi	r18, 0x01	; 1
    1c76:	30 e0       	ldi	r19, 0x00	; 0
    1c78:	40 e0       	ldi	r20, 0x00	; 0
    1c7a:	50 e0       	ldi	r21, 0x00	; 0
    1c7c:	79 01       	movw	r14, r18
    1c7e:	8a 01       	movw	r16, r20
    1c80:	e6 28       	or	r14, r6
    1c82:	f7 28       	or	r15, r7
    1c84:	08 29       	or	r16, r8
    1c86:	19 29       	or	r17, r9
    1c88:	3c c0       	rjmp	.+120    	; 0x1d02 <_fpadd_parts+0x192>
    1c8a:	23 2b       	or	r18, r19
    1c8c:	d1 f1       	breq	.+116    	; 0x1d02 <_fpadd_parts+0x192>
    1c8e:	26 0e       	add	r2, r22
    1c90:	37 1e       	adc	r3, r23
    1c92:	35 01       	movw	r6, r10
    1c94:	46 01       	movw	r8, r12
    1c96:	06 2e       	mov	r0, r22
    1c98:	04 c0       	rjmp	.+8      	; 0x1ca2 <_fpadd_parts+0x132>
    1c9a:	96 94       	lsr	r9
    1c9c:	87 94       	ror	r8
    1c9e:	77 94       	ror	r7
    1ca0:	67 94       	ror	r6
    1ca2:	0a 94       	dec	r0
    1ca4:	d2 f7       	brpl	.-12     	; 0x1c9a <_fpadd_parts+0x12a>
    1ca6:	21 e0       	ldi	r18, 0x01	; 1
    1ca8:	30 e0       	ldi	r19, 0x00	; 0
    1caa:	40 e0       	ldi	r20, 0x00	; 0
    1cac:	50 e0       	ldi	r21, 0x00	; 0
    1cae:	04 c0       	rjmp	.+8      	; 0x1cb8 <_fpadd_parts+0x148>
    1cb0:	22 0f       	add	r18, r18
    1cb2:	33 1f       	adc	r19, r19
    1cb4:	44 1f       	adc	r20, r20
    1cb6:	55 1f       	adc	r21, r21
    1cb8:	6a 95       	dec	r22
    1cba:	d2 f7       	brpl	.-12     	; 0x1cb0 <_fpadd_parts+0x140>
    1cbc:	21 50       	subi	r18, 0x01	; 1
    1cbe:	30 40       	sbci	r19, 0x00	; 0
    1cc0:	40 40       	sbci	r20, 0x00	; 0
    1cc2:	50 40       	sbci	r21, 0x00	; 0
    1cc4:	2a 21       	and	r18, r10
    1cc6:	3b 21       	and	r19, r11
    1cc8:	4c 21       	and	r20, r12
    1cca:	5d 21       	and	r21, r13
    1ccc:	21 15       	cp	r18, r1
    1cce:	31 05       	cpc	r19, r1
    1cd0:	41 05       	cpc	r20, r1
    1cd2:	51 05       	cpc	r21, r1
    1cd4:	21 f0       	breq	.+8      	; 0x1cde <_fpadd_parts+0x16e>
    1cd6:	21 e0       	ldi	r18, 0x01	; 1
    1cd8:	30 e0       	ldi	r19, 0x00	; 0
    1cda:	40 e0       	ldi	r20, 0x00	; 0
    1cdc:	50 e0       	ldi	r21, 0x00	; 0
    1cde:	59 01       	movw	r10, r18
    1ce0:	6a 01       	movw	r12, r20
    1ce2:	a6 28       	or	r10, r6
    1ce4:	b7 28       	or	r11, r7
    1ce6:	c8 28       	or	r12, r8
    1ce8:	d9 28       	or	r13, r9
    1cea:	0b c0       	rjmp	.+22     	; 0x1d02 <_fpadd_parts+0x192>
    1cec:	82 15       	cp	r24, r2
    1cee:	93 05       	cpc	r25, r3
    1cf0:	2c f0       	brlt	.+10     	; 0x1cfc <_fpadd_parts+0x18c>
    1cf2:	1c 01       	movw	r2, r24
    1cf4:	aa 24       	eor	r10, r10
    1cf6:	bb 24       	eor	r11, r11
    1cf8:	65 01       	movw	r12, r10
    1cfa:	03 c0       	rjmp	.+6      	; 0x1d02 <_fpadd_parts+0x192>
    1cfc:	ee 24       	eor	r14, r14
    1cfe:	ff 24       	eor	r15, r15
    1d00:	87 01       	movw	r16, r14
    1d02:	11 96       	adiw	r26, 0x01	; 1
    1d04:	9c 91       	ld	r25, X
    1d06:	d2 01       	movw	r26, r4
    1d08:	11 96       	adiw	r26, 0x01	; 1
    1d0a:	8c 91       	ld	r24, X
    1d0c:	98 17       	cp	r25, r24
    1d0e:	09 f4       	brne	.+2      	; 0x1d12 <_fpadd_parts+0x1a2>
    1d10:	45 c0       	rjmp	.+138    	; 0x1d9c <_fpadd_parts+0x22c>
    1d12:	99 23       	and	r25, r25
    1d14:	39 f0       	breq	.+14     	; 0x1d24 <_fpadd_parts+0x1b4>
    1d16:	a8 01       	movw	r20, r16
    1d18:	97 01       	movw	r18, r14
    1d1a:	2a 19       	sub	r18, r10
    1d1c:	3b 09       	sbc	r19, r11
    1d1e:	4c 09       	sbc	r20, r12
    1d20:	5d 09       	sbc	r21, r13
    1d22:	06 c0       	rjmp	.+12     	; 0x1d30 <_fpadd_parts+0x1c0>
    1d24:	a6 01       	movw	r20, r12
    1d26:	95 01       	movw	r18, r10
    1d28:	2e 19       	sub	r18, r14
    1d2a:	3f 09       	sbc	r19, r15
    1d2c:	40 0b       	sbc	r20, r16
    1d2e:	51 0b       	sbc	r21, r17
    1d30:	57 fd       	sbrc	r21, 7
    1d32:	08 c0       	rjmp	.+16     	; 0x1d44 <_fpadd_parts+0x1d4>
    1d34:	11 82       	std	Z+1, r1	; 0x01
    1d36:	33 82       	std	Z+3, r3	; 0x03
    1d38:	22 82       	std	Z+2, r2	; 0x02
    1d3a:	24 83       	std	Z+4, r18	; 0x04
    1d3c:	35 83       	std	Z+5, r19	; 0x05
    1d3e:	46 83       	std	Z+6, r20	; 0x06
    1d40:	57 83       	std	Z+7, r21	; 0x07
    1d42:	1d c0       	rjmp	.+58     	; 0x1d7e <_fpadd_parts+0x20e>
    1d44:	81 e0       	ldi	r24, 0x01	; 1
    1d46:	81 83       	std	Z+1, r24	; 0x01
    1d48:	33 82       	std	Z+3, r3	; 0x03
    1d4a:	22 82       	std	Z+2, r2	; 0x02
    1d4c:	88 27       	eor	r24, r24
    1d4e:	99 27       	eor	r25, r25
    1d50:	dc 01       	movw	r26, r24
    1d52:	82 1b       	sub	r24, r18
    1d54:	93 0b       	sbc	r25, r19
    1d56:	a4 0b       	sbc	r26, r20
    1d58:	b5 0b       	sbc	r27, r21
    1d5a:	84 83       	std	Z+4, r24	; 0x04
    1d5c:	95 83       	std	Z+5, r25	; 0x05
    1d5e:	a6 83       	std	Z+6, r26	; 0x06
    1d60:	b7 83       	std	Z+7, r27	; 0x07
    1d62:	0d c0       	rjmp	.+26     	; 0x1d7e <_fpadd_parts+0x20e>
    1d64:	22 0f       	add	r18, r18
    1d66:	33 1f       	adc	r19, r19
    1d68:	44 1f       	adc	r20, r20
    1d6a:	55 1f       	adc	r21, r21
    1d6c:	24 83       	std	Z+4, r18	; 0x04
    1d6e:	35 83       	std	Z+5, r19	; 0x05
    1d70:	46 83       	std	Z+6, r20	; 0x06
    1d72:	57 83       	std	Z+7, r21	; 0x07
    1d74:	82 81       	ldd	r24, Z+2	; 0x02
    1d76:	93 81       	ldd	r25, Z+3	; 0x03
    1d78:	01 97       	sbiw	r24, 0x01	; 1
    1d7a:	93 83       	std	Z+3, r25	; 0x03
    1d7c:	82 83       	std	Z+2, r24	; 0x02
    1d7e:	24 81       	ldd	r18, Z+4	; 0x04
    1d80:	35 81       	ldd	r19, Z+5	; 0x05
    1d82:	46 81       	ldd	r20, Z+6	; 0x06
    1d84:	57 81       	ldd	r21, Z+7	; 0x07
    1d86:	da 01       	movw	r26, r20
    1d88:	c9 01       	movw	r24, r18
    1d8a:	01 97       	sbiw	r24, 0x01	; 1
    1d8c:	a1 09       	sbc	r26, r1
    1d8e:	b1 09       	sbc	r27, r1
    1d90:	8f 5f       	subi	r24, 0xFF	; 255
    1d92:	9f 4f       	sbci	r25, 0xFF	; 255
    1d94:	af 4f       	sbci	r26, 0xFF	; 255
    1d96:	bf 43       	sbci	r27, 0x3F	; 63
    1d98:	28 f3       	brcs	.-54     	; 0x1d64 <_fpadd_parts+0x1f4>
    1d9a:	0b c0       	rjmp	.+22     	; 0x1db2 <_fpadd_parts+0x242>
    1d9c:	91 83       	std	Z+1, r25	; 0x01
    1d9e:	33 82       	std	Z+3, r3	; 0x03
    1da0:	22 82       	std	Z+2, r2	; 0x02
    1da2:	ea 0c       	add	r14, r10
    1da4:	fb 1c       	adc	r15, r11
    1da6:	0c 1d       	adc	r16, r12
    1da8:	1d 1d       	adc	r17, r13
    1daa:	e4 82       	std	Z+4, r14	; 0x04
    1dac:	f5 82       	std	Z+5, r15	; 0x05
    1dae:	06 83       	std	Z+6, r16	; 0x06
    1db0:	17 83       	std	Z+7, r17	; 0x07
    1db2:	83 e0       	ldi	r24, 0x03	; 3
    1db4:	80 83       	st	Z, r24
    1db6:	24 81       	ldd	r18, Z+4	; 0x04
    1db8:	35 81       	ldd	r19, Z+5	; 0x05
    1dba:	46 81       	ldd	r20, Z+6	; 0x06
    1dbc:	57 81       	ldd	r21, Z+7	; 0x07
    1dbe:	57 ff       	sbrs	r21, 7
    1dc0:	1a c0       	rjmp	.+52     	; 0x1df6 <_fpadd_parts+0x286>
    1dc2:	c9 01       	movw	r24, r18
    1dc4:	aa 27       	eor	r26, r26
    1dc6:	97 fd       	sbrc	r25, 7
    1dc8:	a0 95       	com	r26
    1dca:	ba 2f       	mov	r27, r26
    1dcc:	81 70       	andi	r24, 0x01	; 1
    1dce:	90 70       	andi	r25, 0x00	; 0
    1dd0:	a0 70       	andi	r26, 0x00	; 0
    1dd2:	b0 70       	andi	r27, 0x00	; 0
    1dd4:	56 95       	lsr	r21
    1dd6:	47 95       	ror	r20
    1dd8:	37 95       	ror	r19
    1dda:	27 95       	ror	r18
    1ddc:	82 2b       	or	r24, r18
    1dde:	93 2b       	or	r25, r19
    1de0:	a4 2b       	or	r26, r20
    1de2:	b5 2b       	or	r27, r21
    1de4:	84 83       	std	Z+4, r24	; 0x04
    1de6:	95 83       	std	Z+5, r25	; 0x05
    1de8:	a6 83       	std	Z+6, r26	; 0x06
    1dea:	b7 83       	std	Z+7, r27	; 0x07
    1dec:	82 81       	ldd	r24, Z+2	; 0x02
    1dee:	93 81       	ldd	r25, Z+3	; 0x03
    1df0:	01 96       	adiw	r24, 0x01	; 1
    1df2:	93 83       	std	Z+3, r25	; 0x03
    1df4:	82 83       	std	Z+2, r24	; 0x02
    1df6:	df 01       	movw	r26, r30
    1df8:	01 c0       	rjmp	.+2      	; 0x1dfc <_fpadd_parts+0x28c>
    1dfa:	d2 01       	movw	r26, r4
    1dfc:	cd 01       	movw	r24, r26
    1dfe:	cd b7       	in	r28, 0x3d	; 61
    1e00:	de b7       	in	r29, 0x3e	; 62
    1e02:	e2 e1       	ldi	r30, 0x12	; 18
    1e04:	0c 94 26 18 	jmp	0x304c	; 0x304c <__epilogue_restores__>

00001e08 <__subsf3>:
    1e08:	a0 e2       	ldi	r26, 0x20	; 32
    1e0a:	b0 e0       	ldi	r27, 0x00	; 0
    1e0c:	ea e0       	ldi	r30, 0x0A	; 10
    1e0e:	ff e0       	ldi	r31, 0x0F	; 15
    1e10:	0c 94 16 18 	jmp	0x302c	; 0x302c <__prologue_saves__+0x18>
    1e14:	69 83       	std	Y+1, r22	; 0x01
    1e16:	7a 83       	std	Y+2, r23	; 0x02
    1e18:	8b 83       	std	Y+3, r24	; 0x03
    1e1a:	9c 83       	std	Y+4, r25	; 0x04
    1e1c:	2d 83       	std	Y+5, r18	; 0x05
    1e1e:	3e 83       	std	Y+6, r19	; 0x06
    1e20:	4f 83       	std	Y+7, r20	; 0x07
    1e22:	58 87       	std	Y+8, r21	; 0x08
    1e24:	e9 e0       	ldi	r30, 0x09	; 9
    1e26:	ee 2e       	mov	r14, r30
    1e28:	f1 2c       	mov	r15, r1
    1e2a:	ec 0e       	add	r14, r28
    1e2c:	fd 1e       	adc	r15, r29
    1e2e:	ce 01       	movw	r24, r28
    1e30:	01 96       	adiw	r24, 0x01	; 1
    1e32:	b7 01       	movw	r22, r14
    1e34:	0e 94 89 13 	call	0x2712	; 0x2712 <__unpack_f>
    1e38:	8e 01       	movw	r16, r28
    1e3a:	0f 5e       	subi	r16, 0xEF	; 239
    1e3c:	1f 4f       	sbci	r17, 0xFF	; 255
    1e3e:	ce 01       	movw	r24, r28
    1e40:	05 96       	adiw	r24, 0x05	; 5
    1e42:	b8 01       	movw	r22, r16
    1e44:	0e 94 89 13 	call	0x2712	; 0x2712 <__unpack_f>
    1e48:	8a 89       	ldd	r24, Y+18	; 0x12
    1e4a:	91 e0       	ldi	r25, 0x01	; 1
    1e4c:	89 27       	eor	r24, r25
    1e4e:	8a 8b       	std	Y+18, r24	; 0x12
    1e50:	c7 01       	movw	r24, r14
    1e52:	b8 01       	movw	r22, r16
    1e54:	ae 01       	movw	r20, r28
    1e56:	47 5e       	subi	r20, 0xE7	; 231
    1e58:	5f 4f       	sbci	r21, 0xFF	; 255
    1e5a:	0e 94 b8 0d 	call	0x1b70	; 0x1b70 <_fpadd_parts>
    1e5e:	0e 94 b4 12 	call	0x2568	; 0x2568 <__pack_f>
    1e62:	a0 96       	adiw	r28, 0x20	; 32
    1e64:	e6 e0       	ldi	r30, 0x06	; 6
    1e66:	0c 94 32 18 	jmp	0x3064	; 0x3064 <__epilogue_restores__+0x18>

00001e6a <__addsf3>:
    1e6a:	a0 e2       	ldi	r26, 0x20	; 32
    1e6c:	b0 e0       	ldi	r27, 0x00	; 0
    1e6e:	eb e3       	ldi	r30, 0x3B	; 59
    1e70:	ff e0       	ldi	r31, 0x0F	; 15
    1e72:	0c 94 16 18 	jmp	0x302c	; 0x302c <__prologue_saves__+0x18>
    1e76:	69 83       	std	Y+1, r22	; 0x01
    1e78:	7a 83       	std	Y+2, r23	; 0x02
    1e7a:	8b 83       	std	Y+3, r24	; 0x03
    1e7c:	9c 83       	std	Y+4, r25	; 0x04
    1e7e:	2d 83       	std	Y+5, r18	; 0x05
    1e80:	3e 83       	std	Y+6, r19	; 0x06
    1e82:	4f 83       	std	Y+7, r20	; 0x07
    1e84:	58 87       	std	Y+8, r21	; 0x08
    1e86:	f9 e0       	ldi	r31, 0x09	; 9
    1e88:	ef 2e       	mov	r14, r31
    1e8a:	f1 2c       	mov	r15, r1
    1e8c:	ec 0e       	add	r14, r28
    1e8e:	fd 1e       	adc	r15, r29
    1e90:	ce 01       	movw	r24, r28
    1e92:	01 96       	adiw	r24, 0x01	; 1
    1e94:	b7 01       	movw	r22, r14
    1e96:	0e 94 89 13 	call	0x2712	; 0x2712 <__unpack_f>
    1e9a:	8e 01       	movw	r16, r28
    1e9c:	0f 5e       	subi	r16, 0xEF	; 239
    1e9e:	1f 4f       	sbci	r17, 0xFF	; 255
    1ea0:	ce 01       	movw	r24, r28
    1ea2:	05 96       	adiw	r24, 0x05	; 5
    1ea4:	b8 01       	movw	r22, r16
    1ea6:	0e 94 89 13 	call	0x2712	; 0x2712 <__unpack_f>
    1eaa:	c7 01       	movw	r24, r14
    1eac:	b8 01       	movw	r22, r16
    1eae:	ae 01       	movw	r20, r28
    1eb0:	47 5e       	subi	r20, 0xE7	; 231
    1eb2:	5f 4f       	sbci	r21, 0xFF	; 255
    1eb4:	0e 94 b8 0d 	call	0x1b70	; 0x1b70 <_fpadd_parts>
    1eb8:	0e 94 b4 12 	call	0x2568	; 0x2568 <__pack_f>
    1ebc:	a0 96       	adiw	r28, 0x20	; 32
    1ebe:	e6 e0       	ldi	r30, 0x06	; 6
    1ec0:	0c 94 32 18 	jmp	0x3064	; 0x3064 <__epilogue_restores__+0x18>

00001ec4 <__mulsf3>:
    1ec4:	a0 e2       	ldi	r26, 0x20	; 32
    1ec6:	b0 e0       	ldi	r27, 0x00	; 0
    1ec8:	e8 e6       	ldi	r30, 0x68	; 104
    1eca:	ff e0       	ldi	r31, 0x0F	; 15
    1ecc:	0c 94 0a 18 	jmp	0x3014	; 0x3014 <__prologue_saves__>
    1ed0:	69 83       	std	Y+1, r22	; 0x01
    1ed2:	7a 83       	std	Y+2, r23	; 0x02
    1ed4:	8b 83       	std	Y+3, r24	; 0x03
    1ed6:	9c 83       	std	Y+4, r25	; 0x04
    1ed8:	2d 83       	std	Y+5, r18	; 0x05
    1eda:	3e 83       	std	Y+6, r19	; 0x06
    1edc:	4f 83       	std	Y+7, r20	; 0x07
    1ede:	58 87       	std	Y+8, r21	; 0x08
    1ee0:	ce 01       	movw	r24, r28
    1ee2:	01 96       	adiw	r24, 0x01	; 1
    1ee4:	be 01       	movw	r22, r28
    1ee6:	67 5f       	subi	r22, 0xF7	; 247
    1ee8:	7f 4f       	sbci	r23, 0xFF	; 255
    1eea:	0e 94 89 13 	call	0x2712	; 0x2712 <__unpack_f>
    1eee:	ce 01       	movw	r24, r28
    1ef0:	05 96       	adiw	r24, 0x05	; 5
    1ef2:	be 01       	movw	r22, r28
    1ef4:	6f 5e       	subi	r22, 0xEF	; 239
    1ef6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ef8:	0e 94 89 13 	call	0x2712	; 0x2712 <__unpack_f>
    1efc:	99 85       	ldd	r25, Y+9	; 0x09
    1efe:	92 30       	cpi	r25, 0x02	; 2
    1f00:	88 f0       	brcs	.+34     	; 0x1f24 <__mulsf3+0x60>
    1f02:	89 89       	ldd	r24, Y+17	; 0x11
    1f04:	82 30       	cpi	r24, 0x02	; 2
    1f06:	c8 f0       	brcs	.+50     	; 0x1f3a <__mulsf3+0x76>
    1f08:	94 30       	cpi	r25, 0x04	; 4
    1f0a:	19 f4       	brne	.+6      	; 0x1f12 <__mulsf3+0x4e>
    1f0c:	82 30       	cpi	r24, 0x02	; 2
    1f0e:	51 f4       	brne	.+20     	; 0x1f24 <__mulsf3+0x60>
    1f10:	04 c0       	rjmp	.+8      	; 0x1f1a <__mulsf3+0x56>
    1f12:	84 30       	cpi	r24, 0x04	; 4
    1f14:	29 f4       	brne	.+10     	; 0x1f20 <__mulsf3+0x5c>
    1f16:	92 30       	cpi	r25, 0x02	; 2
    1f18:	81 f4       	brne	.+32     	; 0x1f3a <__mulsf3+0x76>
    1f1a:	8f e1       	ldi	r24, 0x1F	; 31
    1f1c:	91 e0       	ldi	r25, 0x01	; 1
    1f1e:	c6 c0       	rjmp	.+396    	; 0x20ac <__mulsf3+0x1e8>
    1f20:	92 30       	cpi	r25, 0x02	; 2
    1f22:	49 f4       	brne	.+18     	; 0x1f36 <__mulsf3+0x72>
    1f24:	20 e0       	ldi	r18, 0x00	; 0
    1f26:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f28:	8a 89       	ldd	r24, Y+18	; 0x12
    1f2a:	98 13       	cpse	r25, r24
    1f2c:	21 e0       	ldi	r18, 0x01	; 1
    1f2e:	2a 87       	std	Y+10, r18	; 0x0a
    1f30:	ce 01       	movw	r24, r28
    1f32:	09 96       	adiw	r24, 0x09	; 9
    1f34:	bb c0       	rjmp	.+374    	; 0x20ac <__mulsf3+0x1e8>
    1f36:	82 30       	cpi	r24, 0x02	; 2
    1f38:	49 f4       	brne	.+18     	; 0x1f4c <__mulsf3+0x88>
    1f3a:	20 e0       	ldi	r18, 0x00	; 0
    1f3c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f3e:	8a 89       	ldd	r24, Y+18	; 0x12
    1f40:	98 13       	cpse	r25, r24
    1f42:	21 e0       	ldi	r18, 0x01	; 1
    1f44:	2a 8b       	std	Y+18, r18	; 0x12
    1f46:	ce 01       	movw	r24, r28
    1f48:	41 96       	adiw	r24, 0x11	; 17
    1f4a:	b0 c0       	rjmp	.+352    	; 0x20ac <__mulsf3+0x1e8>
    1f4c:	2d 84       	ldd	r2, Y+13	; 0x0d
    1f4e:	3e 84       	ldd	r3, Y+14	; 0x0e
    1f50:	4f 84       	ldd	r4, Y+15	; 0x0f
    1f52:	58 88       	ldd	r5, Y+16	; 0x10
    1f54:	6d 88       	ldd	r6, Y+21	; 0x15
    1f56:	7e 88       	ldd	r7, Y+22	; 0x16
    1f58:	8f 88       	ldd	r8, Y+23	; 0x17
    1f5a:	98 8c       	ldd	r9, Y+24	; 0x18
    1f5c:	ee 24       	eor	r14, r14
    1f5e:	ff 24       	eor	r15, r15
    1f60:	87 01       	movw	r16, r14
    1f62:	aa 24       	eor	r10, r10
    1f64:	bb 24       	eor	r11, r11
    1f66:	65 01       	movw	r12, r10
    1f68:	40 e0       	ldi	r20, 0x00	; 0
    1f6a:	50 e0       	ldi	r21, 0x00	; 0
    1f6c:	60 e0       	ldi	r22, 0x00	; 0
    1f6e:	70 e0       	ldi	r23, 0x00	; 0
    1f70:	e0 e0       	ldi	r30, 0x00	; 0
    1f72:	f0 e0       	ldi	r31, 0x00	; 0
    1f74:	c1 01       	movw	r24, r2
    1f76:	81 70       	andi	r24, 0x01	; 1
    1f78:	90 70       	andi	r25, 0x00	; 0
    1f7a:	89 2b       	or	r24, r25
    1f7c:	e9 f0       	breq	.+58     	; 0x1fb8 <__mulsf3+0xf4>
    1f7e:	e6 0c       	add	r14, r6
    1f80:	f7 1c       	adc	r15, r7
    1f82:	08 1d       	adc	r16, r8
    1f84:	19 1d       	adc	r17, r9
    1f86:	9a 01       	movw	r18, r20
    1f88:	ab 01       	movw	r20, r22
    1f8a:	2a 0d       	add	r18, r10
    1f8c:	3b 1d       	adc	r19, r11
    1f8e:	4c 1d       	adc	r20, r12
    1f90:	5d 1d       	adc	r21, r13
    1f92:	80 e0       	ldi	r24, 0x00	; 0
    1f94:	90 e0       	ldi	r25, 0x00	; 0
    1f96:	a0 e0       	ldi	r26, 0x00	; 0
    1f98:	b0 e0       	ldi	r27, 0x00	; 0
    1f9a:	e6 14       	cp	r14, r6
    1f9c:	f7 04       	cpc	r15, r7
    1f9e:	08 05       	cpc	r16, r8
    1fa0:	19 05       	cpc	r17, r9
    1fa2:	20 f4       	brcc	.+8      	; 0x1fac <__mulsf3+0xe8>
    1fa4:	81 e0       	ldi	r24, 0x01	; 1
    1fa6:	90 e0       	ldi	r25, 0x00	; 0
    1fa8:	a0 e0       	ldi	r26, 0x00	; 0
    1faa:	b0 e0       	ldi	r27, 0x00	; 0
    1fac:	ba 01       	movw	r22, r20
    1fae:	a9 01       	movw	r20, r18
    1fb0:	48 0f       	add	r20, r24
    1fb2:	59 1f       	adc	r21, r25
    1fb4:	6a 1f       	adc	r22, r26
    1fb6:	7b 1f       	adc	r23, r27
    1fb8:	aa 0c       	add	r10, r10
    1fba:	bb 1c       	adc	r11, r11
    1fbc:	cc 1c       	adc	r12, r12
    1fbe:	dd 1c       	adc	r13, r13
    1fc0:	97 fe       	sbrs	r9, 7
    1fc2:	08 c0       	rjmp	.+16     	; 0x1fd4 <__mulsf3+0x110>
    1fc4:	81 e0       	ldi	r24, 0x01	; 1
    1fc6:	90 e0       	ldi	r25, 0x00	; 0
    1fc8:	a0 e0       	ldi	r26, 0x00	; 0
    1fca:	b0 e0       	ldi	r27, 0x00	; 0
    1fcc:	a8 2a       	or	r10, r24
    1fce:	b9 2a       	or	r11, r25
    1fd0:	ca 2a       	or	r12, r26
    1fd2:	db 2a       	or	r13, r27
    1fd4:	31 96       	adiw	r30, 0x01	; 1
    1fd6:	e0 32       	cpi	r30, 0x20	; 32
    1fd8:	f1 05       	cpc	r31, r1
    1fda:	49 f0       	breq	.+18     	; 0x1fee <__mulsf3+0x12a>
    1fdc:	66 0c       	add	r6, r6
    1fde:	77 1c       	adc	r7, r7
    1fe0:	88 1c       	adc	r8, r8
    1fe2:	99 1c       	adc	r9, r9
    1fe4:	56 94       	lsr	r5
    1fe6:	47 94       	ror	r4
    1fe8:	37 94       	ror	r3
    1fea:	27 94       	ror	r2
    1fec:	c3 cf       	rjmp	.-122    	; 0x1f74 <__mulsf3+0xb0>
    1fee:	fa 85       	ldd	r31, Y+10	; 0x0a
    1ff0:	ea 89       	ldd	r30, Y+18	; 0x12
    1ff2:	2b 89       	ldd	r18, Y+19	; 0x13
    1ff4:	3c 89       	ldd	r19, Y+20	; 0x14
    1ff6:	8b 85       	ldd	r24, Y+11	; 0x0b
    1ff8:	9c 85       	ldd	r25, Y+12	; 0x0c
    1ffa:	28 0f       	add	r18, r24
    1ffc:	39 1f       	adc	r19, r25
    1ffe:	2e 5f       	subi	r18, 0xFE	; 254
    2000:	3f 4f       	sbci	r19, 0xFF	; 255
    2002:	17 c0       	rjmp	.+46     	; 0x2032 <__mulsf3+0x16e>
    2004:	ca 01       	movw	r24, r20
    2006:	81 70       	andi	r24, 0x01	; 1
    2008:	90 70       	andi	r25, 0x00	; 0
    200a:	89 2b       	or	r24, r25
    200c:	61 f0       	breq	.+24     	; 0x2026 <__mulsf3+0x162>
    200e:	16 95       	lsr	r17
    2010:	07 95       	ror	r16
    2012:	f7 94       	ror	r15
    2014:	e7 94       	ror	r14
    2016:	80 e0       	ldi	r24, 0x00	; 0
    2018:	90 e0       	ldi	r25, 0x00	; 0
    201a:	a0 e0       	ldi	r26, 0x00	; 0
    201c:	b0 e8       	ldi	r27, 0x80	; 128
    201e:	e8 2a       	or	r14, r24
    2020:	f9 2a       	or	r15, r25
    2022:	0a 2b       	or	r16, r26
    2024:	1b 2b       	or	r17, r27
    2026:	76 95       	lsr	r23
    2028:	67 95       	ror	r22
    202a:	57 95       	ror	r21
    202c:	47 95       	ror	r20
    202e:	2f 5f       	subi	r18, 0xFF	; 255
    2030:	3f 4f       	sbci	r19, 0xFF	; 255
    2032:	77 fd       	sbrc	r23, 7
    2034:	e7 cf       	rjmp	.-50     	; 0x2004 <__mulsf3+0x140>
    2036:	0c c0       	rjmp	.+24     	; 0x2050 <__mulsf3+0x18c>
    2038:	44 0f       	add	r20, r20
    203a:	55 1f       	adc	r21, r21
    203c:	66 1f       	adc	r22, r22
    203e:	77 1f       	adc	r23, r23
    2040:	17 fd       	sbrc	r17, 7
    2042:	41 60       	ori	r20, 0x01	; 1
    2044:	ee 0c       	add	r14, r14
    2046:	ff 1c       	adc	r15, r15
    2048:	00 1f       	adc	r16, r16
    204a:	11 1f       	adc	r17, r17
    204c:	21 50       	subi	r18, 0x01	; 1
    204e:	30 40       	sbci	r19, 0x00	; 0
    2050:	40 30       	cpi	r20, 0x00	; 0
    2052:	90 e0       	ldi	r25, 0x00	; 0
    2054:	59 07       	cpc	r21, r25
    2056:	90 e0       	ldi	r25, 0x00	; 0
    2058:	69 07       	cpc	r22, r25
    205a:	90 e4       	ldi	r25, 0x40	; 64
    205c:	79 07       	cpc	r23, r25
    205e:	60 f3       	brcs	.-40     	; 0x2038 <__mulsf3+0x174>
    2060:	2b 8f       	std	Y+27, r18	; 0x1b
    2062:	3c 8f       	std	Y+28, r19	; 0x1c
    2064:	db 01       	movw	r26, r22
    2066:	ca 01       	movw	r24, r20
    2068:	8f 77       	andi	r24, 0x7F	; 127
    206a:	90 70       	andi	r25, 0x00	; 0
    206c:	a0 70       	andi	r26, 0x00	; 0
    206e:	b0 70       	andi	r27, 0x00	; 0
    2070:	80 34       	cpi	r24, 0x40	; 64
    2072:	91 05       	cpc	r25, r1
    2074:	a1 05       	cpc	r26, r1
    2076:	b1 05       	cpc	r27, r1
    2078:	61 f4       	brne	.+24     	; 0x2092 <__mulsf3+0x1ce>
    207a:	47 fd       	sbrc	r20, 7
    207c:	0a c0       	rjmp	.+20     	; 0x2092 <__mulsf3+0x1ce>
    207e:	e1 14       	cp	r14, r1
    2080:	f1 04       	cpc	r15, r1
    2082:	01 05       	cpc	r16, r1
    2084:	11 05       	cpc	r17, r1
    2086:	29 f0       	breq	.+10     	; 0x2092 <__mulsf3+0x1ce>
    2088:	40 5c       	subi	r20, 0xC0	; 192
    208a:	5f 4f       	sbci	r21, 0xFF	; 255
    208c:	6f 4f       	sbci	r22, 0xFF	; 255
    208e:	7f 4f       	sbci	r23, 0xFF	; 255
    2090:	40 78       	andi	r20, 0x80	; 128
    2092:	1a 8e       	std	Y+26, r1	; 0x1a
    2094:	fe 17       	cp	r31, r30
    2096:	11 f0       	breq	.+4      	; 0x209c <__mulsf3+0x1d8>
    2098:	81 e0       	ldi	r24, 0x01	; 1
    209a:	8a 8f       	std	Y+26, r24	; 0x1a
    209c:	4d 8f       	std	Y+29, r20	; 0x1d
    209e:	5e 8f       	std	Y+30, r21	; 0x1e
    20a0:	6f 8f       	std	Y+31, r22	; 0x1f
    20a2:	78 a3       	std	Y+32, r23	; 0x20
    20a4:	83 e0       	ldi	r24, 0x03	; 3
    20a6:	89 8f       	std	Y+25, r24	; 0x19
    20a8:	ce 01       	movw	r24, r28
    20aa:	49 96       	adiw	r24, 0x19	; 25
    20ac:	0e 94 b4 12 	call	0x2568	; 0x2568 <__pack_f>
    20b0:	a0 96       	adiw	r28, 0x20	; 32
    20b2:	e2 e1       	ldi	r30, 0x12	; 18
    20b4:	0c 94 26 18 	jmp	0x304c	; 0x304c <__epilogue_restores__>

000020b8 <__divsf3>:
    20b8:	a8 e1       	ldi	r26, 0x18	; 24
    20ba:	b0 e0       	ldi	r27, 0x00	; 0
    20bc:	e2 e6       	ldi	r30, 0x62	; 98
    20be:	f0 e1       	ldi	r31, 0x10	; 16
    20c0:	0c 94 12 18 	jmp	0x3024	; 0x3024 <__prologue_saves__+0x10>
    20c4:	69 83       	std	Y+1, r22	; 0x01
    20c6:	7a 83       	std	Y+2, r23	; 0x02
    20c8:	8b 83       	std	Y+3, r24	; 0x03
    20ca:	9c 83       	std	Y+4, r25	; 0x04
    20cc:	2d 83       	std	Y+5, r18	; 0x05
    20ce:	3e 83       	std	Y+6, r19	; 0x06
    20d0:	4f 83       	std	Y+7, r20	; 0x07
    20d2:	58 87       	std	Y+8, r21	; 0x08
    20d4:	b9 e0       	ldi	r27, 0x09	; 9
    20d6:	eb 2e       	mov	r14, r27
    20d8:	f1 2c       	mov	r15, r1
    20da:	ec 0e       	add	r14, r28
    20dc:	fd 1e       	adc	r15, r29
    20de:	ce 01       	movw	r24, r28
    20e0:	01 96       	adiw	r24, 0x01	; 1
    20e2:	b7 01       	movw	r22, r14
    20e4:	0e 94 89 13 	call	0x2712	; 0x2712 <__unpack_f>
    20e8:	8e 01       	movw	r16, r28
    20ea:	0f 5e       	subi	r16, 0xEF	; 239
    20ec:	1f 4f       	sbci	r17, 0xFF	; 255
    20ee:	ce 01       	movw	r24, r28
    20f0:	05 96       	adiw	r24, 0x05	; 5
    20f2:	b8 01       	movw	r22, r16
    20f4:	0e 94 89 13 	call	0x2712	; 0x2712 <__unpack_f>
    20f8:	29 85       	ldd	r18, Y+9	; 0x09
    20fa:	22 30       	cpi	r18, 0x02	; 2
    20fc:	08 f4       	brcc	.+2      	; 0x2100 <__divsf3+0x48>
    20fe:	7e c0       	rjmp	.+252    	; 0x21fc <__divsf3+0x144>
    2100:	39 89       	ldd	r19, Y+17	; 0x11
    2102:	32 30       	cpi	r19, 0x02	; 2
    2104:	10 f4       	brcc	.+4      	; 0x210a <__divsf3+0x52>
    2106:	b8 01       	movw	r22, r16
    2108:	7c c0       	rjmp	.+248    	; 0x2202 <__divsf3+0x14a>
    210a:	8a 85       	ldd	r24, Y+10	; 0x0a
    210c:	9a 89       	ldd	r25, Y+18	; 0x12
    210e:	89 27       	eor	r24, r25
    2110:	8a 87       	std	Y+10, r24	; 0x0a
    2112:	24 30       	cpi	r18, 0x04	; 4
    2114:	11 f0       	breq	.+4      	; 0x211a <__divsf3+0x62>
    2116:	22 30       	cpi	r18, 0x02	; 2
    2118:	31 f4       	brne	.+12     	; 0x2126 <__divsf3+0x6e>
    211a:	23 17       	cp	r18, r19
    211c:	09 f0       	breq	.+2      	; 0x2120 <__divsf3+0x68>
    211e:	6e c0       	rjmp	.+220    	; 0x21fc <__divsf3+0x144>
    2120:	6f e1       	ldi	r22, 0x1F	; 31
    2122:	71 e0       	ldi	r23, 0x01	; 1
    2124:	6e c0       	rjmp	.+220    	; 0x2202 <__divsf3+0x14a>
    2126:	34 30       	cpi	r19, 0x04	; 4
    2128:	39 f4       	brne	.+14     	; 0x2138 <__divsf3+0x80>
    212a:	1d 86       	std	Y+13, r1	; 0x0d
    212c:	1e 86       	std	Y+14, r1	; 0x0e
    212e:	1f 86       	std	Y+15, r1	; 0x0f
    2130:	18 8a       	std	Y+16, r1	; 0x10
    2132:	1c 86       	std	Y+12, r1	; 0x0c
    2134:	1b 86       	std	Y+11, r1	; 0x0b
    2136:	04 c0       	rjmp	.+8      	; 0x2140 <__divsf3+0x88>
    2138:	32 30       	cpi	r19, 0x02	; 2
    213a:	21 f4       	brne	.+8      	; 0x2144 <__divsf3+0x8c>
    213c:	84 e0       	ldi	r24, 0x04	; 4
    213e:	89 87       	std	Y+9, r24	; 0x09
    2140:	b7 01       	movw	r22, r14
    2142:	5f c0       	rjmp	.+190    	; 0x2202 <__divsf3+0x14a>
    2144:	2b 85       	ldd	r18, Y+11	; 0x0b
    2146:	3c 85       	ldd	r19, Y+12	; 0x0c
    2148:	8b 89       	ldd	r24, Y+19	; 0x13
    214a:	9c 89       	ldd	r25, Y+20	; 0x14
    214c:	28 1b       	sub	r18, r24
    214e:	39 0b       	sbc	r19, r25
    2150:	3c 87       	std	Y+12, r19	; 0x0c
    2152:	2b 87       	std	Y+11, r18	; 0x0b
    2154:	ed 84       	ldd	r14, Y+13	; 0x0d
    2156:	fe 84       	ldd	r15, Y+14	; 0x0e
    2158:	0f 85       	ldd	r16, Y+15	; 0x0f
    215a:	18 89       	ldd	r17, Y+16	; 0x10
    215c:	ad 88       	ldd	r10, Y+21	; 0x15
    215e:	be 88       	ldd	r11, Y+22	; 0x16
    2160:	cf 88       	ldd	r12, Y+23	; 0x17
    2162:	d8 8c       	ldd	r13, Y+24	; 0x18
    2164:	ea 14       	cp	r14, r10
    2166:	fb 04       	cpc	r15, r11
    2168:	0c 05       	cpc	r16, r12
    216a:	1d 05       	cpc	r17, r13
    216c:	40 f4       	brcc	.+16     	; 0x217e <__divsf3+0xc6>
    216e:	ee 0c       	add	r14, r14
    2170:	ff 1c       	adc	r15, r15
    2172:	00 1f       	adc	r16, r16
    2174:	11 1f       	adc	r17, r17
    2176:	21 50       	subi	r18, 0x01	; 1
    2178:	30 40       	sbci	r19, 0x00	; 0
    217a:	3c 87       	std	Y+12, r19	; 0x0c
    217c:	2b 87       	std	Y+11, r18	; 0x0b
    217e:	20 e0       	ldi	r18, 0x00	; 0
    2180:	30 e0       	ldi	r19, 0x00	; 0
    2182:	40 e0       	ldi	r20, 0x00	; 0
    2184:	50 e0       	ldi	r21, 0x00	; 0
    2186:	80 e0       	ldi	r24, 0x00	; 0
    2188:	90 e0       	ldi	r25, 0x00	; 0
    218a:	a0 e0       	ldi	r26, 0x00	; 0
    218c:	b0 e4       	ldi	r27, 0x40	; 64
    218e:	60 e0       	ldi	r22, 0x00	; 0
    2190:	70 e0       	ldi	r23, 0x00	; 0
    2192:	ea 14       	cp	r14, r10
    2194:	fb 04       	cpc	r15, r11
    2196:	0c 05       	cpc	r16, r12
    2198:	1d 05       	cpc	r17, r13
    219a:	40 f0       	brcs	.+16     	; 0x21ac <__divsf3+0xf4>
    219c:	28 2b       	or	r18, r24
    219e:	39 2b       	or	r19, r25
    21a0:	4a 2b       	or	r20, r26
    21a2:	5b 2b       	or	r21, r27
    21a4:	ea 18       	sub	r14, r10
    21a6:	fb 08       	sbc	r15, r11
    21a8:	0c 09       	sbc	r16, r12
    21aa:	1d 09       	sbc	r17, r13
    21ac:	b6 95       	lsr	r27
    21ae:	a7 95       	ror	r26
    21b0:	97 95       	ror	r25
    21b2:	87 95       	ror	r24
    21b4:	ee 0c       	add	r14, r14
    21b6:	ff 1c       	adc	r15, r15
    21b8:	00 1f       	adc	r16, r16
    21ba:	11 1f       	adc	r17, r17
    21bc:	6f 5f       	subi	r22, 0xFF	; 255
    21be:	7f 4f       	sbci	r23, 0xFF	; 255
    21c0:	6f 31       	cpi	r22, 0x1F	; 31
    21c2:	71 05       	cpc	r23, r1
    21c4:	31 f7       	brne	.-52     	; 0x2192 <__divsf3+0xda>
    21c6:	da 01       	movw	r26, r20
    21c8:	c9 01       	movw	r24, r18
    21ca:	8f 77       	andi	r24, 0x7F	; 127
    21cc:	90 70       	andi	r25, 0x00	; 0
    21ce:	a0 70       	andi	r26, 0x00	; 0
    21d0:	b0 70       	andi	r27, 0x00	; 0
    21d2:	80 34       	cpi	r24, 0x40	; 64
    21d4:	91 05       	cpc	r25, r1
    21d6:	a1 05       	cpc	r26, r1
    21d8:	b1 05       	cpc	r27, r1
    21da:	61 f4       	brne	.+24     	; 0x21f4 <__divsf3+0x13c>
    21dc:	27 fd       	sbrc	r18, 7
    21de:	0a c0       	rjmp	.+20     	; 0x21f4 <__divsf3+0x13c>
    21e0:	e1 14       	cp	r14, r1
    21e2:	f1 04       	cpc	r15, r1
    21e4:	01 05       	cpc	r16, r1
    21e6:	11 05       	cpc	r17, r1
    21e8:	29 f0       	breq	.+10     	; 0x21f4 <__divsf3+0x13c>
    21ea:	20 5c       	subi	r18, 0xC0	; 192
    21ec:	3f 4f       	sbci	r19, 0xFF	; 255
    21ee:	4f 4f       	sbci	r20, 0xFF	; 255
    21f0:	5f 4f       	sbci	r21, 0xFF	; 255
    21f2:	20 78       	andi	r18, 0x80	; 128
    21f4:	2d 87       	std	Y+13, r18	; 0x0d
    21f6:	3e 87       	std	Y+14, r19	; 0x0e
    21f8:	4f 87       	std	Y+15, r20	; 0x0f
    21fa:	58 8b       	std	Y+16, r21	; 0x10
    21fc:	be 01       	movw	r22, r28
    21fe:	67 5f       	subi	r22, 0xF7	; 247
    2200:	7f 4f       	sbci	r23, 0xFF	; 255
    2202:	cb 01       	movw	r24, r22
    2204:	0e 94 b4 12 	call	0x2568	; 0x2568 <__pack_f>
    2208:	68 96       	adiw	r28, 0x18	; 24
    220a:	ea e0       	ldi	r30, 0x0A	; 10
    220c:	0c 94 2e 18 	jmp	0x305c	; 0x305c <__epilogue_restores__+0x10>

00002210 <__gtsf2>:
    2210:	a8 e1       	ldi	r26, 0x18	; 24
    2212:	b0 e0       	ldi	r27, 0x00	; 0
    2214:	ee e0       	ldi	r30, 0x0E	; 14
    2216:	f1 e1       	ldi	r31, 0x11	; 17
    2218:	0c 94 16 18 	jmp	0x302c	; 0x302c <__prologue_saves__+0x18>
    221c:	69 83       	std	Y+1, r22	; 0x01
    221e:	7a 83       	std	Y+2, r23	; 0x02
    2220:	8b 83       	std	Y+3, r24	; 0x03
    2222:	9c 83       	std	Y+4, r25	; 0x04
    2224:	2d 83       	std	Y+5, r18	; 0x05
    2226:	3e 83       	std	Y+6, r19	; 0x06
    2228:	4f 83       	std	Y+7, r20	; 0x07
    222a:	58 87       	std	Y+8, r21	; 0x08
    222c:	89 e0       	ldi	r24, 0x09	; 9
    222e:	e8 2e       	mov	r14, r24
    2230:	f1 2c       	mov	r15, r1
    2232:	ec 0e       	add	r14, r28
    2234:	fd 1e       	adc	r15, r29
    2236:	ce 01       	movw	r24, r28
    2238:	01 96       	adiw	r24, 0x01	; 1
    223a:	b7 01       	movw	r22, r14
    223c:	0e 94 89 13 	call	0x2712	; 0x2712 <__unpack_f>
    2240:	8e 01       	movw	r16, r28
    2242:	0f 5e       	subi	r16, 0xEF	; 239
    2244:	1f 4f       	sbci	r17, 0xFF	; 255
    2246:	ce 01       	movw	r24, r28
    2248:	05 96       	adiw	r24, 0x05	; 5
    224a:	b8 01       	movw	r22, r16
    224c:	0e 94 89 13 	call	0x2712	; 0x2712 <__unpack_f>
    2250:	89 85       	ldd	r24, Y+9	; 0x09
    2252:	82 30       	cpi	r24, 0x02	; 2
    2254:	40 f0       	brcs	.+16     	; 0x2266 <__gtsf2+0x56>
    2256:	89 89       	ldd	r24, Y+17	; 0x11
    2258:	82 30       	cpi	r24, 0x02	; 2
    225a:	28 f0       	brcs	.+10     	; 0x2266 <__gtsf2+0x56>
    225c:	c7 01       	movw	r24, r14
    225e:	b8 01       	movw	r22, r16
    2260:	0e 94 01 14 	call	0x2802	; 0x2802 <__fpcmp_parts_f>
    2264:	01 c0       	rjmp	.+2      	; 0x2268 <__gtsf2+0x58>
    2266:	8f ef       	ldi	r24, 0xFF	; 255
    2268:	68 96       	adiw	r28, 0x18	; 24
    226a:	e6 e0       	ldi	r30, 0x06	; 6
    226c:	0c 94 32 18 	jmp	0x3064	; 0x3064 <__epilogue_restores__+0x18>

00002270 <__gesf2>:
    2270:	a8 e1       	ldi	r26, 0x18	; 24
    2272:	b0 e0       	ldi	r27, 0x00	; 0
    2274:	ee e3       	ldi	r30, 0x3E	; 62
    2276:	f1 e1       	ldi	r31, 0x11	; 17
    2278:	0c 94 16 18 	jmp	0x302c	; 0x302c <__prologue_saves__+0x18>
    227c:	69 83       	std	Y+1, r22	; 0x01
    227e:	7a 83       	std	Y+2, r23	; 0x02
    2280:	8b 83       	std	Y+3, r24	; 0x03
    2282:	9c 83       	std	Y+4, r25	; 0x04
    2284:	2d 83       	std	Y+5, r18	; 0x05
    2286:	3e 83       	std	Y+6, r19	; 0x06
    2288:	4f 83       	std	Y+7, r20	; 0x07
    228a:	58 87       	std	Y+8, r21	; 0x08
    228c:	89 e0       	ldi	r24, 0x09	; 9
    228e:	e8 2e       	mov	r14, r24
    2290:	f1 2c       	mov	r15, r1
    2292:	ec 0e       	add	r14, r28
    2294:	fd 1e       	adc	r15, r29
    2296:	ce 01       	movw	r24, r28
    2298:	01 96       	adiw	r24, 0x01	; 1
    229a:	b7 01       	movw	r22, r14
    229c:	0e 94 89 13 	call	0x2712	; 0x2712 <__unpack_f>
    22a0:	8e 01       	movw	r16, r28
    22a2:	0f 5e       	subi	r16, 0xEF	; 239
    22a4:	1f 4f       	sbci	r17, 0xFF	; 255
    22a6:	ce 01       	movw	r24, r28
    22a8:	05 96       	adiw	r24, 0x05	; 5
    22aa:	b8 01       	movw	r22, r16
    22ac:	0e 94 89 13 	call	0x2712	; 0x2712 <__unpack_f>
    22b0:	89 85       	ldd	r24, Y+9	; 0x09
    22b2:	82 30       	cpi	r24, 0x02	; 2
    22b4:	40 f0       	brcs	.+16     	; 0x22c6 <__gesf2+0x56>
    22b6:	89 89       	ldd	r24, Y+17	; 0x11
    22b8:	82 30       	cpi	r24, 0x02	; 2
    22ba:	28 f0       	brcs	.+10     	; 0x22c6 <__gesf2+0x56>
    22bc:	c7 01       	movw	r24, r14
    22be:	b8 01       	movw	r22, r16
    22c0:	0e 94 01 14 	call	0x2802	; 0x2802 <__fpcmp_parts_f>
    22c4:	01 c0       	rjmp	.+2      	; 0x22c8 <__gesf2+0x58>
    22c6:	8f ef       	ldi	r24, 0xFF	; 255
    22c8:	68 96       	adiw	r28, 0x18	; 24
    22ca:	e6 e0       	ldi	r30, 0x06	; 6
    22cc:	0c 94 32 18 	jmp	0x3064	; 0x3064 <__epilogue_restores__+0x18>

000022d0 <__ltsf2>:
    22d0:	a8 e1       	ldi	r26, 0x18	; 24
    22d2:	b0 e0       	ldi	r27, 0x00	; 0
    22d4:	ee e6       	ldi	r30, 0x6E	; 110
    22d6:	f1 e1       	ldi	r31, 0x11	; 17
    22d8:	0c 94 16 18 	jmp	0x302c	; 0x302c <__prologue_saves__+0x18>
    22dc:	69 83       	std	Y+1, r22	; 0x01
    22de:	7a 83       	std	Y+2, r23	; 0x02
    22e0:	8b 83       	std	Y+3, r24	; 0x03
    22e2:	9c 83       	std	Y+4, r25	; 0x04
    22e4:	2d 83       	std	Y+5, r18	; 0x05
    22e6:	3e 83       	std	Y+6, r19	; 0x06
    22e8:	4f 83       	std	Y+7, r20	; 0x07
    22ea:	58 87       	std	Y+8, r21	; 0x08
    22ec:	89 e0       	ldi	r24, 0x09	; 9
    22ee:	e8 2e       	mov	r14, r24
    22f0:	f1 2c       	mov	r15, r1
    22f2:	ec 0e       	add	r14, r28
    22f4:	fd 1e       	adc	r15, r29
    22f6:	ce 01       	movw	r24, r28
    22f8:	01 96       	adiw	r24, 0x01	; 1
    22fa:	b7 01       	movw	r22, r14
    22fc:	0e 94 89 13 	call	0x2712	; 0x2712 <__unpack_f>
    2300:	8e 01       	movw	r16, r28
    2302:	0f 5e       	subi	r16, 0xEF	; 239
    2304:	1f 4f       	sbci	r17, 0xFF	; 255
    2306:	ce 01       	movw	r24, r28
    2308:	05 96       	adiw	r24, 0x05	; 5
    230a:	b8 01       	movw	r22, r16
    230c:	0e 94 89 13 	call	0x2712	; 0x2712 <__unpack_f>
    2310:	89 85       	ldd	r24, Y+9	; 0x09
    2312:	82 30       	cpi	r24, 0x02	; 2
    2314:	40 f0       	brcs	.+16     	; 0x2326 <__ltsf2+0x56>
    2316:	89 89       	ldd	r24, Y+17	; 0x11
    2318:	82 30       	cpi	r24, 0x02	; 2
    231a:	28 f0       	brcs	.+10     	; 0x2326 <__ltsf2+0x56>
    231c:	c7 01       	movw	r24, r14
    231e:	b8 01       	movw	r22, r16
    2320:	0e 94 01 14 	call	0x2802	; 0x2802 <__fpcmp_parts_f>
    2324:	01 c0       	rjmp	.+2      	; 0x2328 <__ltsf2+0x58>
    2326:	81 e0       	ldi	r24, 0x01	; 1
    2328:	68 96       	adiw	r28, 0x18	; 24
    232a:	e6 e0       	ldi	r30, 0x06	; 6
    232c:	0c 94 32 18 	jmp	0x3064	; 0x3064 <__epilogue_restores__+0x18>

00002330 <__fixsfsi>:
    2330:	ac e0       	ldi	r26, 0x0C	; 12
    2332:	b0 e0       	ldi	r27, 0x00	; 0
    2334:	ee e9       	ldi	r30, 0x9E	; 158
    2336:	f1 e1       	ldi	r31, 0x11	; 17
    2338:	0c 94 1a 18 	jmp	0x3034	; 0x3034 <__prologue_saves__+0x20>
    233c:	69 83       	std	Y+1, r22	; 0x01
    233e:	7a 83       	std	Y+2, r23	; 0x02
    2340:	8b 83       	std	Y+3, r24	; 0x03
    2342:	9c 83       	std	Y+4, r25	; 0x04
    2344:	ce 01       	movw	r24, r28
    2346:	01 96       	adiw	r24, 0x01	; 1
    2348:	be 01       	movw	r22, r28
    234a:	6b 5f       	subi	r22, 0xFB	; 251
    234c:	7f 4f       	sbci	r23, 0xFF	; 255
    234e:	0e 94 89 13 	call	0x2712	; 0x2712 <__unpack_f>
    2352:	8d 81       	ldd	r24, Y+5	; 0x05
    2354:	82 30       	cpi	r24, 0x02	; 2
    2356:	61 f1       	breq	.+88     	; 0x23b0 <__fixsfsi+0x80>
    2358:	82 30       	cpi	r24, 0x02	; 2
    235a:	50 f1       	brcs	.+84     	; 0x23b0 <__fixsfsi+0x80>
    235c:	84 30       	cpi	r24, 0x04	; 4
    235e:	21 f4       	brne	.+8      	; 0x2368 <__fixsfsi+0x38>
    2360:	8e 81       	ldd	r24, Y+6	; 0x06
    2362:	88 23       	and	r24, r24
    2364:	51 f1       	breq	.+84     	; 0x23ba <__fixsfsi+0x8a>
    2366:	2e c0       	rjmp	.+92     	; 0x23c4 <__fixsfsi+0x94>
    2368:	2f 81       	ldd	r18, Y+7	; 0x07
    236a:	38 85       	ldd	r19, Y+8	; 0x08
    236c:	37 fd       	sbrc	r19, 7
    236e:	20 c0       	rjmp	.+64     	; 0x23b0 <__fixsfsi+0x80>
    2370:	6e 81       	ldd	r22, Y+6	; 0x06
    2372:	2f 31       	cpi	r18, 0x1F	; 31
    2374:	31 05       	cpc	r19, r1
    2376:	1c f0       	brlt	.+6      	; 0x237e <__fixsfsi+0x4e>
    2378:	66 23       	and	r22, r22
    237a:	f9 f0       	breq	.+62     	; 0x23ba <__fixsfsi+0x8a>
    237c:	23 c0       	rjmp	.+70     	; 0x23c4 <__fixsfsi+0x94>
    237e:	8e e1       	ldi	r24, 0x1E	; 30
    2380:	90 e0       	ldi	r25, 0x00	; 0
    2382:	82 1b       	sub	r24, r18
    2384:	93 0b       	sbc	r25, r19
    2386:	29 85       	ldd	r18, Y+9	; 0x09
    2388:	3a 85       	ldd	r19, Y+10	; 0x0a
    238a:	4b 85       	ldd	r20, Y+11	; 0x0b
    238c:	5c 85       	ldd	r21, Y+12	; 0x0c
    238e:	04 c0       	rjmp	.+8      	; 0x2398 <__fixsfsi+0x68>
    2390:	56 95       	lsr	r21
    2392:	47 95       	ror	r20
    2394:	37 95       	ror	r19
    2396:	27 95       	ror	r18
    2398:	8a 95       	dec	r24
    239a:	d2 f7       	brpl	.-12     	; 0x2390 <__fixsfsi+0x60>
    239c:	66 23       	and	r22, r22
    239e:	b1 f0       	breq	.+44     	; 0x23cc <__fixsfsi+0x9c>
    23a0:	50 95       	com	r21
    23a2:	40 95       	com	r20
    23a4:	30 95       	com	r19
    23a6:	21 95       	neg	r18
    23a8:	3f 4f       	sbci	r19, 0xFF	; 255
    23aa:	4f 4f       	sbci	r20, 0xFF	; 255
    23ac:	5f 4f       	sbci	r21, 0xFF	; 255
    23ae:	0e c0       	rjmp	.+28     	; 0x23cc <__fixsfsi+0x9c>
    23b0:	20 e0       	ldi	r18, 0x00	; 0
    23b2:	30 e0       	ldi	r19, 0x00	; 0
    23b4:	40 e0       	ldi	r20, 0x00	; 0
    23b6:	50 e0       	ldi	r21, 0x00	; 0
    23b8:	09 c0       	rjmp	.+18     	; 0x23cc <__fixsfsi+0x9c>
    23ba:	2f ef       	ldi	r18, 0xFF	; 255
    23bc:	3f ef       	ldi	r19, 0xFF	; 255
    23be:	4f ef       	ldi	r20, 0xFF	; 255
    23c0:	5f e7       	ldi	r21, 0x7F	; 127
    23c2:	04 c0       	rjmp	.+8      	; 0x23cc <__fixsfsi+0x9c>
    23c4:	20 e0       	ldi	r18, 0x00	; 0
    23c6:	30 e0       	ldi	r19, 0x00	; 0
    23c8:	40 e0       	ldi	r20, 0x00	; 0
    23ca:	50 e8       	ldi	r21, 0x80	; 128
    23cc:	b9 01       	movw	r22, r18
    23ce:	ca 01       	movw	r24, r20
    23d0:	2c 96       	adiw	r28, 0x0c	; 12
    23d2:	e2 e0       	ldi	r30, 0x02	; 2
    23d4:	0c 94 36 18 	jmp	0x306c	; 0x306c <__epilogue_restores__+0x20>

000023d8 <__floatunsisf>:
    23d8:	a8 e0       	ldi	r26, 0x08	; 8
    23da:	b0 e0       	ldi	r27, 0x00	; 0
    23dc:	e2 ef       	ldi	r30, 0xF2	; 242
    23de:	f1 e1       	ldi	r31, 0x11	; 17
    23e0:	0c 94 12 18 	jmp	0x3024	; 0x3024 <__prologue_saves__+0x10>
    23e4:	7b 01       	movw	r14, r22
    23e6:	8c 01       	movw	r16, r24
    23e8:	61 15       	cp	r22, r1
    23ea:	71 05       	cpc	r23, r1
    23ec:	81 05       	cpc	r24, r1
    23ee:	91 05       	cpc	r25, r1
    23f0:	19 f4       	brne	.+6      	; 0x23f8 <__floatunsisf+0x20>
    23f2:	82 e0       	ldi	r24, 0x02	; 2
    23f4:	89 83       	std	Y+1, r24	; 0x01
    23f6:	60 c0       	rjmp	.+192    	; 0x24b8 <__floatunsisf+0xe0>
    23f8:	83 e0       	ldi	r24, 0x03	; 3
    23fa:	89 83       	std	Y+1, r24	; 0x01
    23fc:	8e e1       	ldi	r24, 0x1E	; 30
    23fe:	c8 2e       	mov	r12, r24
    2400:	d1 2c       	mov	r13, r1
    2402:	dc 82       	std	Y+4, r13	; 0x04
    2404:	cb 82       	std	Y+3, r12	; 0x03
    2406:	ed 82       	std	Y+5, r14	; 0x05
    2408:	fe 82       	std	Y+6, r15	; 0x06
    240a:	0f 83       	std	Y+7, r16	; 0x07
    240c:	18 87       	std	Y+8, r17	; 0x08
    240e:	c8 01       	movw	r24, r16
    2410:	b7 01       	movw	r22, r14
    2412:	0e 94 65 12 	call	0x24ca	; 0x24ca <__clzsi2>
    2416:	fc 01       	movw	r30, r24
    2418:	31 97       	sbiw	r30, 0x01	; 1
    241a:	f7 ff       	sbrs	r31, 7
    241c:	3b c0       	rjmp	.+118    	; 0x2494 <__floatunsisf+0xbc>
    241e:	22 27       	eor	r18, r18
    2420:	33 27       	eor	r19, r19
    2422:	2e 1b       	sub	r18, r30
    2424:	3f 0b       	sbc	r19, r31
    2426:	57 01       	movw	r10, r14
    2428:	68 01       	movw	r12, r16
    242a:	02 2e       	mov	r0, r18
    242c:	04 c0       	rjmp	.+8      	; 0x2436 <__floatunsisf+0x5e>
    242e:	d6 94       	lsr	r13
    2430:	c7 94       	ror	r12
    2432:	b7 94       	ror	r11
    2434:	a7 94       	ror	r10
    2436:	0a 94       	dec	r0
    2438:	d2 f7       	brpl	.-12     	; 0x242e <__floatunsisf+0x56>
    243a:	40 e0       	ldi	r20, 0x00	; 0
    243c:	50 e0       	ldi	r21, 0x00	; 0
    243e:	60 e0       	ldi	r22, 0x00	; 0
    2440:	70 e0       	ldi	r23, 0x00	; 0
    2442:	81 e0       	ldi	r24, 0x01	; 1
    2444:	90 e0       	ldi	r25, 0x00	; 0
    2446:	a0 e0       	ldi	r26, 0x00	; 0
    2448:	b0 e0       	ldi	r27, 0x00	; 0
    244a:	04 c0       	rjmp	.+8      	; 0x2454 <__floatunsisf+0x7c>
    244c:	88 0f       	add	r24, r24
    244e:	99 1f       	adc	r25, r25
    2450:	aa 1f       	adc	r26, r26
    2452:	bb 1f       	adc	r27, r27
    2454:	2a 95       	dec	r18
    2456:	d2 f7       	brpl	.-12     	; 0x244c <__floatunsisf+0x74>
    2458:	01 97       	sbiw	r24, 0x01	; 1
    245a:	a1 09       	sbc	r26, r1
    245c:	b1 09       	sbc	r27, r1
    245e:	8e 21       	and	r24, r14
    2460:	9f 21       	and	r25, r15
    2462:	a0 23       	and	r26, r16
    2464:	b1 23       	and	r27, r17
    2466:	00 97       	sbiw	r24, 0x00	; 0
    2468:	a1 05       	cpc	r26, r1
    246a:	b1 05       	cpc	r27, r1
    246c:	21 f0       	breq	.+8      	; 0x2476 <__floatunsisf+0x9e>
    246e:	41 e0       	ldi	r20, 0x01	; 1
    2470:	50 e0       	ldi	r21, 0x00	; 0
    2472:	60 e0       	ldi	r22, 0x00	; 0
    2474:	70 e0       	ldi	r23, 0x00	; 0
    2476:	4a 29       	or	r20, r10
    2478:	5b 29       	or	r21, r11
    247a:	6c 29       	or	r22, r12
    247c:	7d 29       	or	r23, r13
    247e:	4d 83       	std	Y+5, r20	; 0x05
    2480:	5e 83       	std	Y+6, r21	; 0x06
    2482:	6f 83       	std	Y+7, r22	; 0x07
    2484:	78 87       	std	Y+8, r23	; 0x08
    2486:	8e e1       	ldi	r24, 0x1E	; 30
    2488:	90 e0       	ldi	r25, 0x00	; 0
    248a:	8e 1b       	sub	r24, r30
    248c:	9f 0b       	sbc	r25, r31
    248e:	9c 83       	std	Y+4, r25	; 0x04
    2490:	8b 83       	std	Y+3, r24	; 0x03
    2492:	12 c0       	rjmp	.+36     	; 0x24b8 <__floatunsisf+0xe0>
    2494:	30 97       	sbiw	r30, 0x00	; 0
    2496:	81 f0       	breq	.+32     	; 0x24b8 <__floatunsisf+0xe0>
    2498:	0e 2e       	mov	r0, r30
    249a:	04 c0       	rjmp	.+8      	; 0x24a4 <__floatunsisf+0xcc>
    249c:	ee 0c       	add	r14, r14
    249e:	ff 1c       	adc	r15, r15
    24a0:	00 1f       	adc	r16, r16
    24a2:	11 1f       	adc	r17, r17
    24a4:	0a 94       	dec	r0
    24a6:	d2 f7       	brpl	.-12     	; 0x249c <__floatunsisf+0xc4>
    24a8:	ed 82       	std	Y+5, r14	; 0x05
    24aa:	fe 82       	std	Y+6, r15	; 0x06
    24ac:	0f 83       	std	Y+7, r16	; 0x07
    24ae:	18 87       	std	Y+8, r17	; 0x08
    24b0:	ce 1a       	sub	r12, r30
    24b2:	df 0a       	sbc	r13, r31
    24b4:	dc 82       	std	Y+4, r13	; 0x04
    24b6:	cb 82       	std	Y+3, r12	; 0x03
    24b8:	1a 82       	std	Y+2, r1	; 0x02
    24ba:	ce 01       	movw	r24, r28
    24bc:	01 96       	adiw	r24, 0x01	; 1
    24be:	0e 94 b4 12 	call	0x2568	; 0x2568 <__pack_f>
    24c2:	28 96       	adiw	r28, 0x08	; 8
    24c4:	ea e0       	ldi	r30, 0x0A	; 10
    24c6:	0c 94 2e 18 	jmp	0x305c	; 0x305c <__epilogue_restores__+0x10>

000024ca <__clzsi2>:
    24ca:	ef 92       	push	r14
    24cc:	ff 92       	push	r15
    24ce:	0f 93       	push	r16
    24d0:	1f 93       	push	r17
    24d2:	7b 01       	movw	r14, r22
    24d4:	8c 01       	movw	r16, r24
    24d6:	80 e0       	ldi	r24, 0x00	; 0
    24d8:	e8 16       	cp	r14, r24
    24da:	80 e0       	ldi	r24, 0x00	; 0
    24dc:	f8 06       	cpc	r15, r24
    24de:	81 e0       	ldi	r24, 0x01	; 1
    24e0:	08 07       	cpc	r16, r24
    24e2:	80 e0       	ldi	r24, 0x00	; 0
    24e4:	18 07       	cpc	r17, r24
    24e6:	88 f4       	brcc	.+34     	; 0x250a <__clzsi2+0x40>
    24e8:	8f ef       	ldi	r24, 0xFF	; 255
    24ea:	e8 16       	cp	r14, r24
    24ec:	f1 04       	cpc	r15, r1
    24ee:	01 05       	cpc	r16, r1
    24f0:	11 05       	cpc	r17, r1
    24f2:	31 f0       	breq	.+12     	; 0x2500 <__clzsi2+0x36>
    24f4:	28 f0       	brcs	.+10     	; 0x2500 <__clzsi2+0x36>
    24f6:	88 e0       	ldi	r24, 0x08	; 8
    24f8:	90 e0       	ldi	r25, 0x00	; 0
    24fa:	a0 e0       	ldi	r26, 0x00	; 0
    24fc:	b0 e0       	ldi	r27, 0x00	; 0
    24fe:	17 c0       	rjmp	.+46     	; 0x252e <__clzsi2+0x64>
    2500:	80 e0       	ldi	r24, 0x00	; 0
    2502:	90 e0       	ldi	r25, 0x00	; 0
    2504:	a0 e0       	ldi	r26, 0x00	; 0
    2506:	b0 e0       	ldi	r27, 0x00	; 0
    2508:	12 c0       	rjmp	.+36     	; 0x252e <__clzsi2+0x64>
    250a:	80 e0       	ldi	r24, 0x00	; 0
    250c:	e8 16       	cp	r14, r24
    250e:	80 e0       	ldi	r24, 0x00	; 0
    2510:	f8 06       	cpc	r15, r24
    2512:	80 e0       	ldi	r24, 0x00	; 0
    2514:	08 07       	cpc	r16, r24
    2516:	81 e0       	ldi	r24, 0x01	; 1
    2518:	18 07       	cpc	r17, r24
    251a:	28 f0       	brcs	.+10     	; 0x2526 <__clzsi2+0x5c>
    251c:	88 e1       	ldi	r24, 0x18	; 24
    251e:	90 e0       	ldi	r25, 0x00	; 0
    2520:	a0 e0       	ldi	r26, 0x00	; 0
    2522:	b0 e0       	ldi	r27, 0x00	; 0
    2524:	04 c0       	rjmp	.+8      	; 0x252e <__clzsi2+0x64>
    2526:	80 e1       	ldi	r24, 0x10	; 16
    2528:	90 e0       	ldi	r25, 0x00	; 0
    252a:	a0 e0       	ldi	r26, 0x00	; 0
    252c:	b0 e0       	ldi	r27, 0x00	; 0
    252e:	20 e2       	ldi	r18, 0x20	; 32
    2530:	30 e0       	ldi	r19, 0x00	; 0
    2532:	40 e0       	ldi	r20, 0x00	; 0
    2534:	50 e0       	ldi	r21, 0x00	; 0
    2536:	28 1b       	sub	r18, r24
    2538:	39 0b       	sbc	r19, r25
    253a:	4a 0b       	sbc	r20, r26
    253c:	5b 0b       	sbc	r21, r27
    253e:	04 c0       	rjmp	.+8      	; 0x2548 <__clzsi2+0x7e>
    2540:	16 95       	lsr	r17
    2542:	07 95       	ror	r16
    2544:	f7 94       	ror	r15
    2546:	e7 94       	ror	r14
    2548:	8a 95       	dec	r24
    254a:	d2 f7       	brpl	.-12     	; 0x2540 <__clzsi2+0x76>
    254c:	f7 01       	movw	r30, r14
    254e:	e9 5d       	subi	r30, 0xD9	; 217
    2550:	fe 4f       	sbci	r31, 0xFE	; 254
    2552:	80 81       	ld	r24, Z
    2554:	28 1b       	sub	r18, r24
    2556:	31 09       	sbc	r19, r1
    2558:	41 09       	sbc	r20, r1
    255a:	51 09       	sbc	r21, r1
    255c:	c9 01       	movw	r24, r18
    255e:	1f 91       	pop	r17
    2560:	0f 91       	pop	r16
    2562:	ff 90       	pop	r15
    2564:	ef 90       	pop	r14
    2566:	08 95       	ret

00002568 <__pack_f>:
    2568:	df 92       	push	r13
    256a:	ef 92       	push	r14
    256c:	ff 92       	push	r15
    256e:	0f 93       	push	r16
    2570:	1f 93       	push	r17
    2572:	fc 01       	movw	r30, r24
    2574:	e4 80       	ldd	r14, Z+4	; 0x04
    2576:	f5 80       	ldd	r15, Z+5	; 0x05
    2578:	06 81       	ldd	r16, Z+6	; 0x06
    257a:	17 81       	ldd	r17, Z+7	; 0x07
    257c:	d1 80       	ldd	r13, Z+1	; 0x01
    257e:	80 81       	ld	r24, Z
    2580:	82 30       	cpi	r24, 0x02	; 2
    2582:	48 f4       	brcc	.+18     	; 0x2596 <__pack_f+0x2e>
    2584:	80 e0       	ldi	r24, 0x00	; 0
    2586:	90 e0       	ldi	r25, 0x00	; 0
    2588:	a0 e1       	ldi	r26, 0x10	; 16
    258a:	b0 e0       	ldi	r27, 0x00	; 0
    258c:	e8 2a       	or	r14, r24
    258e:	f9 2a       	or	r15, r25
    2590:	0a 2b       	or	r16, r26
    2592:	1b 2b       	or	r17, r27
    2594:	a5 c0       	rjmp	.+330    	; 0x26e0 <__pack_f+0x178>
    2596:	84 30       	cpi	r24, 0x04	; 4
    2598:	09 f4       	brne	.+2      	; 0x259c <__pack_f+0x34>
    259a:	9f c0       	rjmp	.+318    	; 0x26da <__pack_f+0x172>
    259c:	82 30       	cpi	r24, 0x02	; 2
    259e:	21 f4       	brne	.+8      	; 0x25a8 <__pack_f+0x40>
    25a0:	ee 24       	eor	r14, r14
    25a2:	ff 24       	eor	r15, r15
    25a4:	87 01       	movw	r16, r14
    25a6:	05 c0       	rjmp	.+10     	; 0x25b2 <__pack_f+0x4a>
    25a8:	e1 14       	cp	r14, r1
    25aa:	f1 04       	cpc	r15, r1
    25ac:	01 05       	cpc	r16, r1
    25ae:	11 05       	cpc	r17, r1
    25b0:	19 f4       	brne	.+6      	; 0x25b8 <__pack_f+0x50>
    25b2:	e0 e0       	ldi	r30, 0x00	; 0
    25b4:	f0 e0       	ldi	r31, 0x00	; 0
    25b6:	96 c0       	rjmp	.+300    	; 0x26e4 <__pack_f+0x17c>
    25b8:	62 81       	ldd	r22, Z+2	; 0x02
    25ba:	73 81       	ldd	r23, Z+3	; 0x03
    25bc:	9f ef       	ldi	r25, 0xFF	; 255
    25be:	62 38       	cpi	r22, 0x82	; 130
    25c0:	79 07       	cpc	r23, r25
    25c2:	0c f0       	brlt	.+2      	; 0x25c6 <__pack_f+0x5e>
    25c4:	5b c0       	rjmp	.+182    	; 0x267c <__pack_f+0x114>
    25c6:	22 e8       	ldi	r18, 0x82	; 130
    25c8:	3f ef       	ldi	r19, 0xFF	; 255
    25ca:	26 1b       	sub	r18, r22
    25cc:	37 0b       	sbc	r19, r23
    25ce:	2a 31       	cpi	r18, 0x1A	; 26
    25d0:	31 05       	cpc	r19, r1
    25d2:	2c f0       	brlt	.+10     	; 0x25de <__pack_f+0x76>
    25d4:	20 e0       	ldi	r18, 0x00	; 0
    25d6:	30 e0       	ldi	r19, 0x00	; 0
    25d8:	40 e0       	ldi	r20, 0x00	; 0
    25da:	50 e0       	ldi	r21, 0x00	; 0
    25dc:	2a c0       	rjmp	.+84     	; 0x2632 <__pack_f+0xca>
    25de:	b8 01       	movw	r22, r16
    25e0:	a7 01       	movw	r20, r14
    25e2:	02 2e       	mov	r0, r18
    25e4:	04 c0       	rjmp	.+8      	; 0x25ee <__pack_f+0x86>
    25e6:	76 95       	lsr	r23
    25e8:	67 95       	ror	r22
    25ea:	57 95       	ror	r21
    25ec:	47 95       	ror	r20
    25ee:	0a 94       	dec	r0
    25f0:	d2 f7       	brpl	.-12     	; 0x25e6 <__pack_f+0x7e>
    25f2:	81 e0       	ldi	r24, 0x01	; 1
    25f4:	90 e0       	ldi	r25, 0x00	; 0
    25f6:	a0 e0       	ldi	r26, 0x00	; 0
    25f8:	b0 e0       	ldi	r27, 0x00	; 0
    25fa:	04 c0       	rjmp	.+8      	; 0x2604 <__pack_f+0x9c>
    25fc:	88 0f       	add	r24, r24
    25fe:	99 1f       	adc	r25, r25
    2600:	aa 1f       	adc	r26, r26
    2602:	bb 1f       	adc	r27, r27
    2604:	2a 95       	dec	r18
    2606:	d2 f7       	brpl	.-12     	; 0x25fc <__pack_f+0x94>
    2608:	01 97       	sbiw	r24, 0x01	; 1
    260a:	a1 09       	sbc	r26, r1
    260c:	b1 09       	sbc	r27, r1
    260e:	8e 21       	and	r24, r14
    2610:	9f 21       	and	r25, r15
    2612:	a0 23       	and	r26, r16
    2614:	b1 23       	and	r27, r17
    2616:	00 97       	sbiw	r24, 0x00	; 0
    2618:	a1 05       	cpc	r26, r1
    261a:	b1 05       	cpc	r27, r1
    261c:	21 f0       	breq	.+8      	; 0x2626 <__pack_f+0xbe>
    261e:	81 e0       	ldi	r24, 0x01	; 1
    2620:	90 e0       	ldi	r25, 0x00	; 0
    2622:	a0 e0       	ldi	r26, 0x00	; 0
    2624:	b0 e0       	ldi	r27, 0x00	; 0
    2626:	9a 01       	movw	r18, r20
    2628:	ab 01       	movw	r20, r22
    262a:	28 2b       	or	r18, r24
    262c:	39 2b       	or	r19, r25
    262e:	4a 2b       	or	r20, r26
    2630:	5b 2b       	or	r21, r27
    2632:	da 01       	movw	r26, r20
    2634:	c9 01       	movw	r24, r18
    2636:	8f 77       	andi	r24, 0x7F	; 127
    2638:	90 70       	andi	r25, 0x00	; 0
    263a:	a0 70       	andi	r26, 0x00	; 0
    263c:	b0 70       	andi	r27, 0x00	; 0
    263e:	80 34       	cpi	r24, 0x40	; 64
    2640:	91 05       	cpc	r25, r1
    2642:	a1 05       	cpc	r26, r1
    2644:	b1 05       	cpc	r27, r1
    2646:	39 f4       	brne	.+14     	; 0x2656 <__pack_f+0xee>
    2648:	27 ff       	sbrs	r18, 7
    264a:	09 c0       	rjmp	.+18     	; 0x265e <__pack_f+0xf6>
    264c:	20 5c       	subi	r18, 0xC0	; 192
    264e:	3f 4f       	sbci	r19, 0xFF	; 255
    2650:	4f 4f       	sbci	r20, 0xFF	; 255
    2652:	5f 4f       	sbci	r21, 0xFF	; 255
    2654:	04 c0       	rjmp	.+8      	; 0x265e <__pack_f+0xf6>
    2656:	21 5c       	subi	r18, 0xC1	; 193
    2658:	3f 4f       	sbci	r19, 0xFF	; 255
    265a:	4f 4f       	sbci	r20, 0xFF	; 255
    265c:	5f 4f       	sbci	r21, 0xFF	; 255
    265e:	e0 e0       	ldi	r30, 0x00	; 0
    2660:	f0 e0       	ldi	r31, 0x00	; 0
    2662:	20 30       	cpi	r18, 0x00	; 0
    2664:	a0 e0       	ldi	r26, 0x00	; 0
    2666:	3a 07       	cpc	r19, r26
    2668:	a0 e0       	ldi	r26, 0x00	; 0
    266a:	4a 07       	cpc	r20, r26
    266c:	a0 e4       	ldi	r26, 0x40	; 64
    266e:	5a 07       	cpc	r21, r26
    2670:	10 f0       	brcs	.+4      	; 0x2676 <__pack_f+0x10e>
    2672:	e1 e0       	ldi	r30, 0x01	; 1
    2674:	f0 e0       	ldi	r31, 0x00	; 0
    2676:	79 01       	movw	r14, r18
    2678:	8a 01       	movw	r16, r20
    267a:	27 c0       	rjmp	.+78     	; 0x26ca <__pack_f+0x162>
    267c:	60 38       	cpi	r22, 0x80	; 128
    267e:	71 05       	cpc	r23, r1
    2680:	64 f5       	brge	.+88     	; 0x26da <__pack_f+0x172>
    2682:	fb 01       	movw	r30, r22
    2684:	e1 58       	subi	r30, 0x81	; 129
    2686:	ff 4f       	sbci	r31, 0xFF	; 255
    2688:	d8 01       	movw	r26, r16
    268a:	c7 01       	movw	r24, r14
    268c:	8f 77       	andi	r24, 0x7F	; 127
    268e:	90 70       	andi	r25, 0x00	; 0
    2690:	a0 70       	andi	r26, 0x00	; 0
    2692:	b0 70       	andi	r27, 0x00	; 0
    2694:	80 34       	cpi	r24, 0x40	; 64
    2696:	91 05       	cpc	r25, r1
    2698:	a1 05       	cpc	r26, r1
    269a:	b1 05       	cpc	r27, r1
    269c:	39 f4       	brne	.+14     	; 0x26ac <__pack_f+0x144>
    269e:	e7 fe       	sbrs	r14, 7
    26a0:	0d c0       	rjmp	.+26     	; 0x26bc <__pack_f+0x154>
    26a2:	80 e4       	ldi	r24, 0x40	; 64
    26a4:	90 e0       	ldi	r25, 0x00	; 0
    26a6:	a0 e0       	ldi	r26, 0x00	; 0
    26a8:	b0 e0       	ldi	r27, 0x00	; 0
    26aa:	04 c0       	rjmp	.+8      	; 0x26b4 <__pack_f+0x14c>
    26ac:	8f e3       	ldi	r24, 0x3F	; 63
    26ae:	90 e0       	ldi	r25, 0x00	; 0
    26b0:	a0 e0       	ldi	r26, 0x00	; 0
    26b2:	b0 e0       	ldi	r27, 0x00	; 0
    26b4:	e8 0e       	add	r14, r24
    26b6:	f9 1e       	adc	r15, r25
    26b8:	0a 1f       	adc	r16, r26
    26ba:	1b 1f       	adc	r17, r27
    26bc:	17 ff       	sbrs	r17, 7
    26be:	05 c0       	rjmp	.+10     	; 0x26ca <__pack_f+0x162>
    26c0:	16 95       	lsr	r17
    26c2:	07 95       	ror	r16
    26c4:	f7 94       	ror	r15
    26c6:	e7 94       	ror	r14
    26c8:	31 96       	adiw	r30, 0x01	; 1
    26ca:	87 e0       	ldi	r24, 0x07	; 7
    26cc:	16 95       	lsr	r17
    26ce:	07 95       	ror	r16
    26d0:	f7 94       	ror	r15
    26d2:	e7 94       	ror	r14
    26d4:	8a 95       	dec	r24
    26d6:	d1 f7       	brne	.-12     	; 0x26cc <__pack_f+0x164>
    26d8:	05 c0       	rjmp	.+10     	; 0x26e4 <__pack_f+0x17c>
    26da:	ee 24       	eor	r14, r14
    26dc:	ff 24       	eor	r15, r15
    26de:	87 01       	movw	r16, r14
    26e0:	ef ef       	ldi	r30, 0xFF	; 255
    26e2:	f0 e0       	ldi	r31, 0x00	; 0
    26e4:	6e 2f       	mov	r22, r30
    26e6:	67 95       	ror	r22
    26e8:	66 27       	eor	r22, r22
    26ea:	67 95       	ror	r22
    26ec:	90 2f       	mov	r25, r16
    26ee:	9f 77       	andi	r25, 0x7F	; 127
    26f0:	d7 94       	ror	r13
    26f2:	dd 24       	eor	r13, r13
    26f4:	d7 94       	ror	r13
    26f6:	8e 2f       	mov	r24, r30
    26f8:	86 95       	lsr	r24
    26fa:	49 2f       	mov	r20, r25
    26fc:	46 2b       	or	r20, r22
    26fe:	58 2f       	mov	r21, r24
    2700:	5d 29       	or	r21, r13
    2702:	b7 01       	movw	r22, r14
    2704:	ca 01       	movw	r24, r20
    2706:	1f 91       	pop	r17
    2708:	0f 91       	pop	r16
    270a:	ff 90       	pop	r15
    270c:	ef 90       	pop	r14
    270e:	df 90       	pop	r13
    2710:	08 95       	ret

00002712 <__unpack_f>:
    2712:	fc 01       	movw	r30, r24
    2714:	db 01       	movw	r26, r22
    2716:	40 81       	ld	r20, Z
    2718:	51 81       	ldd	r21, Z+1	; 0x01
    271a:	22 81       	ldd	r18, Z+2	; 0x02
    271c:	62 2f       	mov	r22, r18
    271e:	6f 77       	andi	r22, 0x7F	; 127
    2720:	70 e0       	ldi	r23, 0x00	; 0
    2722:	22 1f       	adc	r18, r18
    2724:	22 27       	eor	r18, r18
    2726:	22 1f       	adc	r18, r18
    2728:	93 81       	ldd	r25, Z+3	; 0x03
    272a:	89 2f       	mov	r24, r25
    272c:	88 0f       	add	r24, r24
    272e:	82 2b       	or	r24, r18
    2730:	28 2f       	mov	r18, r24
    2732:	30 e0       	ldi	r19, 0x00	; 0
    2734:	99 1f       	adc	r25, r25
    2736:	99 27       	eor	r25, r25
    2738:	99 1f       	adc	r25, r25
    273a:	11 96       	adiw	r26, 0x01	; 1
    273c:	9c 93       	st	X, r25
    273e:	11 97       	sbiw	r26, 0x01	; 1
    2740:	21 15       	cp	r18, r1
    2742:	31 05       	cpc	r19, r1
    2744:	a9 f5       	brne	.+106    	; 0x27b0 <__unpack_f+0x9e>
    2746:	41 15       	cp	r20, r1
    2748:	51 05       	cpc	r21, r1
    274a:	61 05       	cpc	r22, r1
    274c:	71 05       	cpc	r23, r1
    274e:	11 f4       	brne	.+4      	; 0x2754 <__unpack_f+0x42>
    2750:	82 e0       	ldi	r24, 0x02	; 2
    2752:	37 c0       	rjmp	.+110    	; 0x27c2 <__unpack_f+0xb0>
    2754:	82 e8       	ldi	r24, 0x82	; 130
    2756:	9f ef       	ldi	r25, 0xFF	; 255
    2758:	13 96       	adiw	r26, 0x03	; 3
    275a:	9c 93       	st	X, r25
    275c:	8e 93       	st	-X, r24
    275e:	12 97       	sbiw	r26, 0x02	; 2
    2760:	9a 01       	movw	r18, r20
    2762:	ab 01       	movw	r20, r22
    2764:	67 e0       	ldi	r22, 0x07	; 7
    2766:	22 0f       	add	r18, r18
    2768:	33 1f       	adc	r19, r19
    276a:	44 1f       	adc	r20, r20
    276c:	55 1f       	adc	r21, r21
    276e:	6a 95       	dec	r22
    2770:	d1 f7       	brne	.-12     	; 0x2766 <__unpack_f+0x54>
    2772:	83 e0       	ldi	r24, 0x03	; 3
    2774:	8c 93       	st	X, r24
    2776:	0d c0       	rjmp	.+26     	; 0x2792 <__unpack_f+0x80>
    2778:	22 0f       	add	r18, r18
    277a:	33 1f       	adc	r19, r19
    277c:	44 1f       	adc	r20, r20
    277e:	55 1f       	adc	r21, r21
    2780:	12 96       	adiw	r26, 0x02	; 2
    2782:	8d 91       	ld	r24, X+
    2784:	9c 91       	ld	r25, X
    2786:	13 97       	sbiw	r26, 0x03	; 3
    2788:	01 97       	sbiw	r24, 0x01	; 1
    278a:	13 96       	adiw	r26, 0x03	; 3
    278c:	9c 93       	st	X, r25
    278e:	8e 93       	st	-X, r24
    2790:	12 97       	sbiw	r26, 0x02	; 2
    2792:	20 30       	cpi	r18, 0x00	; 0
    2794:	80 e0       	ldi	r24, 0x00	; 0
    2796:	38 07       	cpc	r19, r24
    2798:	80 e0       	ldi	r24, 0x00	; 0
    279a:	48 07       	cpc	r20, r24
    279c:	80 e4       	ldi	r24, 0x40	; 64
    279e:	58 07       	cpc	r21, r24
    27a0:	58 f3       	brcs	.-42     	; 0x2778 <__unpack_f+0x66>
    27a2:	14 96       	adiw	r26, 0x04	; 4
    27a4:	2d 93       	st	X+, r18
    27a6:	3d 93       	st	X+, r19
    27a8:	4d 93       	st	X+, r20
    27aa:	5c 93       	st	X, r21
    27ac:	17 97       	sbiw	r26, 0x07	; 7
    27ae:	08 95       	ret
    27b0:	2f 3f       	cpi	r18, 0xFF	; 255
    27b2:	31 05       	cpc	r19, r1
    27b4:	79 f4       	brne	.+30     	; 0x27d4 <__unpack_f+0xc2>
    27b6:	41 15       	cp	r20, r1
    27b8:	51 05       	cpc	r21, r1
    27ba:	61 05       	cpc	r22, r1
    27bc:	71 05       	cpc	r23, r1
    27be:	19 f4       	brne	.+6      	; 0x27c6 <__unpack_f+0xb4>
    27c0:	84 e0       	ldi	r24, 0x04	; 4
    27c2:	8c 93       	st	X, r24
    27c4:	08 95       	ret
    27c6:	64 ff       	sbrs	r22, 4
    27c8:	03 c0       	rjmp	.+6      	; 0x27d0 <__unpack_f+0xbe>
    27ca:	81 e0       	ldi	r24, 0x01	; 1
    27cc:	8c 93       	st	X, r24
    27ce:	12 c0       	rjmp	.+36     	; 0x27f4 <__unpack_f+0xe2>
    27d0:	1c 92       	st	X, r1
    27d2:	10 c0       	rjmp	.+32     	; 0x27f4 <__unpack_f+0xe2>
    27d4:	2f 57       	subi	r18, 0x7F	; 127
    27d6:	30 40       	sbci	r19, 0x00	; 0
    27d8:	13 96       	adiw	r26, 0x03	; 3
    27da:	3c 93       	st	X, r19
    27dc:	2e 93       	st	-X, r18
    27de:	12 97       	sbiw	r26, 0x02	; 2
    27e0:	83 e0       	ldi	r24, 0x03	; 3
    27e2:	8c 93       	st	X, r24
    27e4:	87 e0       	ldi	r24, 0x07	; 7
    27e6:	44 0f       	add	r20, r20
    27e8:	55 1f       	adc	r21, r21
    27ea:	66 1f       	adc	r22, r22
    27ec:	77 1f       	adc	r23, r23
    27ee:	8a 95       	dec	r24
    27f0:	d1 f7       	brne	.-12     	; 0x27e6 <__unpack_f+0xd4>
    27f2:	70 64       	ori	r23, 0x40	; 64
    27f4:	14 96       	adiw	r26, 0x04	; 4
    27f6:	4d 93       	st	X+, r20
    27f8:	5d 93       	st	X+, r21
    27fa:	6d 93       	st	X+, r22
    27fc:	7c 93       	st	X, r23
    27fe:	17 97       	sbiw	r26, 0x07	; 7
    2800:	08 95       	ret

00002802 <__fpcmp_parts_f>:
    2802:	1f 93       	push	r17
    2804:	dc 01       	movw	r26, r24
    2806:	fb 01       	movw	r30, r22
    2808:	9c 91       	ld	r25, X
    280a:	92 30       	cpi	r25, 0x02	; 2
    280c:	08 f4       	brcc	.+2      	; 0x2810 <__fpcmp_parts_f+0xe>
    280e:	47 c0       	rjmp	.+142    	; 0x289e <__fpcmp_parts_f+0x9c>
    2810:	80 81       	ld	r24, Z
    2812:	82 30       	cpi	r24, 0x02	; 2
    2814:	08 f4       	brcc	.+2      	; 0x2818 <__fpcmp_parts_f+0x16>
    2816:	43 c0       	rjmp	.+134    	; 0x289e <__fpcmp_parts_f+0x9c>
    2818:	94 30       	cpi	r25, 0x04	; 4
    281a:	51 f4       	brne	.+20     	; 0x2830 <__fpcmp_parts_f+0x2e>
    281c:	11 96       	adiw	r26, 0x01	; 1
    281e:	1c 91       	ld	r17, X
    2820:	84 30       	cpi	r24, 0x04	; 4
    2822:	99 f5       	brne	.+102    	; 0x288a <__fpcmp_parts_f+0x88>
    2824:	81 81       	ldd	r24, Z+1	; 0x01
    2826:	68 2f       	mov	r22, r24
    2828:	70 e0       	ldi	r23, 0x00	; 0
    282a:	61 1b       	sub	r22, r17
    282c:	71 09       	sbc	r23, r1
    282e:	3f c0       	rjmp	.+126    	; 0x28ae <__fpcmp_parts_f+0xac>
    2830:	84 30       	cpi	r24, 0x04	; 4
    2832:	21 f0       	breq	.+8      	; 0x283c <__fpcmp_parts_f+0x3a>
    2834:	92 30       	cpi	r25, 0x02	; 2
    2836:	31 f4       	brne	.+12     	; 0x2844 <__fpcmp_parts_f+0x42>
    2838:	82 30       	cpi	r24, 0x02	; 2
    283a:	b9 f1       	breq	.+110    	; 0x28aa <__fpcmp_parts_f+0xa8>
    283c:	81 81       	ldd	r24, Z+1	; 0x01
    283e:	88 23       	and	r24, r24
    2840:	89 f1       	breq	.+98     	; 0x28a4 <__fpcmp_parts_f+0xa2>
    2842:	2d c0       	rjmp	.+90     	; 0x289e <__fpcmp_parts_f+0x9c>
    2844:	11 96       	adiw	r26, 0x01	; 1
    2846:	1c 91       	ld	r17, X
    2848:	11 97       	sbiw	r26, 0x01	; 1
    284a:	82 30       	cpi	r24, 0x02	; 2
    284c:	f1 f0       	breq	.+60     	; 0x288a <__fpcmp_parts_f+0x88>
    284e:	81 81       	ldd	r24, Z+1	; 0x01
    2850:	18 17       	cp	r17, r24
    2852:	d9 f4       	brne	.+54     	; 0x288a <__fpcmp_parts_f+0x88>
    2854:	12 96       	adiw	r26, 0x02	; 2
    2856:	2d 91       	ld	r18, X+
    2858:	3c 91       	ld	r19, X
    285a:	13 97       	sbiw	r26, 0x03	; 3
    285c:	82 81       	ldd	r24, Z+2	; 0x02
    285e:	93 81       	ldd	r25, Z+3	; 0x03
    2860:	82 17       	cp	r24, r18
    2862:	93 07       	cpc	r25, r19
    2864:	94 f0       	brlt	.+36     	; 0x288a <__fpcmp_parts_f+0x88>
    2866:	28 17       	cp	r18, r24
    2868:	39 07       	cpc	r19, r25
    286a:	bc f0       	brlt	.+46     	; 0x289a <__fpcmp_parts_f+0x98>
    286c:	14 96       	adiw	r26, 0x04	; 4
    286e:	8d 91       	ld	r24, X+
    2870:	9d 91       	ld	r25, X+
    2872:	0d 90       	ld	r0, X+
    2874:	bc 91       	ld	r27, X
    2876:	a0 2d       	mov	r26, r0
    2878:	24 81       	ldd	r18, Z+4	; 0x04
    287a:	35 81       	ldd	r19, Z+5	; 0x05
    287c:	46 81       	ldd	r20, Z+6	; 0x06
    287e:	57 81       	ldd	r21, Z+7	; 0x07
    2880:	28 17       	cp	r18, r24
    2882:	39 07       	cpc	r19, r25
    2884:	4a 07       	cpc	r20, r26
    2886:	5b 07       	cpc	r21, r27
    2888:	18 f4       	brcc	.+6      	; 0x2890 <__fpcmp_parts_f+0x8e>
    288a:	11 23       	and	r17, r17
    288c:	41 f0       	breq	.+16     	; 0x289e <__fpcmp_parts_f+0x9c>
    288e:	0a c0       	rjmp	.+20     	; 0x28a4 <__fpcmp_parts_f+0xa2>
    2890:	82 17       	cp	r24, r18
    2892:	93 07       	cpc	r25, r19
    2894:	a4 07       	cpc	r26, r20
    2896:	b5 07       	cpc	r27, r21
    2898:	40 f4       	brcc	.+16     	; 0x28aa <__fpcmp_parts_f+0xa8>
    289a:	11 23       	and	r17, r17
    289c:	19 f0       	breq	.+6      	; 0x28a4 <__fpcmp_parts_f+0xa2>
    289e:	61 e0       	ldi	r22, 0x01	; 1
    28a0:	70 e0       	ldi	r23, 0x00	; 0
    28a2:	05 c0       	rjmp	.+10     	; 0x28ae <__fpcmp_parts_f+0xac>
    28a4:	6f ef       	ldi	r22, 0xFF	; 255
    28a6:	7f ef       	ldi	r23, 0xFF	; 255
    28a8:	02 c0       	rjmp	.+4      	; 0x28ae <__fpcmp_parts_f+0xac>
    28aa:	60 e0       	ldi	r22, 0x00	; 0
    28ac:	70 e0       	ldi	r23, 0x00	; 0
    28ae:	cb 01       	movw	r24, r22
    28b0:	1f 91       	pop	r17
    28b2:	08 95       	ret

000028b4 <vfprintf>:
    28b4:	2f 92       	push	r2
    28b6:	3f 92       	push	r3
    28b8:	4f 92       	push	r4
    28ba:	5f 92       	push	r5
    28bc:	6f 92       	push	r6
    28be:	7f 92       	push	r7
    28c0:	8f 92       	push	r8
    28c2:	9f 92       	push	r9
    28c4:	af 92       	push	r10
    28c6:	bf 92       	push	r11
    28c8:	cf 92       	push	r12
    28ca:	df 92       	push	r13
    28cc:	ef 92       	push	r14
    28ce:	ff 92       	push	r15
    28d0:	0f 93       	push	r16
    28d2:	1f 93       	push	r17
    28d4:	df 93       	push	r29
    28d6:	cf 93       	push	r28
    28d8:	cd b7       	in	r28, 0x3d	; 61
    28da:	de b7       	in	r29, 0x3e	; 62
    28dc:	61 97       	sbiw	r28, 0x11	; 17
    28de:	0f b6       	in	r0, 0x3f	; 63
    28e0:	f8 94       	cli
    28e2:	de bf       	out	0x3e, r29	; 62
    28e4:	0f be       	out	0x3f, r0	; 63
    28e6:	cd bf       	out	0x3d, r28	; 61
    28e8:	3c 01       	movw	r6, r24
    28ea:	7f 87       	std	Y+15, r23	; 0x0f
    28ec:	6e 87       	std	Y+14, r22	; 0x0e
    28ee:	6a 01       	movw	r12, r20
    28f0:	fc 01       	movw	r30, r24
    28f2:	17 82       	std	Z+7, r1	; 0x07
    28f4:	16 82       	std	Z+6, r1	; 0x06
    28f6:	83 81       	ldd	r24, Z+3	; 0x03
    28f8:	81 fd       	sbrc	r24, 1
    28fa:	03 c0       	rjmp	.+6      	; 0x2902 <vfprintf+0x4e>
    28fc:	6f ef       	ldi	r22, 0xFF	; 255
    28fe:	7f ef       	ldi	r23, 0xFF	; 255
    2900:	6f c3       	rjmp	.+1758   	; 0x2fe0 <vfprintf+0x72c>
    2902:	9e 01       	movw	r18, r28
    2904:	2f 5f       	subi	r18, 0xFF	; 255
    2906:	3f 4f       	sbci	r19, 0xFF	; 255
    2908:	39 8b       	std	Y+17, r19	; 0x11
    290a:	28 8b       	std	Y+16, r18	; 0x10
    290c:	f3 01       	movw	r30, r6
    290e:	23 81       	ldd	r18, Z+3	; 0x03
    2910:	ee 85       	ldd	r30, Y+14	; 0x0e
    2912:	ff 85       	ldd	r31, Y+15	; 0x0f
    2914:	23 fd       	sbrc	r18, 3
    2916:	85 91       	lpm	r24, Z+
    2918:	23 ff       	sbrs	r18, 3
    291a:	81 91       	ld	r24, Z+
    291c:	ff 87       	std	Y+15, r31	; 0x0f
    291e:	ee 87       	std	Y+14, r30	; 0x0e
    2920:	88 23       	and	r24, r24
    2922:	09 f4       	brne	.+2      	; 0x2926 <vfprintf+0x72>
    2924:	5a c3       	rjmp	.+1716   	; 0x2fda <vfprintf+0x726>
    2926:	85 32       	cpi	r24, 0x25	; 37
    2928:	51 f4       	brne	.+20     	; 0x293e <vfprintf+0x8a>
    292a:	ee 85       	ldd	r30, Y+14	; 0x0e
    292c:	ff 85       	ldd	r31, Y+15	; 0x0f
    292e:	23 fd       	sbrc	r18, 3
    2930:	85 91       	lpm	r24, Z+
    2932:	23 ff       	sbrs	r18, 3
    2934:	81 91       	ld	r24, Z+
    2936:	ff 87       	std	Y+15, r31	; 0x0f
    2938:	ee 87       	std	Y+14, r30	; 0x0e
    293a:	85 32       	cpi	r24, 0x25	; 37
    293c:	29 f4       	brne	.+10     	; 0x2948 <vfprintf+0x94>
    293e:	90 e0       	ldi	r25, 0x00	; 0
    2940:	b3 01       	movw	r22, r6
    2942:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2946:	e2 cf       	rjmp	.-60     	; 0x290c <vfprintf+0x58>
    2948:	98 2f       	mov	r25, r24
    294a:	10 e0       	ldi	r17, 0x00	; 0
    294c:	88 24       	eor	r8, r8
    294e:	99 24       	eor	r9, r9
    2950:	10 32       	cpi	r17, 0x20	; 32
    2952:	b0 f4       	brcc	.+44     	; 0x2980 <vfprintf+0xcc>
    2954:	9b 32       	cpi	r25, 0x2B	; 43
    2956:	69 f0       	breq	.+26     	; 0x2972 <vfprintf+0xbe>
    2958:	9c 32       	cpi	r25, 0x2C	; 44
    295a:	28 f4       	brcc	.+10     	; 0x2966 <vfprintf+0xb2>
    295c:	90 32       	cpi	r25, 0x20	; 32
    295e:	51 f0       	breq	.+20     	; 0x2974 <vfprintf+0xc0>
    2960:	93 32       	cpi	r25, 0x23	; 35
    2962:	71 f4       	brne	.+28     	; 0x2980 <vfprintf+0xcc>
    2964:	0b c0       	rjmp	.+22     	; 0x297c <vfprintf+0xc8>
    2966:	9d 32       	cpi	r25, 0x2D	; 45
    2968:	39 f0       	breq	.+14     	; 0x2978 <vfprintf+0xc4>
    296a:	90 33       	cpi	r25, 0x30	; 48
    296c:	49 f4       	brne	.+18     	; 0x2980 <vfprintf+0xcc>
    296e:	11 60       	ori	r17, 0x01	; 1
    2970:	28 c0       	rjmp	.+80     	; 0x29c2 <vfprintf+0x10e>
    2972:	12 60       	ori	r17, 0x02	; 2
    2974:	14 60       	ori	r17, 0x04	; 4
    2976:	25 c0       	rjmp	.+74     	; 0x29c2 <vfprintf+0x10e>
    2978:	18 60       	ori	r17, 0x08	; 8
    297a:	23 c0       	rjmp	.+70     	; 0x29c2 <vfprintf+0x10e>
    297c:	10 61       	ori	r17, 0x10	; 16
    297e:	21 c0       	rjmp	.+66     	; 0x29c2 <vfprintf+0x10e>
    2980:	17 fd       	sbrc	r17, 7
    2982:	2a c0       	rjmp	.+84     	; 0x29d8 <vfprintf+0x124>
    2984:	89 2f       	mov	r24, r25
    2986:	80 53       	subi	r24, 0x30	; 48
    2988:	8a 30       	cpi	r24, 0x0A	; 10
    298a:	78 f4       	brcc	.+30     	; 0x29aa <vfprintf+0xf6>
    298c:	16 ff       	sbrs	r17, 6
    298e:	06 c0       	rjmp	.+12     	; 0x299c <vfprintf+0xe8>
    2990:	fa e0       	ldi	r31, 0x0A	; 10
    2992:	9f 9e       	mul	r9, r31
    2994:	90 2c       	mov	r9, r0
    2996:	11 24       	eor	r1, r1
    2998:	98 0e       	add	r9, r24
    299a:	13 c0       	rjmp	.+38     	; 0x29c2 <vfprintf+0x10e>
    299c:	3a e0       	ldi	r19, 0x0A	; 10
    299e:	83 9e       	mul	r8, r19
    29a0:	80 2c       	mov	r8, r0
    29a2:	11 24       	eor	r1, r1
    29a4:	88 0e       	add	r8, r24
    29a6:	10 62       	ori	r17, 0x20	; 32
    29a8:	0c c0       	rjmp	.+24     	; 0x29c2 <vfprintf+0x10e>
    29aa:	9e 32       	cpi	r25, 0x2E	; 46
    29ac:	21 f4       	brne	.+8      	; 0x29b6 <vfprintf+0x102>
    29ae:	16 fd       	sbrc	r17, 6
    29b0:	14 c3       	rjmp	.+1576   	; 0x2fda <vfprintf+0x726>
    29b2:	10 64       	ori	r17, 0x40	; 64
    29b4:	06 c0       	rjmp	.+12     	; 0x29c2 <vfprintf+0x10e>
    29b6:	9c 36       	cpi	r25, 0x6C	; 108
    29b8:	11 f4       	brne	.+4      	; 0x29be <vfprintf+0x10a>
    29ba:	10 68       	ori	r17, 0x80	; 128
    29bc:	02 c0       	rjmp	.+4      	; 0x29c2 <vfprintf+0x10e>
    29be:	98 36       	cpi	r25, 0x68	; 104
    29c0:	59 f4       	brne	.+22     	; 0x29d8 <vfprintf+0x124>
    29c2:	ee 85       	ldd	r30, Y+14	; 0x0e
    29c4:	ff 85       	ldd	r31, Y+15	; 0x0f
    29c6:	23 fd       	sbrc	r18, 3
    29c8:	95 91       	lpm	r25, Z+
    29ca:	23 ff       	sbrs	r18, 3
    29cc:	91 91       	ld	r25, Z+
    29ce:	ff 87       	std	Y+15, r31	; 0x0f
    29d0:	ee 87       	std	Y+14, r30	; 0x0e
    29d2:	99 23       	and	r25, r25
    29d4:	09 f0       	breq	.+2      	; 0x29d8 <vfprintf+0x124>
    29d6:	bc cf       	rjmp	.-136    	; 0x2950 <vfprintf+0x9c>
    29d8:	89 2f       	mov	r24, r25
    29da:	85 54       	subi	r24, 0x45	; 69
    29dc:	83 30       	cpi	r24, 0x03	; 3
    29de:	20 f4       	brcc	.+8      	; 0x29e8 <vfprintf+0x134>
    29e0:	81 2f       	mov	r24, r17
    29e2:	80 61       	ori	r24, 0x10	; 16
    29e4:	90 5e       	subi	r25, 0xE0	; 224
    29e6:	07 c0       	rjmp	.+14     	; 0x29f6 <vfprintf+0x142>
    29e8:	89 2f       	mov	r24, r25
    29ea:	85 56       	subi	r24, 0x65	; 101
    29ec:	83 30       	cpi	r24, 0x03	; 3
    29ee:	08 f0       	brcs	.+2      	; 0x29f2 <vfprintf+0x13e>
    29f0:	9f c1       	rjmp	.+830    	; 0x2d30 <vfprintf+0x47c>
    29f2:	81 2f       	mov	r24, r17
    29f4:	8f 7e       	andi	r24, 0xEF	; 239
    29f6:	86 fd       	sbrc	r24, 6
    29f8:	02 c0       	rjmp	.+4      	; 0x29fe <vfprintf+0x14a>
    29fa:	76 e0       	ldi	r23, 0x06	; 6
    29fc:	97 2e       	mov	r9, r23
    29fe:	6f e3       	ldi	r22, 0x3F	; 63
    2a00:	f6 2e       	mov	r15, r22
    2a02:	f8 22       	and	r15, r24
    2a04:	95 36       	cpi	r25, 0x65	; 101
    2a06:	19 f4       	brne	.+6      	; 0x2a0e <vfprintf+0x15a>
    2a08:	f0 e4       	ldi	r31, 0x40	; 64
    2a0a:	ff 2a       	or	r15, r31
    2a0c:	07 c0       	rjmp	.+14     	; 0x2a1c <vfprintf+0x168>
    2a0e:	96 36       	cpi	r25, 0x66	; 102
    2a10:	19 f4       	brne	.+6      	; 0x2a18 <vfprintf+0x164>
    2a12:	20 e8       	ldi	r18, 0x80	; 128
    2a14:	f2 2a       	or	r15, r18
    2a16:	02 c0       	rjmp	.+4      	; 0x2a1c <vfprintf+0x168>
    2a18:	91 10       	cpse	r9, r1
    2a1a:	9a 94       	dec	r9
    2a1c:	f7 fe       	sbrs	r15, 7
    2a1e:	0a c0       	rjmp	.+20     	; 0x2a34 <vfprintf+0x180>
    2a20:	3b e3       	ldi	r19, 0x3B	; 59
    2a22:	39 15       	cp	r19, r9
    2a24:	18 f4       	brcc	.+6      	; 0x2a2c <vfprintf+0x178>
    2a26:	5c e3       	ldi	r21, 0x3C	; 60
    2a28:	b5 2e       	mov	r11, r21
    2a2a:	02 c0       	rjmp	.+4      	; 0x2a30 <vfprintf+0x17c>
    2a2c:	b9 2c       	mov	r11, r9
    2a2e:	b3 94       	inc	r11
    2a30:	27 e0       	ldi	r18, 0x07	; 7
    2a32:	09 c0       	rjmp	.+18     	; 0x2a46 <vfprintf+0x192>
    2a34:	47 e0       	ldi	r20, 0x07	; 7
    2a36:	49 15       	cp	r20, r9
    2a38:	20 f4       	brcc	.+8      	; 0x2a42 <vfprintf+0x18e>
    2a3a:	bb 24       	eor	r11, r11
    2a3c:	47 e0       	ldi	r20, 0x07	; 7
    2a3e:	94 2e       	mov	r9, r20
    2a40:	f7 cf       	rjmp	.-18     	; 0x2a30 <vfprintf+0x17c>
    2a42:	29 2d       	mov	r18, r9
    2a44:	bb 24       	eor	r11, r11
    2a46:	c6 01       	movw	r24, r12
    2a48:	04 96       	adiw	r24, 0x04	; 4
    2a4a:	9d 87       	std	Y+13, r25	; 0x0d
    2a4c:	8c 87       	std	Y+12, r24	; 0x0c
    2a4e:	f6 01       	movw	r30, r12
    2a50:	60 81       	ld	r22, Z
    2a52:	71 81       	ldd	r23, Z+1	; 0x01
    2a54:	82 81       	ldd	r24, Z+2	; 0x02
    2a56:	93 81       	ldd	r25, Z+3	; 0x03
    2a58:	ae 01       	movw	r20, r28
    2a5a:	4f 5f       	subi	r20, 0xFF	; 255
    2a5c:	5f 4f       	sbci	r21, 0xFF	; 255
    2a5e:	0b 2d       	mov	r16, r11
    2a60:	0e 94 41 18 	call	0x3082	; 0x3082 <__ftoa_engine>
    2a64:	6c 01       	movw	r12, r24
    2a66:	09 81       	ldd	r16, Y+1	; 0x01
    2a68:	20 2e       	mov	r2, r16
    2a6a:	33 24       	eor	r3, r3
    2a6c:	00 ff       	sbrs	r16, 0
    2a6e:	04 c0       	rjmp	.+8      	; 0x2a78 <vfprintf+0x1c4>
    2a70:	03 fd       	sbrc	r16, 3
    2a72:	02 c0       	rjmp	.+4      	; 0x2a78 <vfprintf+0x1c4>
    2a74:	1d e2       	ldi	r17, 0x2D	; 45
    2a76:	09 c0       	rjmp	.+18     	; 0x2a8a <vfprintf+0x1d6>
    2a78:	f1 fe       	sbrs	r15, 1
    2a7a:	02 c0       	rjmp	.+4      	; 0x2a80 <vfprintf+0x1cc>
    2a7c:	1b e2       	ldi	r17, 0x2B	; 43
    2a7e:	05 c0       	rjmp	.+10     	; 0x2a8a <vfprintf+0x1d6>
    2a80:	f2 fc       	sbrc	r15, 2
    2a82:	02 c0       	rjmp	.+4      	; 0x2a88 <vfprintf+0x1d4>
    2a84:	10 e0       	ldi	r17, 0x00	; 0
    2a86:	01 c0       	rjmp	.+2      	; 0x2a8a <vfprintf+0x1d6>
    2a88:	10 e2       	ldi	r17, 0x20	; 32
    2a8a:	c1 01       	movw	r24, r2
    2a8c:	8c 70       	andi	r24, 0x0C	; 12
    2a8e:	90 70       	andi	r25, 0x00	; 0
    2a90:	89 2b       	or	r24, r25
    2a92:	b9 f1       	breq	.+110    	; 0x2b02 <vfprintf+0x24e>
    2a94:	11 23       	and	r17, r17
    2a96:	11 f4       	brne	.+4      	; 0x2a9c <vfprintf+0x1e8>
    2a98:	83 e0       	ldi	r24, 0x03	; 3
    2a9a:	01 c0       	rjmp	.+2      	; 0x2a9e <vfprintf+0x1ea>
    2a9c:	84 e0       	ldi	r24, 0x04	; 4
    2a9e:	88 15       	cp	r24, r8
    2aa0:	10 f0       	brcs	.+4      	; 0x2aa6 <vfprintf+0x1f2>
    2aa2:	88 24       	eor	r8, r8
    2aa4:	0a c0       	rjmp	.+20     	; 0x2aba <vfprintf+0x206>
    2aa6:	88 1a       	sub	r8, r24
    2aa8:	f3 fc       	sbrc	r15, 3
    2aaa:	07 c0       	rjmp	.+14     	; 0x2aba <vfprintf+0x206>
    2aac:	80 e2       	ldi	r24, 0x20	; 32
    2aae:	90 e0       	ldi	r25, 0x00	; 0
    2ab0:	b3 01       	movw	r22, r6
    2ab2:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2ab6:	8a 94       	dec	r8
    2ab8:	c9 f7       	brne	.-14     	; 0x2aac <vfprintf+0x1f8>
    2aba:	11 23       	and	r17, r17
    2abc:	29 f0       	breq	.+10     	; 0x2ac8 <vfprintf+0x214>
    2abe:	81 2f       	mov	r24, r17
    2ac0:	90 e0       	ldi	r25, 0x00	; 0
    2ac2:	b3 01       	movw	r22, r6
    2ac4:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2ac8:	23 fe       	sbrs	r2, 3
    2aca:	03 c0       	rjmp	.+6      	; 0x2ad2 <vfprintf+0x21e>
    2acc:	0c e8       	ldi	r16, 0x8C	; 140
    2ace:	10 e0       	ldi	r17, 0x00	; 0
    2ad0:	0e c0       	rjmp	.+28     	; 0x2aee <vfprintf+0x23a>
    2ad2:	00 e9       	ldi	r16, 0x90	; 144
    2ad4:	10 e0       	ldi	r17, 0x00	; 0
    2ad6:	0b c0       	rjmp	.+22     	; 0x2aee <vfprintf+0x23a>
    2ad8:	e1 14       	cp	r14, r1
    2ada:	f1 04       	cpc	r15, r1
    2adc:	09 f0       	breq	.+2      	; 0x2ae0 <vfprintf+0x22c>
    2ade:	80 52       	subi	r24, 0x20	; 32
    2ae0:	90 e0       	ldi	r25, 0x00	; 0
    2ae2:	b3 01       	movw	r22, r6
    2ae4:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2ae8:	0f 5f       	subi	r16, 0xFF	; 255
    2aea:	1f 4f       	sbci	r17, 0xFF	; 255
    2aec:	05 c0       	rjmp	.+10     	; 0x2af8 <vfprintf+0x244>
    2aee:	ef 2c       	mov	r14, r15
    2af0:	ff 24       	eor	r15, r15
    2af2:	f0 e1       	ldi	r31, 0x10	; 16
    2af4:	ef 22       	and	r14, r31
    2af6:	ff 24       	eor	r15, r15
    2af8:	f8 01       	movw	r30, r16
    2afa:	84 91       	lpm	r24, Z+
    2afc:	88 23       	and	r24, r24
    2afe:	61 f7       	brne	.-40     	; 0x2ad8 <vfprintf+0x224>
    2b00:	14 c1       	rjmp	.+552    	; 0x2d2a <vfprintf+0x476>
    2b02:	f7 fe       	sbrs	r15, 7
    2b04:	12 c0       	rjmp	.+36     	; 0x2b2a <vfprintf+0x276>
    2b06:	bc 0c       	add	r11, r12
    2b08:	24 fe       	sbrs	r2, 4
    2b0a:	04 c0       	rjmp	.+8      	; 0x2b14 <vfprintf+0x260>
    2b0c:	8a 81       	ldd	r24, Y+2	; 0x02
    2b0e:	81 33       	cpi	r24, 0x31	; 49
    2b10:	09 f4       	brne	.+2      	; 0x2b14 <vfprintf+0x260>
    2b12:	ba 94       	dec	r11
    2b14:	1b 14       	cp	r1, r11
    2b16:	1c f0       	brlt	.+6      	; 0x2b1e <vfprintf+0x26a>
    2b18:	bb 24       	eor	r11, r11
    2b1a:	b3 94       	inc	r11
    2b1c:	2d c0       	rjmp	.+90     	; 0x2b78 <vfprintf+0x2c4>
    2b1e:	f8 e0       	ldi	r31, 0x08	; 8
    2b20:	fb 15       	cp	r31, r11
    2b22:	50 f5       	brcc	.+84     	; 0x2b78 <vfprintf+0x2c4>
    2b24:	38 e0       	ldi	r19, 0x08	; 8
    2b26:	b3 2e       	mov	r11, r19
    2b28:	27 c0       	rjmp	.+78     	; 0x2b78 <vfprintf+0x2c4>
    2b2a:	f6 fc       	sbrc	r15, 6
    2b2c:	25 c0       	rjmp	.+74     	; 0x2b78 <vfprintf+0x2c4>
    2b2e:	89 2d       	mov	r24, r9
    2b30:	90 e0       	ldi	r25, 0x00	; 0
    2b32:	8c 15       	cp	r24, r12
    2b34:	9d 05       	cpc	r25, r13
    2b36:	4c f0       	brlt	.+18     	; 0x2b4a <vfprintf+0x296>
    2b38:	2c ef       	ldi	r18, 0xFC	; 252
    2b3a:	c2 16       	cp	r12, r18
    2b3c:	2f ef       	ldi	r18, 0xFF	; 255
    2b3e:	d2 06       	cpc	r13, r18
    2b40:	24 f0       	brlt	.+8      	; 0x2b4a <vfprintf+0x296>
    2b42:	30 e8       	ldi	r19, 0x80	; 128
    2b44:	f3 2a       	or	r15, r19
    2b46:	01 c0       	rjmp	.+2      	; 0x2b4a <vfprintf+0x296>
    2b48:	9a 94       	dec	r9
    2b4a:	99 20       	and	r9, r9
    2b4c:	49 f0       	breq	.+18     	; 0x2b60 <vfprintf+0x2ac>
    2b4e:	e2 e0       	ldi	r30, 0x02	; 2
    2b50:	f0 e0       	ldi	r31, 0x00	; 0
    2b52:	ec 0f       	add	r30, r28
    2b54:	fd 1f       	adc	r31, r29
    2b56:	e9 0d       	add	r30, r9
    2b58:	f1 1d       	adc	r31, r1
    2b5a:	80 81       	ld	r24, Z
    2b5c:	80 33       	cpi	r24, 0x30	; 48
    2b5e:	a1 f3       	breq	.-24     	; 0x2b48 <vfprintf+0x294>
    2b60:	f7 fe       	sbrs	r15, 7
    2b62:	0a c0       	rjmp	.+20     	; 0x2b78 <vfprintf+0x2c4>
    2b64:	b9 2c       	mov	r11, r9
    2b66:	b3 94       	inc	r11
    2b68:	89 2d       	mov	r24, r9
    2b6a:	90 e0       	ldi	r25, 0x00	; 0
    2b6c:	c8 16       	cp	r12, r24
    2b6e:	d9 06       	cpc	r13, r25
    2b70:	14 f0       	brlt	.+4      	; 0x2b76 <vfprintf+0x2c2>
    2b72:	99 24       	eor	r9, r9
    2b74:	01 c0       	rjmp	.+2      	; 0x2b78 <vfprintf+0x2c4>
    2b76:	9c 18       	sub	r9, r12
    2b78:	f7 fc       	sbrc	r15, 7
    2b7a:	03 c0       	rjmp	.+6      	; 0x2b82 <vfprintf+0x2ce>
    2b7c:	25 e0       	ldi	r18, 0x05	; 5
    2b7e:	30 e0       	ldi	r19, 0x00	; 0
    2b80:	09 c0       	rjmp	.+18     	; 0x2b94 <vfprintf+0x2e0>
    2b82:	1c 14       	cp	r1, r12
    2b84:	1d 04       	cpc	r1, r13
    2b86:	1c f0       	brlt	.+6      	; 0x2b8e <vfprintf+0x2da>
    2b88:	21 e0       	ldi	r18, 0x01	; 1
    2b8a:	30 e0       	ldi	r19, 0x00	; 0
    2b8c:	03 c0       	rjmp	.+6      	; 0x2b94 <vfprintf+0x2e0>
    2b8e:	96 01       	movw	r18, r12
    2b90:	2f 5f       	subi	r18, 0xFF	; 255
    2b92:	3f 4f       	sbci	r19, 0xFF	; 255
    2b94:	11 23       	and	r17, r17
    2b96:	11 f0       	breq	.+4      	; 0x2b9c <vfprintf+0x2e8>
    2b98:	2f 5f       	subi	r18, 0xFF	; 255
    2b9a:	3f 4f       	sbci	r19, 0xFF	; 255
    2b9c:	99 20       	and	r9, r9
    2b9e:	29 f0       	breq	.+10     	; 0x2baa <vfprintf+0x2f6>
    2ba0:	89 2d       	mov	r24, r9
    2ba2:	90 e0       	ldi	r25, 0x00	; 0
    2ba4:	01 96       	adiw	r24, 0x01	; 1
    2ba6:	28 0f       	add	r18, r24
    2ba8:	39 1f       	adc	r19, r25
    2baa:	88 2d       	mov	r24, r8
    2bac:	90 e0       	ldi	r25, 0x00	; 0
    2bae:	28 17       	cp	r18, r24
    2bb0:	39 07       	cpc	r19, r25
    2bb2:	14 f0       	brlt	.+4      	; 0x2bb8 <vfprintf+0x304>
    2bb4:	88 24       	eor	r8, r8
    2bb6:	01 c0       	rjmp	.+2      	; 0x2bba <vfprintf+0x306>
    2bb8:	82 1a       	sub	r8, r18
    2bba:	4f 2c       	mov	r4, r15
    2bbc:	55 24       	eor	r5, r5
    2bbe:	c2 01       	movw	r24, r4
    2bc0:	89 70       	andi	r24, 0x09	; 9
    2bc2:	90 70       	andi	r25, 0x00	; 0
    2bc4:	89 2b       	or	r24, r25
    2bc6:	39 f0       	breq	.+14     	; 0x2bd6 <vfprintf+0x322>
    2bc8:	08 c0       	rjmp	.+16     	; 0x2bda <vfprintf+0x326>
    2bca:	80 e2       	ldi	r24, 0x20	; 32
    2bcc:	90 e0       	ldi	r25, 0x00	; 0
    2bce:	b3 01       	movw	r22, r6
    2bd0:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2bd4:	8a 94       	dec	r8
    2bd6:	88 20       	and	r8, r8
    2bd8:	c1 f7       	brne	.-16     	; 0x2bca <vfprintf+0x316>
    2bda:	11 23       	and	r17, r17
    2bdc:	29 f0       	breq	.+10     	; 0x2be8 <vfprintf+0x334>
    2bde:	81 2f       	mov	r24, r17
    2be0:	90 e0       	ldi	r25, 0x00	; 0
    2be2:	b3 01       	movw	r22, r6
    2be4:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2be8:	43 fe       	sbrs	r4, 3
    2bea:	07 c0       	rjmp	.+14     	; 0x2bfa <vfprintf+0x346>
    2bec:	08 c0       	rjmp	.+16     	; 0x2bfe <vfprintf+0x34a>
    2bee:	80 e3       	ldi	r24, 0x30	; 48
    2bf0:	90 e0       	ldi	r25, 0x00	; 0
    2bf2:	b3 01       	movw	r22, r6
    2bf4:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2bf8:	8a 94       	dec	r8
    2bfa:	88 20       	and	r8, r8
    2bfc:	c1 f7       	brne	.-16     	; 0x2bee <vfprintf+0x33a>
    2bfe:	f7 fe       	sbrs	r15, 7
    2c00:	46 c0       	rjmp	.+140    	; 0x2c8e <vfprintf+0x3da>
    2c02:	86 01       	movw	r16, r12
    2c04:	d7 fe       	sbrs	r13, 7
    2c06:	02 c0       	rjmp	.+4      	; 0x2c0c <vfprintf+0x358>
    2c08:	00 e0       	ldi	r16, 0x00	; 0
    2c0a:	10 e0       	ldi	r17, 0x00	; 0
    2c0c:	76 01       	movw	r14, r12
    2c0e:	08 94       	sec
    2c10:	e1 1c       	adc	r14, r1
    2c12:	f1 1c       	adc	r15, r1
    2c14:	e0 1a       	sub	r14, r16
    2c16:	f1 0a       	sbc	r15, r17
    2c18:	41 e0       	ldi	r20, 0x01	; 1
    2c1a:	50 e0       	ldi	r21, 0x00	; 0
    2c1c:	4c 0f       	add	r20, r28
    2c1e:	5d 1f       	adc	r21, r29
    2c20:	e4 0e       	add	r14, r20
    2c22:	f5 1e       	adc	r15, r21
    2c24:	26 01       	movw	r4, r12
    2c26:	4b 18       	sub	r4, r11
    2c28:	51 08       	sbc	r5, r1
    2c2a:	89 2d       	mov	r24, r9
    2c2c:	90 e0       	ldi	r25, 0x00	; 0
    2c2e:	aa 24       	eor	r10, r10
    2c30:	bb 24       	eor	r11, r11
    2c32:	a8 1a       	sub	r10, r24
    2c34:	b9 0a       	sbc	r11, r25
    2c36:	5f ef       	ldi	r21, 0xFF	; 255
    2c38:	0f 3f       	cpi	r16, 0xFF	; 255
    2c3a:	15 07       	cpc	r17, r21
    2c3c:	29 f4       	brne	.+10     	; 0x2c48 <vfprintf+0x394>
    2c3e:	8e e2       	ldi	r24, 0x2E	; 46
    2c40:	90 e0       	ldi	r25, 0x00	; 0
    2c42:	b3 01       	movw	r22, r6
    2c44:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2c48:	c0 16       	cp	r12, r16
    2c4a:	d1 06       	cpc	r13, r17
    2c4c:	34 f0       	brlt	.+12     	; 0x2c5a <vfprintf+0x3a6>
    2c4e:	40 16       	cp	r4, r16
    2c50:	51 06       	cpc	r5, r17
    2c52:	1c f4       	brge	.+6      	; 0x2c5a <vfprintf+0x3a6>
    2c54:	f7 01       	movw	r30, r14
    2c56:	80 81       	ld	r24, Z
    2c58:	01 c0       	rjmp	.+2      	; 0x2c5c <vfprintf+0x3a8>
    2c5a:	80 e3       	ldi	r24, 0x30	; 48
    2c5c:	01 50       	subi	r16, 0x01	; 1
    2c5e:	10 40       	sbci	r17, 0x00	; 0
    2c60:	08 94       	sec
    2c62:	e1 1c       	adc	r14, r1
    2c64:	f1 1c       	adc	r15, r1
    2c66:	0a 15       	cp	r16, r10
    2c68:	1b 05       	cpc	r17, r11
    2c6a:	2c f0       	brlt	.+10     	; 0x2c76 <vfprintf+0x3c2>
    2c6c:	90 e0       	ldi	r25, 0x00	; 0
    2c6e:	b3 01       	movw	r22, r6
    2c70:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2c74:	e0 cf       	rjmp	.-64     	; 0x2c36 <vfprintf+0x382>
    2c76:	0c 15       	cp	r16, r12
    2c78:	1d 05       	cpc	r17, r13
    2c7a:	39 f4       	brne	.+14     	; 0x2c8a <vfprintf+0x3d6>
    2c7c:	9a 81       	ldd	r25, Y+2	; 0x02
    2c7e:	96 33       	cpi	r25, 0x36	; 54
    2c80:	18 f4       	brcc	.+6      	; 0x2c88 <vfprintf+0x3d4>
    2c82:	95 33       	cpi	r25, 0x35	; 53
    2c84:	11 f4       	brne	.+4      	; 0x2c8a <vfprintf+0x3d6>
    2c86:	24 fe       	sbrs	r2, 4
    2c88:	81 e3       	ldi	r24, 0x31	; 49
    2c8a:	90 e0       	ldi	r25, 0x00	; 0
    2c8c:	4b c0       	rjmp	.+150    	; 0x2d24 <vfprintf+0x470>
    2c8e:	8a 81       	ldd	r24, Y+2	; 0x02
    2c90:	81 33       	cpi	r24, 0x31	; 49
    2c92:	09 f0       	breq	.+2      	; 0x2c96 <vfprintf+0x3e2>
    2c94:	0f 7e       	andi	r16, 0xEF	; 239
    2c96:	90 e0       	ldi	r25, 0x00	; 0
    2c98:	b3 01       	movw	r22, r6
    2c9a:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2c9e:	99 20       	and	r9, r9
    2ca0:	a1 f0       	breq	.+40     	; 0x2cca <vfprintf+0x416>
    2ca2:	8e e2       	ldi	r24, 0x2E	; 46
    2ca4:	90 e0       	ldi	r25, 0x00	; 0
    2ca6:	b3 01       	movw	r22, r6
    2ca8:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2cac:	12 e0       	ldi	r17, 0x02	; 2
    2cae:	e1 e0       	ldi	r30, 0x01	; 1
    2cb0:	f0 e0       	ldi	r31, 0x00	; 0
    2cb2:	ec 0f       	add	r30, r28
    2cb4:	fd 1f       	adc	r31, r29
    2cb6:	e1 0f       	add	r30, r17
    2cb8:	f1 1d       	adc	r31, r1
    2cba:	1f 5f       	subi	r17, 0xFF	; 255
    2cbc:	80 81       	ld	r24, Z
    2cbe:	90 e0       	ldi	r25, 0x00	; 0
    2cc0:	b3 01       	movw	r22, r6
    2cc2:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2cc6:	9a 94       	dec	r9
    2cc8:	91 f7       	brne	.-28     	; 0x2cae <vfprintf+0x3fa>
    2cca:	44 fc       	sbrc	r4, 4
    2ccc:	03 c0       	rjmp	.+6      	; 0x2cd4 <vfprintf+0x420>
    2cce:	85 e6       	ldi	r24, 0x65	; 101
    2cd0:	90 e0       	ldi	r25, 0x00	; 0
    2cd2:	02 c0       	rjmp	.+4      	; 0x2cd8 <vfprintf+0x424>
    2cd4:	85 e4       	ldi	r24, 0x45	; 69
    2cd6:	90 e0       	ldi	r25, 0x00	; 0
    2cd8:	b3 01       	movw	r22, r6
    2cda:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2cde:	d7 fc       	sbrc	r13, 7
    2ce0:	05 c0       	rjmp	.+10     	; 0x2cec <vfprintf+0x438>
    2ce2:	c1 14       	cp	r12, r1
    2ce4:	d1 04       	cpc	r13, r1
    2ce6:	41 f4       	brne	.+16     	; 0x2cf8 <vfprintf+0x444>
    2ce8:	04 ff       	sbrs	r16, 4
    2cea:	06 c0       	rjmp	.+12     	; 0x2cf8 <vfprintf+0x444>
    2cec:	d0 94       	com	r13
    2cee:	c1 94       	neg	r12
    2cf0:	d1 08       	sbc	r13, r1
    2cf2:	d3 94       	inc	r13
    2cf4:	8d e2       	ldi	r24, 0x2D	; 45
    2cf6:	01 c0       	rjmp	.+2      	; 0x2cfa <vfprintf+0x446>
    2cf8:	8b e2       	ldi	r24, 0x2B	; 43
    2cfa:	90 e0       	ldi	r25, 0x00	; 0
    2cfc:	b3 01       	movw	r22, r6
    2cfe:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2d02:	80 e3       	ldi	r24, 0x30	; 48
    2d04:	05 c0       	rjmp	.+10     	; 0x2d10 <vfprintf+0x45c>
    2d06:	8f 5f       	subi	r24, 0xFF	; 255
    2d08:	26 ef       	ldi	r18, 0xF6	; 246
    2d0a:	3f ef       	ldi	r19, 0xFF	; 255
    2d0c:	c2 0e       	add	r12, r18
    2d0e:	d3 1e       	adc	r13, r19
    2d10:	3a e0       	ldi	r19, 0x0A	; 10
    2d12:	c3 16       	cp	r12, r19
    2d14:	d1 04       	cpc	r13, r1
    2d16:	bc f7       	brge	.-18     	; 0x2d06 <vfprintf+0x452>
    2d18:	90 e0       	ldi	r25, 0x00	; 0
    2d1a:	b3 01       	movw	r22, r6
    2d1c:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2d20:	c6 01       	movw	r24, r12
    2d22:	c0 96       	adiw	r24, 0x30	; 48
    2d24:	b3 01       	movw	r22, r6
    2d26:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2d2a:	cc 84       	ldd	r12, Y+12	; 0x0c
    2d2c:	dd 84       	ldd	r13, Y+13	; 0x0d
    2d2e:	52 c1       	rjmp	.+676    	; 0x2fd4 <vfprintf+0x720>
    2d30:	93 36       	cpi	r25, 0x63	; 99
    2d32:	31 f0       	breq	.+12     	; 0x2d40 <vfprintf+0x48c>
    2d34:	93 37       	cpi	r25, 0x73	; 115
    2d36:	99 f0       	breq	.+38     	; 0x2d5e <vfprintf+0x4aa>
    2d38:	93 35       	cpi	r25, 0x53	; 83
    2d3a:	09 f0       	breq	.+2      	; 0x2d3e <vfprintf+0x48a>
    2d3c:	59 c0       	rjmp	.+178    	; 0x2df0 <vfprintf+0x53c>
    2d3e:	23 c0       	rjmp	.+70     	; 0x2d86 <vfprintf+0x4d2>
    2d40:	f6 01       	movw	r30, r12
    2d42:	80 81       	ld	r24, Z
    2d44:	89 83       	std	Y+1, r24	; 0x01
    2d46:	5e 01       	movw	r10, r28
    2d48:	08 94       	sec
    2d4a:	a1 1c       	adc	r10, r1
    2d4c:	b1 1c       	adc	r11, r1
    2d4e:	22 e0       	ldi	r18, 0x02	; 2
    2d50:	30 e0       	ldi	r19, 0x00	; 0
    2d52:	c2 0e       	add	r12, r18
    2d54:	d3 1e       	adc	r13, r19
    2d56:	21 e0       	ldi	r18, 0x01	; 1
    2d58:	e2 2e       	mov	r14, r18
    2d5a:	f1 2c       	mov	r15, r1
    2d5c:	12 c0       	rjmp	.+36     	; 0x2d82 <vfprintf+0x4ce>
    2d5e:	f6 01       	movw	r30, r12
    2d60:	a0 80       	ld	r10, Z
    2d62:	b1 80       	ldd	r11, Z+1	; 0x01
    2d64:	16 fd       	sbrc	r17, 6
    2d66:	03 c0       	rjmp	.+6      	; 0x2d6e <vfprintf+0x4ba>
    2d68:	6f ef       	ldi	r22, 0xFF	; 255
    2d6a:	7f ef       	ldi	r23, 0xFF	; 255
    2d6c:	02 c0       	rjmp	.+4      	; 0x2d72 <vfprintf+0x4be>
    2d6e:	69 2d       	mov	r22, r9
    2d70:	70 e0       	ldi	r23, 0x00	; 0
    2d72:	22 e0       	ldi	r18, 0x02	; 2
    2d74:	30 e0       	ldi	r19, 0x00	; 0
    2d76:	c2 0e       	add	r12, r18
    2d78:	d3 1e       	adc	r13, r19
    2d7a:	c5 01       	movw	r24, r10
    2d7c:	0e 94 24 19 	call	0x3248	; 0x3248 <strnlen>
    2d80:	7c 01       	movw	r14, r24
    2d82:	1f 77       	andi	r17, 0x7F	; 127
    2d84:	13 c0       	rjmp	.+38     	; 0x2dac <vfprintf+0x4f8>
    2d86:	f6 01       	movw	r30, r12
    2d88:	a0 80       	ld	r10, Z
    2d8a:	b1 80       	ldd	r11, Z+1	; 0x01
    2d8c:	16 fd       	sbrc	r17, 6
    2d8e:	03 c0       	rjmp	.+6      	; 0x2d96 <vfprintf+0x4e2>
    2d90:	6f ef       	ldi	r22, 0xFF	; 255
    2d92:	7f ef       	ldi	r23, 0xFF	; 255
    2d94:	02 c0       	rjmp	.+4      	; 0x2d9a <vfprintf+0x4e6>
    2d96:	69 2d       	mov	r22, r9
    2d98:	70 e0       	ldi	r23, 0x00	; 0
    2d9a:	22 e0       	ldi	r18, 0x02	; 2
    2d9c:	30 e0       	ldi	r19, 0x00	; 0
    2d9e:	c2 0e       	add	r12, r18
    2da0:	d3 1e       	adc	r13, r19
    2da2:	c5 01       	movw	r24, r10
    2da4:	0e 94 19 19 	call	0x3232	; 0x3232 <strnlen_P>
    2da8:	7c 01       	movw	r14, r24
    2daa:	10 68       	ori	r17, 0x80	; 128
    2dac:	13 ff       	sbrs	r17, 3
    2dae:	07 c0       	rjmp	.+14     	; 0x2dbe <vfprintf+0x50a>
    2db0:	1b c0       	rjmp	.+54     	; 0x2de8 <vfprintf+0x534>
    2db2:	80 e2       	ldi	r24, 0x20	; 32
    2db4:	90 e0       	ldi	r25, 0x00	; 0
    2db6:	b3 01       	movw	r22, r6
    2db8:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2dbc:	8a 94       	dec	r8
    2dbe:	88 2d       	mov	r24, r8
    2dc0:	90 e0       	ldi	r25, 0x00	; 0
    2dc2:	e8 16       	cp	r14, r24
    2dc4:	f9 06       	cpc	r15, r25
    2dc6:	a8 f3       	brcs	.-22     	; 0x2db2 <vfprintf+0x4fe>
    2dc8:	0f c0       	rjmp	.+30     	; 0x2de8 <vfprintf+0x534>
    2dca:	f5 01       	movw	r30, r10
    2dcc:	17 fd       	sbrc	r17, 7
    2dce:	85 91       	lpm	r24, Z+
    2dd0:	17 ff       	sbrs	r17, 7
    2dd2:	81 91       	ld	r24, Z+
    2dd4:	5f 01       	movw	r10, r30
    2dd6:	90 e0       	ldi	r25, 0x00	; 0
    2dd8:	b3 01       	movw	r22, r6
    2dda:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2dde:	81 10       	cpse	r8, r1
    2de0:	8a 94       	dec	r8
    2de2:	08 94       	sec
    2de4:	e1 08       	sbc	r14, r1
    2de6:	f1 08       	sbc	r15, r1
    2de8:	e1 14       	cp	r14, r1
    2dea:	f1 04       	cpc	r15, r1
    2dec:	71 f7       	brne	.-36     	; 0x2dca <vfprintf+0x516>
    2dee:	f2 c0       	rjmp	.+484    	; 0x2fd4 <vfprintf+0x720>
    2df0:	94 36       	cpi	r25, 0x64	; 100
    2df2:	11 f0       	breq	.+4      	; 0x2df8 <vfprintf+0x544>
    2df4:	99 36       	cpi	r25, 0x69	; 105
    2df6:	89 f5       	brne	.+98     	; 0x2e5a <vfprintf+0x5a6>
    2df8:	17 ff       	sbrs	r17, 7
    2dfa:	08 c0       	rjmp	.+16     	; 0x2e0c <vfprintf+0x558>
    2dfc:	f6 01       	movw	r30, r12
    2dfe:	20 81       	ld	r18, Z
    2e00:	31 81       	ldd	r19, Z+1	; 0x01
    2e02:	42 81       	ldd	r20, Z+2	; 0x02
    2e04:	53 81       	ldd	r21, Z+3	; 0x03
    2e06:	84 e0       	ldi	r24, 0x04	; 4
    2e08:	90 e0       	ldi	r25, 0x00	; 0
    2e0a:	0a c0       	rjmp	.+20     	; 0x2e20 <vfprintf+0x56c>
    2e0c:	f6 01       	movw	r30, r12
    2e0e:	80 81       	ld	r24, Z
    2e10:	91 81       	ldd	r25, Z+1	; 0x01
    2e12:	9c 01       	movw	r18, r24
    2e14:	44 27       	eor	r20, r20
    2e16:	37 fd       	sbrc	r19, 7
    2e18:	40 95       	com	r20
    2e1a:	54 2f       	mov	r21, r20
    2e1c:	82 e0       	ldi	r24, 0x02	; 2
    2e1e:	90 e0       	ldi	r25, 0x00	; 0
    2e20:	c8 0e       	add	r12, r24
    2e22:	d9 1e       	adc	r13, r25
    2e24:	9f e6       	ldi	r25, 0x6F	; 111
    2e26:	f9 2e       	mov	r15, r25
    2e28:	f1 22       	and	r15, r17
    2e2a:	57 ff       	sbrs	r21, 7
    2e2c:	09 c0       	rjmp	.+18     	; 0x2e40 <vfprintf+0x58c>
    2e2e:	50 95       	com	r21
    2e30:	40 95       	com	r20
    2e32:	30 95       	com	r19
    2e34:	21 95       	neg	r18
    2e36:	3f 4f       	sbci	r19, 0xFF	; 255
    2e38:	4f 4f       	sbci	r20, 0xFF	; 255
    2e3a:	5f 4f       	sbci	r21, 0xFF	; 255
    2e3c:	90 e8       	ldi	r25, 0x80	; 128
    2e3e:	f9 2a       	or	r15, r25
    2e40:	ca 01       	movw	r24, r20
    2e42:	b9 01       	movw	r22, r18
    2e44:	ae 01       	movw	r20, r28
    2e46:	4f 5f       	subi	r20, 0xFF	; 255
    2e48:	5f 4f       	sbci	r21, 0xFF	; 255
    2e4a:	2a e0       	ldi	r18, 0x0A	; 10
    2e4c:	30 e0       	ldi	r19, 0x00	; 0
    2e4e:	0e 94 8c 19 	call	0x3318	; 0x3318 <__ultoa_invert>
    2e52:	e8 2e       	mov	r14, r24
    2e54:	e8 89       	ldd	r30, Y+16	; 0x10
    2e56:	ee 1a       	sub	r14, r30
    2e58:	41 c0       	rjmp	.+130    	; 0x2edc <vfprintf+0x628>
    2e5a:	95 37       	cpi	r25, 0x75	; 117
    2e5c:	21 f4       	brne	.+8      	; 0x2e66 <vfprintf+0x5b2>
    2e5e:	1f 7e       	andi	r17, 0xEF	; 239
    2e60:	2a e0       	ldi	r18, 0x0A	; 10
    2e62:	30 e0       	ldi	r19, 0x00	; 0
    2e64:	1c c0       	rjmp	.+56     	; 0x2e9e <vfprintf+0x5ea>
    2e66:	19 7f       	andi	r17, 0xF9	; 249
    2e68:	9f 36       	cpi	r25, 0x6F	; 111
    2e6a:	61 f0       	breq	.+24     	; 0x2e84 <vfprintf+0x5d0>
    2e6c:	90 37       	cpi	r25, 0x70	; 112
    2e6e:	20 f4       	brcc	.+8      	; 0x2e78 <vfprintf+0x5c4>
    2e70:	98 35       	cpi	r25, 0x58	; 88
    2e72:	09 f0       	breq	.+2      	; 0x2e76 <vfprintf+0x5c2>
    2e74:	b2 c0       	rjmp	.+356    	; 0x2fda <vfprintf+0x726>
    2e76:	0f c0       	rjmp	.+30     	; 0x2e96 <vfprintf+0x5e2>
    2e78:	90 37       	cpi	r25, 0x70	; 112
    2e7a:	39 f0       	breq	.+14     	; 0x2e8a <vfprintf+0x5d6>
    2e7c:	98 37       	cpi	r25, 0x78	; 120
    2e7e:	09 f0       	breq	.+2      	; 0x2e82 <vfprintf+0x5ce>
    2e80:	ac c0       	rjmp	.+344    	; 0x2fda <vfprintf+0x726>
    2e82:	04 c0       	rjmp	.+8      	; 0x2e8c <vfprintf+0x5d8>
    2e84:	28 e0       	ldi	r18, 0x08	; 8
    2e86:	30 e0       	ldi	r19, 0x00	; 0
    2e88:	0a c0       	rjmp	.+20     	; 0x2e9e <vfprintf+0x5ea>
    2e8a:	10 61       	ori	r17, 0x10	; 16
    2e8c:	14 fd       	sbrc	r17, 4
    2e8e:	14 60       	ori	r17, 0x04	; 4
    2e90:	20 e1       	ldi	r18, 0x10	; 16
    2e92:	30 e0       	ldi	r19, 0x00	; 0
    2e94:	04 c0       	rjmp	.+8      	; 0x2e9e <vfprintf+0x5ea>
    2e96:	14 fd       	sbrc	r17, 4
    2e98:	16 60       	ori	r17, 0x06	; 6
    2e9a:	20 e1       	ldi	r18, 0x10	; 16
    2e9c:	32 e0       	ldi	r19, 0x02	; 2
    2e9e:	17 ff       	sbrs	r17, 7
    2ea0:	08 c0       	rjmp	.+16     	; 0x2eb2 <vfprintf+0x5fe>
    2ea2:	f6 01       	movw	r30, r12
    2ea4:	60 81       	ld	r22, Z
    2ea6:	71 81       	ldd	r23, Z+1	; 0x01
    2ea8:	82 81       	ldd	r24, Z+2	; 0x02
    2eaa:	93 81       	ldd	r25, Z+3	; 0x03
    2eac:	44 e0       	ldi	r20, 0x04	; 4
    2eae:	50 e0       	ldi	r21, 0x00	; 0
    2eb0:	08 c0       	rjmp	.+16     	; 0x2ec2 <vfprintf+0x60e>
    2eb2:	f6 01       	movw	r30, r12
    2eb4:	80 81       	ld	r24, Z
    2eb6:	91 81       	ldd	r25, Z+1	; 0x01
    2eb8:	bc 01       	movw	r22, r24
    2eba:	80 e0       	ldi	r24, 0x00	; 0
    2ebc:	90 e0       	ldi	r25, 0x00	; 0
    2ebe:	42 e0       	ldi	r20, 0x02	; 2
    2ec0:	50 e0       	ldi	r21, 0x00	; 0
    2ec2:	c4 0e       	add	r12, r20
    2ec4:	d5 1e       	adc	r13, r21
    2ec6:	ae 01       	movw	r20, r28
    2ec8:	4f 5f       	subi	r20, 0xFF	; 255
    2eca:	5f 4f       	sbci	r21, 0xFF	; 255
    2ecc:	0e 94 8c 19 	call	0x3318	; 0x3318 <__ultoa_invert>
    2ed0:	e8 2e       	mov	r14, r24
    2ed2:	58 89       	ldd	r21, Y+16	; 0x10
    2ed4:	e5 1a       	sub	r14, r21
    2ed6:	8f e7       	ldi	r24, 0x7F	; 127
    2ed8:	f8 2e       	mov	r15, r24
    2eda:	f1 22       	and	r15, r17
    2edc:	f6 fe       	sbrs	r15, 6
    2ede:	0b c0       	rjmp	.+22     	; 0x2ef6 <vfprintf+0x642>
    2ee0:	8e ef       	ldi	r24, 0xFE	; 254
    2ee2:	f8 22       	and	r15, r24
    2ee4:	e9 14       	cp	r14, r9
    2ee6:	38 f4       	brcc	.+14     	; 0x2ef6 <vfprintf+0x642>
    2ee8:	f4 fe       	sbrs	r15, 4
    2eea:	07 c0       	rjmp	.+14     	; 0x2efa <vfprintf+0x646>
    2eec:	f2 fc       	sbrc	r15, 2
    2eee:	05 c0       	rjmp	.+10     	; 0x2efa <vfprintf+0x646>
    2ef0:	9f ee       	ldi	r25, 0xEF	; 239
    2ef2:	f9 22       	and	r15, r25
    2ef4:	02 c0       	rjmp	.+4      	; 0x2efa <vfprintf+0x646>
    2ef6:	1e 2d       	mov	r17, r14
    2ef8:	01 c0       	rjmp	.+2      	; 0x2efc <vfprintf+0x648>
    2efa:	19 2d       	mov	r17, r9
    2efc:	f4 fe       	sbrs	r15, 4
    2efe:	0d c0       	rjmp	.+26     	; 0x2f1a <vfprintf+0x666>
    2f00:	fe 01       	movw	r30, r28
    2f02:	ee 0d       	add	r30, r14
    2f04:	f1 1d       	adc	r31, r1
    2f06:	80 81       	ld	r24, Z
    2f08:	80 33       	cpi	r24, 0x30	; 48
    2f0a:	19 f4       	brne	.+6      	; 0x2f12 <vfprintf+0x65e>
    2f0c:	e9 ee       	ldi	r30, 0xE9	; 233
    2f0e:	fe 22       	and	r15, r30
    2f10:	08 c0       	rjmp	.+16     	; 0x2f22 <vfprintf+0x66e>
    2f12:	1f 5f       	subi	r17, 0xFF	; 255
    2f14:	f2 fe       	sbrs	r15, 2
    2f16:	05 c0       	rjmp	.+10     	; 0x2f22 <vfprintf+0x66e>
    2f18:	03 c0       	rjmp	.+6      	; 0x2f20 <vfprintf+0x66c>
    2f1a:	8f 2d       	mov	r24, r15
    2f1c:	86 78       	andi	r24, 0x86	; 134
    2f1e:	09 f0       	breq	.+2      	; 0x2f22 <vfprintf+0x66e>
    2f20:	1f 5f       	subi	r17, 0xFF	; 255
    2f22:	0f 2d       	mov	r16, r15
    2f24:	f3 fc       	sbrc	r15, 3
    2f26:	14 c0       	rjmp	.+40     	; 0x2f50 <vfprintf+0x69c>
    2f28:	f0 fe       	sbrs	r15, 0
    2f2a:	0f c0       	rjmp	.+30     	; 0x2f4a <vfprintf+0x696>
    2f2c:	18 15       	cp	r17, r8
    2f2e:	10 f0       	brcs	.+4      	; 0x2f34 <vfprintf+0x680>
    2f30:	9e 2c       	mov	r9, r14
    2f32:	0b c0       	rjmp	.+22     	; 0x2f4a <vfprintf+0x696>
    2f34:	9e 2c       	mov	r9, r14
    2f36:	98 0c       	add	r9, r8
    2f38:	91 1a       	sub	r9, r17
    2f3a:	18 2d       	mov	r17, r8
    2f3c:	06 c0       	rjmp	.+12     	; 0x2f4a <vfprintf+0x696>
    2f3e:	80 e2       	ldi	r24, 0x20	; 32
    2f40:	90 e0       	ldi	r25, 0x00	; 0
    2f42:	b3 01       	movw	r22, r6
    2f44:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2f48:	1f 5f       	subi	r17, 0xFF	; 255
    2f4a:	18 15       	cp	r17, r8
    2f4c:	c0 f3       	brcs	.-16     	; 0x2f3e <vfprintf+0x68a>
    2f4e:	04 c0       	rjmp	.+8      	; 0x2f58 <vfprintf+0x6a4>
    2f50:	18 15       	cp	r17, r8
    2f52:	10 f4       	brcc	.+4      	; 0x2f58 <vfprintf+0x6a4>
    2f54:	81 1a       	sub	r8, r17
    2f56:	01 c0       	rjmp	.+2      	; 0x2f5a <vfprintf+0x6a6>
    2f58:	88 24       	eor	r8, r8
    2f5a:	04 ff       	sbrs	r16, 4
    2f5c:	0f c0       	rjmp	.+30     	; 0x2f7c <vfprintf+0x6c8>
    2f5e:	80 e3       	ldi	r24, 0x30	; 48
    2f60:	90 e0       	ldi	r25, 0x00	; 0
    2f62:	b3 01       	movw	r22, r6
    2f64:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2f68:	02 ff       	sbrs	r16, 2
    2f6a:	1d c0       	rjmp	.+58     	; 0x2fa6 <vfprintf+0x6f2>
    2f6c:	01 fd       	sbrc	r16, 1
    2f6e:	03 c0       	rjmp	.+6      	; 0x2f76 <vfprintf+0x6c2>
    2f70:	88 e7       	ldi	r24, 0x78	; 120
    2f72:	90 e0       	ldi	r25, 0x00	; 0
    2f74:	0e c0       	rjmp	.+28     	; 0x2f92 <vfprintf+0x6de>
    2f76:	88 e5       	ldi	r24, 0x58	; 88
    2f78:	90 e0       	ldi	r25, 0x00	; 0
    2f7a:	0b c0       	rjmp	.+22     	; 0x2f92 <vfprintf+0x6de>
    2f7c:	80 2f       	mov	r24, r16
    2f7e:	86 78       	andi	r24, 0x86	; 134
    2f80:	91 f0       	breq	.+36     	; 0x2fa6 <vfprintf+0x6f2>
    2f82:	01 ff       	sbrs	r16, 1
    2f84:	02 c0       	rjmp	.+4      	; 0x2f8a <vfprintf+0x6d6>
    2f86:	8b e2       	ldi	r24, 0x2B	; 43
    2f88:	01 c0       	rjmp	.+2      	; 0x2f8c <vfprintf+0x6d8>
    2f8a:	80 e2       	ldi	r24, 0x20	; 32
    2f8c:	f7 fc       	sbrc	r15, 7
    2f8e:	8d e2       	ldi	r24, 0x2D	; 45
    2f90:	90 e0       	ldi	r25, 0x00	; 0
    2f92:	b3 01       	movw	r22, r6
    2f94:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2f98:	06 c0       	rjmp	.+12     	; 0x2fa6 <vfprintf+0x6f2>
    2f9a:	80 e3       	ldi	r24, 0x30	; 48
    2f9c:	90 e0       	ldi	r25, 0x00	; 0
    2f9e:	b3 01       	movw	r22, r6
    2fa0:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2fa4:	9a 94       	dec	r9
    2fa6:	e9 14       	cp	r14, r9
    2fa8:	c0 f3       	brcs	.-16     	; 0x2f9a <vfprintf+0x6e6>
    2faa:	ea 94       	dec	r14
    2fac:	e1 e0       	ldi	r30, 0x01	; 1
    2fae:	f0 e0       	ldi	r31, 0x00	; 0
    2fb0:	ec 0f       	add	r30, r28
    2fb2:	fd 1f       	adc	r31, r29
    2fb4:	ee 0d       	add	r30, r14
    2fb6:	f1 1d       	adc	r31, r1
    2fb8:	80 81       	ld	r24, Z
    2fba:	90 e0       	ldi	r25, 0x00	; 0
    2fbc:	b3 01       	movw	r22, r6
    2fbe:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2fc2:	ee 20       	and	r14, r14
    2fc4:	91 f7       	brne	.-28     	; 0x2faa <vfprintf+0x6f6>
    2fc6:	06 c0       	rjmp	.+12     	; 0x2fd4 <vfprintf+0x720>
    2fc8:	80 e2       	ldi	r24, 0x20	; 32
    2fca:	90 e0       	ldi	r25, 0x00	; 0
    2fcc:	b3 01       	movw	r22, r6
    2fce:	0e 94 2f 19 	call	0x325e	; 0x325e <fputc>
    2fd2:	8a 94       	dec	r8
    2fd4:	88 20       	and	r8, r8
    2fd6:	c1 f7       	brne	.-16     	; 0x2fc8 <vfprintf+0x714>
    2fd8:	99 cc       	rjmp	.-1742   	; 0x290c <vfprintf+0x58>
    2fda:	f3 01       	movw	r30, r6
    2fdc:	66 81       	ldd	r22, Z+6	; 0x06
    2fde:	77 81       	ldd	r23, Z+7	; 0x07
    2fe0:	cb 01       	movw	r24, r22
    2fe2:	61 96       	adiw	r28, 0x11	; 17
    2fe4:	0f b6       	in	r0, 0x3f	; 63
    2fe6:	f8 94       	cli
    2fe8:	de bf       	out	0x3e, r29	; 62
    2fea:	0f be       	out	0x3f, r0	; 63
    2fec:	cd bf       	out	0x3d, r28	; 61
    2fee:	cf 91       	pop	r28
    2ff0:	df 91       	pop	r29
    2ff2:	1f 91       	pop	r17
    2ff4:	0f 91       	pop	r16
    2ff6:	ff 90       	pop	r15
    2ff8:	ef 90       	pop	r14
    2ffa:	df 90       	pop	r13
    2ffc:	cf 90       	pop	r12
    2ffe:	bf 90       	pop	r11
    3000:	af 90       	pop	r10
    3002:	9f 90       	pop	r9
    3004:	8f 90       	pop	r8
    3006:	7f 90       	pop	r7
    3008:	6f 90       	pop	r6
    300a:	5f 90       	pop	r5
    300c:	4f 90       	pop	r4
    300e:	3f 90       	pop	r3
    3010:	2f 90       	pop	r2
    3012:	08 95       	ret

00003014 <__prologue_saves__>:
    3014:	2f 92       	push	r2
    3016:	3f 92       	push	r3
    3018:	4f 92       	push	r4
    301a:	5f 92       	push	r5
    301c:	6f 92       	push	r6
    301e:	7f 92       	push	r7
    3020:	8f 92       	push	r8
    3022:	9f 92       	push	r9
    3024:	af 92       	push	r10
    3026:	bf 92       	push	r11
    3028:	cf 92       	push	r12
    302a:	df 92       	push	r13
    302c:	ef 92       	push	r14
    302e:	ff 92       	push	r15
    3030:	0f 93       	push	r16
    3032:	1f 93       	push	r17
    3034:	cf 93       	push	r28
    3036:	df 93       	push	r29
    3038:	cd b7       	in	r28, 0x3d	; 61
    303a:	de b7       	in	r29, 0x3e	; 62
    303c:	ca 1b       	sub	r28, r26
    303e:	db 0b       	sbc	r29, r27
    3040:	0f b6       	in	r0, 0x3f	; 63
    3042:	f8 94       	cli
    3044:	de bf       	out	0x3e, r29	; 62
    3046:	0f be       	out	0x3f, r0	; 63
    3048:	cd bf       	out	0x3d, r28	; 61
    304a:	09 94       	ijmp

0000304c <__epilogue_restores__>:
    304c:	2a 88       	ldd	r2, Y+18	; 0x12
    304e:	39 88       	ldd	r3, Y+17	; 0x11
    3050:	48 88       	ldd	r4, Y+16	; 0x10
    3052:	5f 84       	ldd	r5, Y+15	; 0x0f
    3054:	6e 84       	ldd	r6, Y+14	; 0x0e
    3056:	7d 84       	ldd	r7, Y+13	; 0x0d
    3058:	8c 84       	ldd	r8, Y+12	; 0x0c
    305a:	9b 84       	ldd	r9, Y+11	; 0x0b
    305c:	aa 84       	ldd	r10, Y+10	; 0x0a
    305e:	b9 84       	ldd	r11, Y+9	; 0x09
    3060:	c8 84       	ldd	r12, Y+8	; 0x08
    3062:	df 80       	ldd	r13, Y+7	; 0x07
    3064:	ee 80       	ldd	r14, Y+6	; 0x06
    3066:	fd 80       	ldd	r15, Y+5	; 0x05
    3068:	0c 81       	ldd	r16, Y+4	; 0x04
    306a:	1b 81       	ldd	r17, Y+3	; 0x03
    306c:	aa 81       	ldd	r26, Y+2	; 0x02
    306e:	b9 81       	ldd	r27, Y+1	; 0x01
    3070:	ce 0f       	add	r28, r30
    3072:	d1 1d       	adc	r29, r1
    3074:	0f b6       	in	r0, 0x3f	; 63
    3076:	f8 94       	cli
    3078:	de bf       	out	0x3e, r29	; 62
    307a:	0f be       	out	0x3f, r0	; 63
    307c:	cd bf       	out	0x3d, r28	; 61
    307e:	ed 01       	movw	r28, r26
    3080:	08 95       	ret

00003082 <__ftoa_engine>:
    3082:	28 30       	cpi	r18, 0x08	; 8
    3084:	08 f0       	brcs	.+2      	; 0x3088 <__ftoa_engine+0x6>
    3086:	27 e0       	ldi	r18, 0x07	; 7
    3088:	33 27       	eor	r19, r19
    308a:	da 01       	movw	r26, r20
    308c:	99 0f       	add	r25, r25
    308e:	31 1d       	adc	r19, r1
    3090:	87 fd       	sbrc	r24, 7
    3092:	91 60       	ori	r25, 0x01	; 1
    3094:	00 96       	adiw	r24, 0x00	; 0
    3096:	61 05       	cpc	r22, r1
    3098:	71 05       	cpc	r23, r1
    309a:	39 f4       	brne	.+14     	; 0x30aa <__ftoa_engine+0x28>
    309c:	32 60       	ori	r19, 0x02	; 2
    309e:	2e 5f       	subi	r18, 0xFE	; 254
    30a0:	3d 93       	st	X+, r19
    30a2:	30 e3       	ldi	r19, 0x30	; 48
    30a4:	2a 95       	dec	r18
    30a6:	e1 f7       	brne	.-8      	; 0x30a0 <__ftoa_engine+0x1e>
    30a8:	08 95       	ret
    30aa:	9f 3f       	cpi	r25, 0xFF	; 255
    30ac:	30 f0       	brcs	.+12     	; 0x30ba <__ftoa_engine+0x38>
    30ae:	80 38       	cpi	r24, 0x80	; 128
    30b0:	71 05       	cpc	r23, r1
    30b2:	61 05       	cpc	r22, r1
    30b4:	09 f0       	breq	.+2      	; 0x30b8 <__ftoa_engine+0x36>
    30b6:	3c 5f       	subi	r19, 0xFC	; 252
    30b8:	3c 5f       	subi	r19, 0xFC	; 252
    30ba:	3d 93       	st	X+, r19
    30bc:	91 30       	cpi	r25, 0x01	; 1
    30be:	08 f0       	brcs	.+2      	; 0x30c2 <__ftoa_engine+0x40>
    30c0:	80 68       	ori	r24, 0x80	; 128
    30c2:	91 1d       	adc	r25, r1
    30c4:	df 93       	push	r29
    30c6:	cf 93       	push	r28
    30c8:	1f 93       	push	r17
    30ca:	0f 93       	push	r16
    30cc:	ff 92       	push	r15
    30ce:	ef 92       	push	r14
    30d0:	19 2f       	mov	r17, r25
    30d2:	98 7f       	andi	r25, 0xF8	; 248
    30d4:	96 95       	lsr	r25
    30d6:	e9 2f       	mov	r30, r25
    30d8:	96 95       	lsr	r25
    30da:	96 95       	lsr	r25
    30dc:	e9 0f       	add	r30, r25
    30de:	ff 27       	eor	r31, r31
    30e0:	e3 52       	subi	r30, 0x23	; 35
    30e2:	fd 4f       	sbci	r31, 0xFD	; 253
    30e4:	99 27       	eor	r25, r25
    30e6:	33 27       	eor	r19, r19
    30e8:	ee 24       	eor	r14, r14
    30ea:	ff 24       	eor	r15, r15
    30ec:	a7 01       	movw	r20, r14
    30ee:	e7 01       	movw	r28, r14
    30f0:	05 90       	lpm	r0, Z+
    30f2:	08 94       	sec
    30f4:	07 94       	ror	r0
    30f6:	28 f4       	brcc	.+10     	; 0x3102 <__ftoa_engine+0x80>
    30f8:	36 0f       	add	r19, r22
    30fa:	e7 1e       	adc	r14, r23
    30fc:	f8 1e       	adc	r15, r24
    30fe:	49 1f       	adc	r20, r25
    3100:	51 1d       	adc	r21, r1
    3102:	66 0f       	add	r22, r22
    3104:	77 1f       	adc	r23, r23
    3106:	88 1f       	adc	r24, r24
    3108:	99 1f       	adc	r25, r25
    310a:	06 94       	lsr	r0
    310c:	a1 f7       	brne	.-24     	; 0x30f6 <__ftoa_engine+0x74>
    310e:	05 90       	lpm	r0, Z+
    3110:	07 94       	ror	r0
    3112:	28 f4       	brcc	.+10     	; 0x311e <__ftoa_engine+0x9c>
    3114:	e7 0e       	add	r14, r23
    3116:	f8 1e       	adc	r15, r24
    3118:	49 1f       	adc	r20, r25
    311a:	56 1f       	adc	r21, r22
    311c:	c1 1d       	adc	r28, r1
    311e:	77 0f       	add	r23, r23
    3120:	88 1f       	adc	r24, r24
    3122:	99 1f       	adc	r25, r25
    3124:	66 1f       	adc	r22, r22
    3126:	06 94       	lsr	r0
    3128:	a1 f7       	brne	.-24     	; 0x3112 <__ftoa_engine+0x90>
    312a:	05 90       	lpm	r0, Z+
    312c:	07 94       	ror	r0
    312e:	28 f4       	brcc	.+10     	; 0x313a <__ftoa_engine+0xb8>
    3130:	f8 0e       	add	r15, r24
    3132:	49 1f       	adc	r20, r25
    3134:	56 1f       	adc	r21, r22
    3136:	c7 1f       	adc	r28, r23
    3138:	d1 1d       	adc	r29, r1
    313a:	88 0f       	add	r24, r24
    313c:	99 1f       	adc	r25, r25
    313e:	66 1f       	adc	r22, r22
    3140:	77 1f       	adc	r23, r23
    3142:	06 94       	lsr	r0
    3144:	a1 f7       	brne	.-24     	; 0x312e <__ftoa_engine+0xac>
    3146:	05 90       	lpm	r0, Z+
    3148:	07 94       	ror	r0
    314a:	20 f4       	brcc	.+8      	; 0x3154 <__ftoa_engine+0xd2>
    314c:	49 0f       	add	r20, r25
    314e:	56 1f       	adc	r21, r22
    3150:	c7 1f       	adc	r28, r23
    3152:	d8 1f       	adc	r29, r24
    3154:	99 0f       	add	r25, r25
    3156:	66 1f       	adc	r22, r22
    3158:	77 1f       	adc	r23, r23
    315a:	88 1f       	adc	r24, r24
    315c:	06 94       	lsr	r0
    315e:	a9 f7       	brne	.-22     	; 0x314a <__ftoa_engine+0xc8>
    3160:	84 91       	lpm	r24, Z+
    3162:	10 95       	com	r17
    3164:	17 70       	andi	r17, 0x07	; 7
    3166:	41 f0       	breq	.+16     	; 0x3178 <__ftoa_engine+0xf6>
    3168:	d6 95       	lsr	r29
    316a:	c7 95       	ror	r28
    316c:	57 95       	ror	r21
    316e:	47 95       	ror	r20
    3170:	f7 94       	ror	r15
    3172:	e7 94       	ror	r14
    3174:	1a 95       	dec	r17
    3176:	c1 f7       	brne	.-16     	; 0x3168 <__ftoa_engine+0xe6>
    3178:	e3 e8       	ldi	r30, 0x83	; 131
    317a:	f2 e0       	ldi	r31, 0x02	; 2
    317c:	68 94       	set
    317e:	15 90       	lpm	r1, Z+
    3180:	15 91       	lpm	r17, Z+
    3182:	35 91       	lpm	r19, Z+
    3184:	65 91       	lpm	r22, Z+
    3186:	95 91       	lpm	r25, Z+
    3188:	05 90       	lpm	r0, Z+
    318a:	7f e2       	ldi	r23, 0x2F	; 47
    318c:	73 95       	inc	r23
    318e:	e1 18       	sub	r14, r1
    3190:	f1 0a       	sbc	r15, r17
    3192:	43 0b       	sbc	r20, r19
    3194:	56 0b       	sbc	r21, r22
    3196:	c9 0b       	sbc	r28, r25
    3198:	d0 09       	sbc	r29, r0
    319a:	c0 f7       	brcc	.-16     	; 0x318c <__ftoa_engine+0x10a>
    319c:	e1 0c       	add	r14, r1
    319e:	f1 1e       	adc	r15, r17
    31a0:	43 1f       	adc	r20, r19
    31a2:	56 1f       	adc	r21, r22
    31a4:	c9 1f       	adc	r28, r25
    31a6:	d0 1d       	adc	r29, r0
    31a8:	7e f4       	brtc	.+30     	; 0x31c8 <__ftoa_engine+0x146>
    31aa:	70 33       	cpi	r23, 0x30	; 48
    31ac:	11 f4       	brne	.+4      	; 0x31b2 <__ftoa_engine+0x130>
    31ae:	8a 95       	dec	r24
    31b0:	e6 cf       	rjmp	.-52     	; 0x317e <__ftoa_engine+0xfc>
    31b2:	e8 94       	clt
    31b4:	01 50       	subi	r16, 0x01	; 1
    31b6:	30 f0       	brcs	.+12     	; 0x31c4 <__ftoa_engine+0x142>
    31b8:	08 0f       	add	r16, r24
    31ba:	0a f4       	brpl	.+2      	; 0x31be <__ftoa_engine+0x13c>
    31bc:	00 27       	eor	r16, r16
    31be:	02 17       	cp	r16, r18
    31c0:	08 f4       	brcc	.+2      	; 0x31c4 <__ftoa_engine+0x142>
    31c2:	20 2f       	mov	r18, r16
    31c4:	23 95       	inc	r18
    31c6:	02 2f       	mov	r16, r18
    31c8:	7a 33       	cpi	r23, 0x3A	; 58
    31ca:	28 f0       	brcs	.+10     	; 0x31d6 <__ftoa_engine+0x154>
    31cc:	79 e3       	ldi	r23, 0x39	; 57
    31ce:	7d 93       	st	X+, r23
    31d0:	2a 95       	dec	r18
    31d2:	e9 f7       	brne	.-6      	; 0x31ce <__ftoa_engine+0x14c>
    31d4:	10 c0       	rjmp	.+32     	; 0x31f6 <__ftoa_engine+0x174>
    31d6:	7d 93       	st	X+, r23
    31d8:	2a 95       	dec	r18
    31da:	89 f6       	brne	.-94     	; 0x317e <__ftoa_engine+0xfc>
    31dc:	06 94       	lsr	r0
    31de:	97 95       	ror	r25
    31e0:	67 95       	ror	r22
    31e2:	37 95       	ror	r19
    31e4:	17 95       	ror	r17
    31e6:	17 94       	ror	r1
    31e8:	e1 18       	sub	r14, r1
    31ea:	f1 0a       	sbc	r15, r17
    31ec:	43 0b       	sbc	r20, r19
    31ee:	56 0b       	sbc	r21, r22
    31f0:	c9 0b       	sbc	r28, r25
    31f2:	d0 09       	sbc	r29, r0
    31f4:	98 f0       	brcs	.+38     	; 0x321c <__ftoa_engine+0x19a>
    31f6:	23 95       	inc	r18
    31f8:	7e 91       	ld	r23, -X
    31fa:	73 95       	inc	r23
    31fc:	7a 33       	cpi	r23, 0x3A	; 58
    31fe:	08 f0       	brcs	.+2      	; 0x3202 <__ftoa_engine+0x180>
    3200:	70 e3       	ldi	r23, 0x30	; 48
    3202:	7c 93       	st	X, r23
    3204:	20 13       	cpse	r18, r16
    3206:	b8 f7       	brcc	.-18     	; 0x31f6 <__ftoa_engine+0x174>
    3208:	7e 91       	ld	r23, -X
    320a:	70 61       	ori	r23, 0x10	; 16
    320c:	7d 93       	st	X+, r23
    320e:	30 f0       	brcs	.+12     	; 0x321c <__ftoa_engine+0x19a>
    3210:	83 95       	inc	r24
    3212:	71 e3       	ldi	r23, 0x31	; 49
    3214:	7d 93       	st	X+, r23
    3216:	70 e3       	ldi	r23, 0x30	; 48
    3218:	2a 95       	dec	r18
    321a:	e1 f7       	brne	.-8      	; 0x3214 <__ftoa_engine+0x192>
    321c:	11 24       	eor	r1, r1
    321e:	ef 90       	pop	r14
    3220:	ff 90       	pop	r15
    3222:	0f 91       	pop	r16
    3224:	1f 91       	pop	r17
    3226:	cf 91       	pop	r28
    3228:	df 91       	pop	r29
    322a:	99 27       	eor	r25, r25
    322c:	87 fd       	sbrc	r24, 7
    322e:	90 95       	com	r25
    3230:	08 95       	ret

00003232 <strnlen_P>:
    3232:	fc 01       	movw	r30, r24
    3234:	05 90       	lpm	r0, Z+
    3236:	61 50       	subi	r22, 0x01	; 1
    3238:	70 40       	sbci	r23, 0x00	; 0
    323a:	01 10       	cpse	r0, r1
    323c:	d8 f7       	brcc	.-10     	; 0x3234 <strnlen_P+0x2>
    323e:	80 95       	com	r24
    3240:	90 95       	com	r25
    3242:	8e 0f       	add	r24, r30
    3244:	9f 1f       	adc	r25, r31
    3246:	08 95       	ret

00003248 <strnlen>:
    3248:	fc 01       	movw	r30, r24
    324a:	61 50       	subi	r22, 0x01	; 1
    324c:	70 40       	sbci	r23, 0x00	; 0
    324e:	01 90       	ld	r0, Z+
    3250:	01 10       	cpse	r0, r1
    3252:	d8 f7       	brcc	.-10     	; 0x324a <strnlen+0x2>
    3254:	80 95       	com	r24
    3256:	90 95       	com	r25
    3258:	8e 0f       	add	r24, r30
    325a:	9f 1f       	adc	r25, r31
    325c:	08 95       	ret

0000325e <fputc>:
    325e:	0f 93       	push	r16
    3260:	1f 93       	push	r17
    3262:	cf 93       	push	r28
    3264:	df 93       	push	r29
    3266:	8c 01       	movw	r16, r24
    3268:	eb 01       	movw	r28, r22
    326a:	8b 81       	ldd	r24, Y+3	; 0x03
    326c:	81 ff       	sbrs	r24, 1
    326e:	1b c0       	rjmp	.+54     	; 0x32a6 <fputc+0x48>
    3270:	82 ff       	sbrs	r24, 2
    3272:	0d c0       	rjmp	.+26     	; 0x328e <fputc+0x30>
    3274:	2e 81       	ldd	r18, Y+6	; 0x06
    3276:	3f 81       	ldd	r19, Y+7	; 0x07
    3278:	8c 81       	ldd	r24, Y+4	; 0x04
    327a:	9d 81       	ldd	r25, Y+5	; 0x05
    327c:	28 17       	cp	r18, r24
    327e:	39 07       	cpc	r19, r25
    3280:	64 f4       	brge	.+24     	; 0x329a <fputc+0x3c>
    3282:	e8 81       	ld	r30, Y
    3284:	f9 81       	ldd	r31, Y+1	; 0x01
    3286:	01 93       	st	Z+, r16
    3288:	f9 83       	std	Y+1, r31	; 0x01
    328a:	e8 83       	st	Y, r30
    328c:	06 c0       	rjmp	.+12     	; 0x329a <fputc+0x3c>
    328e:	e8 85       	ldd	r30, Y+8	; 0x08
    3290:	f9 85       	ldd	r31, Y+9	; 0x09
    3292:	80 2f       	mov	r24, r16
    3294:	09 95       	icall
    3296:	89 2b       	or	r24, r25
    3298:	31 f4       	brne	.+12     	; 0x32a6 <fputc+0x48>
    329a:	8e 81       	ldd	r24, Y+6	; 0x06
    329c:	9f 81       	ldd	r25, Y+7	; 0x07
    329e:	01 96       	adiw	r24, 0x01	; 1
    32a0:	9f 83       	std	Y+7, r25	; 0x07
    32a2:	8e 83       	std	Y+6, r24	; 0x06
    32a4:	02 c0       	rjmp	.+4      	; 0x32aa <fputc+0x4c>
    32a6:	0f ef       	ldi	r16, 0xFF	; 255
    32a8:	1f ef       	ldi	r17, 0xFF	; 255
    32aa:	c8 01       	movw	r24, r16
    32ac:	df 91       	pop	r29
    32ae:	cf 91       	pop	r28
    32b0:	1f 91       	pop	r17
    32b2:	0f 91       	pop	r16
    32b4:	08 95       	ret

000032b6 <sprintf>:
    32b6:	0f 93       	push	r16
    32b8:	1f 93       	push	r17
    32ba:	df 93       	push	r29
    32bc:	cf 93       	push	r28
    32be:	cd b7       	in	r28, 0x3d	; 61
    32c0:	de b7       	in	r29, 0x3e	; 62
    32c2:	2e 97       	sbiw	r28, 0x0e	; 14
    32c4:	0f b6       	in	r0, 0x3f	; 63
    32c6:	f8 94       	cli
    32c8:	de bf       	out	0x3e, r29	; 62
    32ca:	0f be       	out	0x3f, r0	; 63
    32cc:	cd bf       	out	0x3d, r28	; 61
    32ce:	0d 89       	ldd	r16, Y+21	; 0x15
    32d0:	1e 89       	ldd	r17, Y+22	; 0x16
    32d2:	86 e0       	ldi	r24, 0x06	; 6
    32d4:	8c 83       	std	Y+4, r24	; 0x04
    32d6:	1a 83       	std	Y+2, r17	; 0x02
    32d8:	09 83       	std	Y+1, r16	; 0x01
    32da:	8f ef       	ldi	r24, 0xFF	; 255
    32dc:	9f e7       	ldi	r25, 0x7F	; 127
    32de:	9e 83       	std	Y+6, r25	; 0x06
    32e0:	8d 83       	std	Y+5, r24	; 0x05
    32e2:	9e 01       	movw	r18, r28
    32e4:	27 5e       	subi	r18, 0xE7	; 231
    32e6:	3f 4f       	sbci	r19, 0xFF	; 255
    32e8:	ce 01       	movw	r24, r28
    32ea:	01 96       	adiw	r24, 0x01	; 1
    32ec:	6f 89       	ldd	r22, Y+23	; 0x17
    32ee:	78 8d       	ldd	r23, Y+24	; 0x18
    32f0:	a9 01       	movw	r20, r18
    32f2:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <vfprintf>
    32f6:	2f 81       	ldd	r18, Y+7	; 0x07
    32f8:	38 85       	ldd	r19, Y+8	; 0x08
    32fa:	02 0f       	add	r16, r18
    32fc:	13 1f       	adc	r17, r19
    32fe:	f8 01       	movw	r30, r16
    3300:	10 82       	st	Z, r1
    3302:	2e 96       	adiw	r28, 0x0e	; 14
    3304:	0f b6       	in	r0, 0x3f	; 63
    3306:	f8 94       	cli
    3308:	de bf       	out	0x3e, r29	; 62
    330a:	0f be       	out	0x3f, r0	; 63
    330c:	cd bf       	out	0x3d, r28	; 61
    330e:	cf 91       	pop	r28
    3310:	df 91       	pop	r29
    3312:	1f 91       	pop	r17
    3314:	0f 91       	pop	r16
    3316:	08 95       	ret

00003318 <__ultoa_invert>:
    3318:	fa 01       	movw	r30, r20
    331a:	aa 27       	eor	r26, r26
    331c:	28 30       	cpi	r18, 0x08	; 8
    331e:	51 f1       	breq	.+84     	; 0x3374 <__ultoa_invert+0x5c>
    3320:	20 31       	cpi	r18, 0x10	; 16
    3322:	81 f1       	breq	.+96     	; 0x3384 <__ultoa_invert+0x6c>
    3324:	e8 94       	clt
    3326:	6f 93       	push	r22
    3328:	6e 7f       	andi	r22, 0xFE	; 254
    332a:	6e 5f       	subi	r22, 0xFE	; 254
    332c:	7f 4f       	sbci	r23, 0xFF	; 255
    332e:	8f 4f       	sbci	r24, 0xFF	; 255
    3330:	9f 4f       	sbci	r25, 0xFF	; 255
    3332:	af 4f       	sbci	r26, 0xFF	; 255
    3334:	b1 e0       	ldi	r27, 0x01	; 1
    3336:	3e d0       	rcall	.+124    	; 0x33b4 <__ultoa_invert+0x9c>
    3338:	b4 e0       	ldi	r27, 0x04	; 4
    333a:	3c d0       	rcall	.+120    	; 0x33b4 <__ultoa_invert+0x9c>
    333c:	67 0f       	add	r22, r23
    333e:	78 1f       	adc	r23, r24
    3340:	89 1f       	adc	r24, r25
    3342:	9a 1f       	adc	r25, r26
    3344:	a1 1d       	adc	r26, r1
    3346:	68 0f       	add	r22, r24
    3348:	79 1f       	adc	r23, r25
    334a:	8a 1f       	adc	r24, r26
    334c:	91 1d       	adc	r25, r1
    334e:	a1 1d       	adc	r26, r1
    3350:	6a 0f       	add	r22, r26
    3352:	71 1d       	adc	r23, r1
    3354:	81 1d       	adc	r24, r1
    3356:	91 1d       	adc	r25, r1
    3358:	a1 1d       	adc	r26, r1
    335a:	20 d0       	rcall	.+64     	; 0x339c <__ultoa_invert+0x84>
    335c:	09 f4       	brne	.+2      	; 0x3360 <__ultoa_invert+0x48>
    335e:	68 94       	set
    3360:	3f 91       	pop	r19
    3362:	2a e0       	ldi	r18, 0x0A	; 10
    3364:	26 9f       	mul	r18, r22
    3366:	11 24       	eor	r1, r1
    3368:	30 19       	sub	r19, r0
    336a:	30 5d       	subi	r19, 0xD0	; 208
    336c:	31 93       	st	Z+, r19
    336e:	de f6       	brtc	.-74     	; 0x3326 <__ultoa_invert+0xe>
    3370:	cf 01       	movw	r24, r30
    3372:	08 95       	ret
    3374:	46 2f       	mov	r20, r22
    3376:	47 70       	andi	r20, 0x07	; 7
    3378:	40 5d       	subi	r20, 0xD0	; 208
    337a:	41 93       	st	Z+, r20
    337c:	b3 e0       	ldi	r27, 0x03	; 3
    337e:	0f d0       	rcall	.+30     	; 0x339e <__ultoa_invert+0x86>
    3380:	c9 f7       	brne	.-14     	; 0x3374 <__ultoa_invert+0x5c>
    3382:	f6 cf       	rjmp	.-20     	; 0x3370 <__ultoa_invert+0x58>
    3384:	46 2f       	mov	r20, r22
    3386:	4f 70       	andi	r20, 0x0F	; 15
    3388:	40 5d       	subi	r20, 0xD0	; 208
    338a:	4a 33       	cpi	r20, 0x3A	; 58
    338c:	18 f0       	brcs	.+6      	; 0x3394 <__ultoa_invert+0x7c>
    338e:	49 5d       	subi	r20, 0xD9	; 217
    3390:	31 fd       	sbrc	r19, 1
    3392:	40 52       	subi	r20, 0x20	; 32
    3394:	41 93       	st	Z+, r20
    3396:	02 d0       	rcall	.+4      	; 0x339c <__ultoa_invert+0x84>
    3398:	a9 f7       	brne	.-22     	; 0x3384 <__ultoa_invert+0x6c>
    339a:	ea cf       	rjmp	.-44     	; 0x3370 <__ultoa_invert+0x58>
    339c:	b4 e0       	ldi	r27, 0x04	; 4
    339e:	a6 95       	lsr	r26
    33a0:	97 95       	ror	r25
    33a2:	87 95       	ror	r24
    33a4:	77 95       	ror	r23
    33a6:	67 95       	ror	r22
    33a8:	ba 95       	dec	r27
    33aa:	c9 f7       	brne	.-14     	; 0x339e <__ultoa_invert+0x86>
    33ac:	00 97       	sbiw	r24, 0x00	; 0
    33ae:	61 05       	cpc	r22, r1
    33b0:	71 05       	cpc	r23, r1
    33b2:	08 95       	ret
    33b4:	9b 01       	movw	r18, r22
    33b6:	ac 01       	movw	r20, r24
    33b8:	0a 2e       	mov	r0, r26
    33ba:	06 94       	lsr	r0
    33bc:	57 95       	ror	r21
    33be:	47 95       	ror	r20
    33c0:	37 95       	ror	r19
    33c2:	27 95       	ror	r18
    33c4:	ba 95       	dec	r27
    33c6:	c9 f7       	brne	.-14     	; 0x33ba <__ultoa_invert+0xa2>
    33c8:	62 0f       	add	r22, r18
    33ca:	73 1f       	adc	r23, r19
    33cc:	84 1f       	adc	r24, r20
    33ce:	95 1f       	adc	r25, r21
    33d0:	a0 1d       	adc	r26, r0
    33d2:	08 95       	ret

000033d4 <_exit>:
    33d4:	f8 94       	cli

000033d6 <__stop_program>:
    33d6:	ff cf       	rjmp	.-2      	; 0x33d6 <__stop_program>
